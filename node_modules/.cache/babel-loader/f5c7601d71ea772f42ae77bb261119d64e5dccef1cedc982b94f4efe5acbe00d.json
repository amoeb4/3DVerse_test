{"ast":null,"code":"var _jsxFileName = \"/home/obedience/mission_VLM/my-3dverse-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCENE_ID = \"abf99dad-c4a3-4c99-8bda-57a3bc70074f\"; // Replace with your real scene ID\n\nfunction App() {\n  _s();\n  const viewerRef = useRef(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    // Get user token from backend\n    const fetchToken = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:5000/api/setup-user\");\n        setToken(res.data.userToken.user_token);\n      } catch (err) {\n        console.error(\"Error getting token:\", err);\n      }\n    };\n    fetchToken();\n  }, []);\n  useEffect(() => {\n    if (!token || !window.verse) return;\n    const launchViewer = async () => {\n      const container = viewerRef.current;\n      const config = {\n        container,\n        userToken: token,\n        sceneUUID: SCENE_ID,\n        viewport: {\n          type: \"orbit\" // or \"first-person\"\n        }\n      };\n      try {\n        const app = await window.verse.launch(config);\n        console.log(\"3DVerse Viewer launched!\", app);\n      } catch (error) {\n        console.error(\"Failed to launch viewer:\", error);\n      }\n    };\n    launchViewer();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My 3DVerse Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: viewerRef,\n      style: {\n        width: \"100%\",\n        height: \"600px\",\n        border: \"1px solid #ccc\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"TVs8B8WSE83GDAwAWsspste9zKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","SCENE_ID","App","_s","viewerRef","token","setToken","fetchToken","res","post","data","userToken","user_token","err","console","error","window","verse","launchViewer","container","current","config","sceneUUID","viewport","type","app","launch","log","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","border","_c","$RefreshReg$"],"sources":["/home/obedience/mission_VLM/my-3dverse-app/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nconst SCENE_ID = \"abf99dad-c4a3-4c99-8bda-57a3bc70074f\"; // Replace with your real scene ID\n\nfunction App() {\n    const viewerRef = useRef(null);\n    const [token, setToken] = useState(null);\n\n    useEffect(() => {\n        // Get user token from backend\n        const fetchToken = async () => {\n            try {\n                const res = await axios.post(\"http://localhost:5000/api/setup-user\");\n                setToken(res.data.userToken.user_token);\n            } catch (err) {\n                console.error(\"Error getting token:\", err);\n            }\n        };\n\n        fetchToken();\n    }, []);\n\n    useEffect(() => {\n        if (!token || !window.verse) return;\n\n        const launchViewer = async () => {\n            const container = viewerRef.current;\n\n            const config = {\n                container,\n                userToken: token,\n                sceneUUID: SCENE_ID,\n                viewport: {\n                    type: \"orbit\", // or \"first-person\"\n                },\n            };\n\n            try {\n                const app = await window.verse.launch(config);\n                console.log(\"3DVerse Viewer launched!\", app);\n            } catch (error) {\n                console.error(\"Failed to launch viewer:\", error);\n            }\n        };\n\n        launchViewer();\n    }, [token]);\n\n    return (\n        <div>\n            <h1>My 3DVerse Viewer</h1>\n            <div\n                ref={viewerRef}\n                style={{ width: \"100%\", height: \"600px\", border: \"1px solid #ccc\" }}\n            />\n        </div>\n    );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAG,sCAAsC,CAAC,CAAC;;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCF,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,sCAAsC,CAAC;QACpEH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAACC,SAAS,CAACC,UAAU,CAAC;MAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC9C;IACJ,CAAC;IAEDN,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACZ,IAAI,CAACU,KAAK,IAAI,CAACW,MAAM,CAACC,KAAK,EAAE;IAE7B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,SAAS,GAAGf,SAAS,CAACgB,OAAO;MAEnC,MAAMC,MAAM,GAAG;QACXF,SAAS;QACTR,SAAS,EAAEN,KAAK;QAChBiB,SAAS,EAAErB,QAAQ;QACnBsB,QAAQ,EAAE;UACNC,IAAI,EAAE,OAAO,CAAE;QACnB;MACJ,CAAC;MAED,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMT,MAAM,CAACC,KAAK,CAACS,MAAM,CAACL,MAAM,CAAC;QAC7CP,OAAO,CAACa,GAAG,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAChD,CAAC,CAAC,OAAOV,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEX,oBACIL,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MAAA4B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhC,OAAA;MACIiC,GAAG,EAAE7B,SAAU;MACf8B,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAiB;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC7B,EAAA,CArDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
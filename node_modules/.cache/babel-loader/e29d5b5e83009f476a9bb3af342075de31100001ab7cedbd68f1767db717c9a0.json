{"ast":null,"code":"var _jsxFileName = \"/home/obedience/mission_VLM/my-3dverse-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCENE_ID = \"e0be46dc-7db8-4b44-97e0-b4fff984e41c\"; // Remplace par ton vrai ID\n\nfunction App() {\n  _s();\n  const viewerRef = useRef(null);\n  const [token, setToken] = useState(null);\n\n  // 1. Récupération du token utilisateur depuis ton backend\n  useEffect(() => {\n    const fetchToken = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:5000/api/setup-user\");\n        console.log(\"Token reçu:\", res.data.userToken.user_token);\n        setToken(res.data.userToken.user_token);\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération du token:\", err);\n      }\n    };\n    fetchToken();\n  }, []);\n\n  // 2. Lancement du viewer dès que le token est prêt et le SDK chargé\n  useEffect(() => {\n    if (!token) return;\n    if (!window.verse) {\n      console.error(\"SDK 3DVerse non chargé\");\n      return;\n    }\n    const launchViewer = async () => {\n      try {\n        const app = await window.verse.launch({\n          container: viewerRef.current,\n          userToken: token,\n          sceneUUID: SCENE_ID,\n          viewport: {\n            type: \"orbit\" // type de caméra\n          }\n        });\n        console.log(\"3DVerse Viewer lancé !\", app);\n\n        // Optionnel : tu peux garder une référence à `app` dans un useRef si besoin\n      } catch (error) {\n        console.error(\"Erreur lors du lancement du viewer 3DVerse :\", error);\n      }\n    };\n    launchViewer();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      margin: 0,\n      padding: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My 3DVerse Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: viewerRef,\n      style: {\n        width: \"100%\",\n        height: \"600px\",\n        border: \"1px solid #ccc\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TVs8B8WSE83GDAwAWsspste9zKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","SCENE_ID","App","_s","viewerRef","token","setToken","fetchToken","res","post","console","log","data","userToken","user_token","err","error","window","verse","launchViewer","app","launch","container","current","sceneUUID","viewport","type","style","height","width","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","_c","$RefreshReg$"],"sources":["/home/obedience/mission_VLM/my-3dverse-app/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nconst SCENE_ID = \"e0be46dc-7db8-4b44-97e0-b4fff984e41c\"; // Remplace par ton vrai ID\n\nfunction App() {\n  const viewerRef = useRef(null);\n  const [token, setToken] = useState(null);\n\n  // 1. Récupération du token utilisateur depuis ton backend\n  useEffect(() => {\n    const fetchToken = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:5000/api/setup-user\");\n        console.log(\"Token reçu:\", res.data.userToken.user_token);\n        setToken(res.data.userToken.user_token);\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération du token:\", err);\n      }\n    };\n\n    fetchToken();\n  }, []);\n\n  // 2. Lancement du viewer dès que le token est prêt et le SDK chargé\n  useEffect(() => {\n    if (!token) return;\n    if (!window.verse) {\n      console.error(\"SDK 3DVerse non chargé\");\n      return;\n    }\n\n    const launchViewer = async () => {\n      try {\n        const app = await window.verse.launch({\n          container: viewerRef.current,\n          userToken: token,\n          sceneUUID: SCENE_ID,\n          viewport: {\n            type: \"orbit\", // type de caméra\n          },\n        });\n\n        console.log(\"3DVerse Viewer lancé !\", app);\n\n        // Optionnel : tu peux garder une référence à `app` dans un useRef si besoin\n\n      } catch (error) {\n        console.error(\"Erreur lors du lancement du viewer 3DVerse :\", error);\n      }\n    };\n\n    launchViewer();\n  }, [token]);\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\", margin: 0, padding: 0 }}>\n      <h1>My 3DVerse Viewer</h1>\n      <div\n        ref={viewerRef}\n        style={{ width: \"100%\", height: \"600px\", border: \"1px solid #ccc\" }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAG,sCAAsC,CAAC,CAAC;;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAF,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,sCAAsC,CAAC;QACpEC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,GAAG,CAACI,IAAI,CAACC,SAAS,CAACC,UAAU,CAAC;QACzDR,QAAQ,CAACE,GAAG,CAACI,IAAI,CAACC,SAAS,CAACC,UAAU,CAAC;MACzC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,OAAO,CAACM,KAAK,CAAC,0CAA0C,EAAED,GAAG,CAAC;MAChE;IACF,CAAC;IAEDR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAZ,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,KAAK,EAAE;IACZ,IAAI,CAACY,MAAM,CAACC,KAAK,EAAE;MACjBR,OAAO,CAACM,KAAK,CAAC,wBAAwB,CAAC;MACvC;IACF;IAEA,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACC,KAAK,CAACG,MAAM,CAAC;UACpCC,SAAS,EAAElB,SAAS,CAACmB,OAAO;UAC5BV,SAAS,EAAER,KAAK;UAChBmB,SAAS,EAAEvB,QAAQ;UACnBwB,QAAQ,EAAE;YACRC,IAAI,EAAE,OAAO,CAAE;UACjB;QACF,CAAC,CAAC;QAEFhB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAES,GAAG,CAAC;;QAE1C;MAEF,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA;IAAK2B,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACrEhC,OAAA;MAAAgC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpC,OAAA;MACEqC,GAAG,EAAEjC,SAAU;MACfuB,KAAK,EAAE;QAAEE,KAAK,EAAE,MAAM;QAAED,MAAM,EAAE,OAAO;QAAEU,MAAM,EAAE;MAAiB;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjC,EAAA,CA3DQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
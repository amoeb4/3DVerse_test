import CameraControls, { KeyboardFlyControls } from "@3dverse/livelink-camera-controls";
import type { Entity } from "../../scene/Entity";
import type { Viewport } from "./Viewport";
import { CameraControllerInitOptions, CameraControllerPreset, LockMousePointerAim } from "./CameraControllerPreset";
/**
 * A camera controller based on the `camera-controls` library.
 *
 * @category Camera
 */
export declare class CameraController extends CameraControls {
    #private;
    /**
     * Invert the movement direction of the dolly action on middle button only
     */
    invert_middle_button_dolly: boolean;
    /**
     * Orbit on cursor options
     * @default - { enabled: false, cancel_target_offset: false }
     */
    orbit_on_cursor: {
        /** Enable for the rotate action to pick the orbit target on the pointer down */
        enabled: boolean;
        /** Enable to use the previous target when none is picked to prevent target shift on truck and dolly actions. */
        cancel_target_offset: boolean;
    };
    /**
     * Lock pointer options
     * @default - { aim: "off", on_drag_threshold_in_pixels: 0 }
     */
    lock_pointer: {
        /** Aim of the pointer lock */
        aim: LockMousePointerAim;
        /** Threshold in pixels of the pointer movement before to lock it when `lock_pointer.aim = "on-drag"` */
        on_drag_threshold_in_pixels: number;
    };
    /**
     * Set of options used by `CameraController.initController`
     */
    init_options: Readonly<CameraControllerInitOptions>;
    /**
     *
     */
    keyboard_fly_controls: KeyboardFlyControls | null;
    /**
     *
     */
    constructor({ camera_entity, viewport, activate, preset, }: {
        camera_entity: Entity;
        viewport: Viewport;
        activate?: boolean;
        preset?: CameraControllerPreset;
    });
    /**
     *
     */
    onViewportResize: () => void;
    /**
     *
     */
    release(): void;
    /**
     *
     */
    activate(): void;
    /**
     *
     */
    deactivate(): void;
}
//# sourceMappingURL=CameraController.d.ts.map
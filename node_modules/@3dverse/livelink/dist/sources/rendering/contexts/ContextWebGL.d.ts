import { ContextProvider, type FrameSection } from "./ContextProvider";
/**
 * @category Rendering Surfaces
 */
export type Canvas = HTMLCanvasElement | OffscreenCanvas;
/**
 * @category Rendering Contexts
 */
export declare class ContextWebGL extends ContextProvider {
    /**
     *
     */
    private _canvas;
    /**
     *
     */
    private _context;
    /**
     * The WebGLRenderingContext of the canvas
     */
    private _texture_ref;
    /**
     * The WebGLRenderingContext of the canvas
     */
    private _shader_program;
    /**
     * The alternative frame buffer to draw on.
     */
    private _frame_buffer;
    /**
     *
     */
    get native(): WebGLRenderingContext | WebGL2RenderingContext;
    /**
     *
     */
    set frame_buffer(fb: WebGLFramebuffer);
    /**
     *
     */
    constructor(canvas: Canvas, version?: "webgl" | "webgl2", context_attributes?: WebGLContextAttributes & {
        xrCompatible?: boolean;
    });
    /**
     *
     */
    drawFrameSection({ frame_section }: {
        frame_section: FrameSection;
    }): void;
    /**
     *
     */
    refreshSize(): void;
    /**
     *
     */
    release(): void;
    /**
     *
     */
    private _initShaderProgram;
    /**
     *
     */
    private _initBuffers;
    /**
     *
     */
    private _initTexture;
}
//# sourceMappingURL=ContextWebGL.d.ts.map
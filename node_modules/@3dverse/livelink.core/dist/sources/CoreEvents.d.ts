export * from "./internal/GatewayEvents";
export * from "./internal/EditorEvents";
import { AssetLoadingStatusEvent, AudioReceivedEvent, FrameReceivedEvent, ScriptEventTriggeredEvent } from "./internal/GatewayEvents";
import { EntitiesUpdatedEvent, EntityVisibilityChangedEvent, LoadingCompletedEvent } from "./internal/EditorEvents";
/**
 *
 */
export declare class DisconnectedEvent extends Event {
    readonly reason: DisconnectionReason;
}
/**
 *
 */
export declare class InactivityWarningEvent extends Event {
    /**
     * The number of seconds remaining before the client is disconnected.
     */
    readonly seconds_remaining: number;
    /**
     * Resets the timer for the activity warning.
     */
    readonly resetTimer: () => void;
}
/**
 * Event emitted when activity is detected after a period of inactivity.
 */
export declare class ActivityDetectedEvent extends Event {
}
/**
 *
 */
export type CoreEvents = {
    "on-inactivity-warning": InactivityWarningEvent;
    "on-activity-detected": ActivityDetectedEvent;
    "on-disconnected": DisconnectedEvent;
    "on-frame-received": FrameReceivedEvent;
    "on-audio-received": AudioReceivedEvent;
    "on-script-event-received": ScriptEventTriggeredEvent;
    "on-asset-loading-status-received": AssetLoadingStatusEvent;
    "on-loading-completed": LoadingCompletedEvent;
    "on-entities-updated": EntitiesUpdatedEvent;
    "on-entity-visibility-changed": EntityVisibilityChangedEvent;
};

import { ContextProvider, FrameMetaData, FrameSection, Transform } from "@3dverse/livelink";
/**
 * @experimental
 * @category Rendering Contexts
 */
export declare class XRContext extends ContextProvider {
    #private;
    /**
     *
     */
    screen_distance: number;
    /**
     *
     */
    scale_factor: number;
    /**
     *
     */
    fake_alpha_enabled: boolean;
    /**
     *
     */
    fake_alpha_scale: number;
    /**
     *
     */
    get native(): WebGLRenderingContext | WebGL2RenderingContext;
    /**
     *
     */
    set frame_buffer(fb: WebGLFramebuffer);
    /**
     *
     */
    constructor(canvas: HTMLCanvasElement | OffscreenCanvas, context_type?: "webgl" | "webgl2", context_attributes?: WebGLContextAttributes & {
        xrCompatible?: boolean;
    });
    /**
     *
     */
    drawFrameSection({ frame_section }: {
        frame_section: FrameSection;
    }): void;
    /**
     *
     */
    get meta_data(): FrameMetaData | null;
    /**
     *
     */
    drawXRFrame({ xr_views, xr_viewports, frame_camera_transforms, }: {
        xr_views: XRView[];
        xr_viewports: XRViewport[];
        frame_camera_transforms: Pick<Transform, "position" | "orientation">[];
    }): void;
    /**
     *
     */
    refreshSize(): void;
    /**
     *
     */
    release(): void;
}
//# sourceMappingURL=XRContext.d.ts.map
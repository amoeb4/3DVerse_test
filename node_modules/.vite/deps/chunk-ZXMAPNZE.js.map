{
  "version": 3,
  "sources": ["../../@3dverse/livelink-react/sources/hooks/useEntity.ts", "../../@3dverse/livelink-react/sources/components/core/Livelink.tsx", "../../@3dverse/livelink-react/sources/hooks/useClients.ts", "../../@3dverse/livelink-react/sources/hooks/useCameraEntity.ts", "../../@3dverse/livelink-react/sources/components/core/Canvas.tsx", "../../@3dverse/livelink-react/sources/components/core/Viewport.tsx", "../../@3dverse/livelink-react/sources/components/core/CameraController.tsx", "../../@3dverse/livelink-react/sources/components/utils/Recorder.tsx", "../../@3dverse/livelink-react/sources/index.ts", "../../@3dverse/livelink-react/sources/components/overlays/DOM3DOverlay.tsx", "../../@3dverse/livelink-react/sources/overlays/React3DElement.tsx", "../../@3dverse/node_modules/gl-matrix/esm/common.js", "../../@3dverse/node_modules/gl-matrix/esm/vec3.js", "../../@3dverse/livelink-react/sources/overlays/ReactOverlay.ts", "../../@3dverse/livelink-react/sources/components/overlays/DOM3DElement.tsx", "../../@3dverse/livelink-react/sources/components/overlays/DOMEntity.tsx", "../../@3dverse/livelink/external/YUVCanvas.js", "../../@3dverse/node_modules/@3dverse/livelink.core/sources/DynamicLoader.ts", "../../@3dverse/node_modules/@3dverse/livelink.core/sources/library.ts", "../../@3dverse/livelink/sources/rendering/streaming/FrameMetaData.ts", "../../@3dverse/livelink/sources/rendering/surfaces/Rect.ts", "../../@3dverse/livelink/sources/rendering/streaming/RemoteFrameProxy.ts", "../../@3dverse/node_modules/gl-matrix/esm/common.js", "../../@3dverse/node_modules/gl-matrix/esm/mat3.js", "../../@3dverse/node_modules/gl-matrix/esm/mat4.js", "../../@3dverse/node_modules/gl-matrix/esm/quat.js", "../../@3dverse/node_modules/gl-matrix/esm/vec3.js", "../../@3dverse/node_modules/gl-matrix/esm/vec4.js", "../../@3dverse/livelink/sources/TypedEventTarget.ts", "../../@3dverse/livelink/_prebuild/EntityBase.ts", "../../@3dverse/livelink/sources/scene/EntityEvents.ts", "../../@3dverse/livelink/sources/maths/quaternion.ts", "../../@3dverse/livelink/sources/maths/index.ts", "../../@3dverse/livelink/sources/scene/EntityTransformHandler.ts", "../../@3dverse/livelink/sources/scene/ComponentHandler.ts", "../../@3dverse/livelink/sources/scene/ScriptEvents.ts", "../../@3dverse/livelink/sources/scene/Entity.ts", "../../@3dverse/livelink/sources/scene/Filters.ts", "../../@3dverse/livelink/sources/scene/EntityRegistry.ts", "../../@3dverse/livelink/sources/scene/Scene.ts", "../../@3dverse/livelink/sources/session/Client.ts", "../../@3dverse/livelink/sources/session/SessionEvents.ts", "../../@3dverse/livelink/sources/session/Session.ts", "../../@3dverse/livelink/sources/inputs/Mouse.ts", "../../@3dverse/livelink/sources/inputs/Keyboard.ts", "../../@3dverse/livelink/sources/audio/AudioPlayer.ts", "../../@3dverse/livelink/sources/inputs/GamepadInputRelay.ts", "../../@3dverse/livelink/sources/inputs/PhysicalGamepad.ts", "../../@3dverse/livelink/sources/inputs/GamepadsRegistry.ts", "../../@3dverse/livelink/sources/Livelink.ts", "../../@3dverse/livelink/sources/rendering/camera/ViewportEvents.ts", "../../@3dverse/livelink/sources/rendering/camera/Viewport.ts", "../../@3dverse/node_modules/threejs-math/build/threejs-math.module.js", "../../@3dverse/node_modules/@3dverse/livelink-camera-controls/dist/camera-controls.module.js", "../../@3dverse/livelink/sources/rendering/camera/CameraControllerPresets.ts", "../../@3dverse/livelink/sources/rendering/camera/CameraController.ts", "../../@3dverse/livelink/sources/rendering/camera/CameraProjection.ts", "../../@3dverse/livelink/external/Decoder.js", "../../@3dverse/livelink/sources/rendering/streaming/SoftwareDecoder.ts", "../../@3dverse/livelink/sources/rendering/streaming/EncodedFrameConsumer.ts", "../../@3dverse/livelink/sources/rendering/streaming/WebCodecsDecoder.ts", "../../@3dverse/livelink/sources/rendering/contexts/ContextProvider.ts", "../../@3dverse/livelink/sources/rendering/contexts/Context2D.ts", "../../@3dverse/livelink/sources/rendering/contexts/ContextWebGL.ts", "../../@3dverse/livelink/sources/rendering/surfaces/RenderingSurfaceBase.ts", "../../@3dverse/livelink/sources/rendering/surfaces/VirtualSurface.ts", "../../@3dverse/livelink/sources/rendering/surfaces/CanvasAutoResizer.ts", "../../@3dverse/livelink/sources/rendering/surfaces/RenderingSurfaceEvents.ts", "../../@3dverse/livelink/sources/rendering/surfaces/RenderingSurface.ts", "../../@3dverse/livelink/sources/rendering/surfaces/OffscreenSurface.ts", "../../@3dverse/livelink/sources/index.ts"],
  "sourcesContent": ["//------------------------------------------------------------------------------\nimport { useContext, useEffect, useReducer, useState } from \"react\";\n\n//------------------------------------------------------------------------------\nimport type {\n    Entity,\n    EntityCreationOptions,\n    ComponentsManifest,\n    FindEntityQuery,\n    UUID,\n    ComponentName,\n    EntityUpdatedEvent,\n} from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { LivelinkContext } from \"../components/core/Livelink\";\n\n/**\n * An new entity instance.\n *\n * @inline\n */\ntype NewEntity = {\n    /**\n     * The name of the entity.\n     */\n    name: string;\n\n    /**\n     * The components to attach to the entity with their initial values.\n     */\n    components: ComponentsManifest;\n\n    /**\n     * The creation options of the entity.\n     */\n    options: EntityCreationOptions;\n};\n\n/**\n * @inline\n */\ntype FindEntityQueryByNames = {\n    /**\n     * The names of the entities to find.\n     */\n    names: Array<string>;\n};\n\n/**\n * @inline\n */\ntype FindEntityQueryByName = {\n    /**\n     * The name of the entity to find.\n     */\n    name: string;\n};\n\n/**\n * A provider of an entity.\n */\ntype EntityProvider = NewEntity | FindEntityQueryByName | Exclude<FindEntityQuery, FindEntityQueryByNames>;\n\n/**\n * A hook that provides an entity and a flag indicating if the entity is pending loading.\n *\n * @example\n * ```tsx\n * const { isPending, entity } = useEntity({ id: \"00000000-0000-0000-0000-000000000000\" });\n * if (isPending) {\n *     return <div>Loading...</div>;\n * }\n * if (!entity) {\n *     return <div>Entity not found</div>;\n * }\n * return <div>Entity found: {entity.name}</div>;\n * ```\n * @param entityProvider - The entity provider.\n * @returns The entity and a flag indicating if the entity is pending loading.\n *\n * @category Hooks\n */\nexport function useEntity(\n    entityProvider: EntityProvider,\n    watchedComponents: Array<ComponentName> | \"any\" = [],\n): {\n    isPending: boolean;\n    entity: Entity | null;\n} {\n    const { instance } = useContext(LivelinkContext);\n\n    const [entity, setEntity] = useState<Entity | null>(null);\n    const [isPending, setIsPending] = useState(true);\n    const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n    const findEntityQuery = entityProvider as {\n        euid?: UUID;\n        linkage?: Array<UUID>;\n        name?: string;\n        mandatory_components?: Array<ComponentName>;\n        forbidden_components?: Array<ComponentName>;\n    };\n\n    useEffect(() => {\n        if (!instance) {\n            return;\n        }\n\n        const resolveEntity = async (): Promise<Entity | null> => {\n            if (\"components\" in entityProvider) {\n                console.debug(\"---- Creating entity\");\n                return await instance.scene.newEntity(entityProvider);\n            } else if (\"linkage\" in findEntityQuery) {\n                return await instance.scene.findEntity({\n                    entity_uuid: findEntityQuery.euid!,\n                    linkage: findEntityQuery.linkage,\n                });\n            } else if (\"euid\" in findEntityQuery) {\n                return (await instance.scene.findEntities({ entity_uuid: findEntityQuery.euid! }))[0];\n            } else if (\"name\" in findEntityQuery && findEntityQuery.name) {\n                return (await instance.scene.findEntitiesByNames({ entity_names: [findEntityQuery.name] }))[0];\n            } else if (\"mandatory_components\" in findEntityQuery) {\n                return (\n                    await instance.scene.findEntitiesWithComponents({\n                        mandatory_components: findEntityQuery.mandatory_components!,\n                        forbidden_components: findEntityQuery.forbidden_components,\n                    })\n                )[0];\n            }\n            return null;\n        };\n\n        resolveEntity()\n            .then(foundEntity => setEntity(foundEntity))\n            .finally(() => setIsPending(false));\n\n        return (): void => {\n            setEntity(null);\n            setIsPending(true);\n        };\n    }, [instance, JSON.stringify(findEntityQuery)]);\n\n    useEffect(() => {\n        const alwaysUpdate = watchedComponents === \"any\";\n        const neverUpdate = watchedComponents.length === 0;\n\n        if (!entity || neverUpdate) {\n            return;\n        }\n\n        const triggerUpdate = alwaysUpdate\n            ? forceUpdate\n            : (event: EntityUpdatedEvent): void => {\n                  if (event.isAnyComponentDirty({ components: watchedComponents })) {\n                      forceUpdate();\n                  }\n              };\n\n        entity.addEventListener(\"on-entity-updated\", triggerUpdate);\n\n        return (): void => {\n            entity.removeEventListener(\"on-entity-updated\", triggerUpdate);\n        };\n    }, [entity, watchedComponents]);\n\n    return { isPending, entity };\n}\n", "//------------------------------------------------------------------------------\nimport React, { createContext, JSX, PropsWithChildren, useCallback, useEffect, useRef, useState } from \"react\";\n\n//------------------------------------------------------------------------------\nimport * as Livelink from \"@3dverse/livelink\";\nimport { Livelink as LivelinkInstance, type UUID } from \"@3dverse/livelink\";\nimport { StrictUnion } from \"../../utils\";\n\n/**\n * Context for managing the Livelink connection state.\n *\n * Provides information about the current Livelink instance, connection status,\n * and a method to disconnect from the Livelink service.\n *\n * @category Contexts\n */\nexport const LivelinkContext = createContext<{\n    /** The current Livelink instance or `null` if not connected. */\n    instance: LivelinkInstance | null;\n\n    /** Indicates whether the connection is currently in progress. */\n    isConnecting: boolean;\n\n    /** Indicates whether the connection has been disconnected. */\n    isDisconnected: boolean;\n\n    /** Function to disconnect from the current Livelink session. */\n    disconnect: () => void;\n}>({\n    instance: null,\n    isConnecting: false,\n    isDisconnected: false,\n    disconnect: () => {},\n});\n\n/**\n * Represents the mode for joining an existing session.\n *\n * @inline\n */\nexport type SessionJoinMode = {\n    /**\n     * The UUID of the session to join.\n     */\n    sessionId: UUID;\n};\n\n/**\n * Represents the mode for either joining or starting a session.\n *\n * @inline\n */\nexport type SessionJoinOrStart = {\n    /**\n     * The UUID of the scene to connect to or start a session on.\n     */\n    sceneId: UUID;\n\n    /**\n     * Whether to automatically join any existing session.\n     */\n    autoJoinExisting?: boolean;\n\n    /**\n     * If a new session is started, specifies whether it is transient (non-persistent).\n     * If a session is joined, this property is ignored.\n     */\n    isTransient?: boolean;\n};\n\n/**\n * Represents the mode for joining an existing session as a guest user.\n *\n * @inline\n */\nexport type SessionJoinGuest = {\n    /**\n     * The authentication type for the guest client.\n     */\n    clientType: \"guest\";\n};\n\n/**\n * Represents the union of all possible session open modes.\n *\n * This type includes:\n * - `SessionJoinMode`: For joining an existing session.\n * - `SessionJoinOrStart`: For joining or starting a session based on the provided context.\n *\n * @inline\n */\nexport type SessionOpenMode = StrictUnion<SessionJoinMode | SessionJoinOrStart | SessionJoinGuest>;\n\n/**\n * Parameters for establishing a Livelink connection.\n *\n * Extends `SessionOpenMode` to define the session behavior and includes additional\n * options for handling connection lifecycle events, UI components, and settings.\n *\n * @inline\n * @category Components\n */\nexport type LivelinkConnectParameters = {\n    /**\n     * Authentication token required to establish the connection.\n     */\n    token: string;\n\n    /**\n     * Optional React component or node displayed while the connection is loading.\n     */\n    LoadingPanel?: React.ComponentType<{ stage: string }>;\n\n    /**\n     * Optional React component or node displayed when an inactivity timeout occurs.\n     */\n    InactivityWarningPanel?: React.ComponentType<{ warningDuration: number; onActivityDetected: () => void }>;\n\n    /**\n     * Optional React component or node displayed when the connection is disconnected.\n     */\n    ConnectionErrorPanel?: React.ComponentType<{ error: string }>;\n} & SessionOpenMode;\n\n/**\n * Connection promises map.\n *\n * To deal with React strict mode, and avoiding to create a session multiple times,\n * we need to keep track of the connection promises. The promises are stored\n * using the connection parameters as key.\n *\n * @internal\n */\ntype ConnectionPromisesMap = Map<string, Promise<Livelink.Livelink>>;\n\n/**\n * Provides the Livelink context and manages the lifecycle of a Livelink connection.\n *\n * This component initializes and maintains a connection to the Livelink service\n * and supplies relevant connection state and methods to its children via context.\n *\n * @param params\n *\n * @param params.children - React children components that will have access to the Livelink context.\n * @param params.sceneId - The unique identifier of the scene to connect to (required for \"start\" or \"join-or-start\").\n * @param params.sessionId - The unique identifier of the session to join (required for \"join\").\n * @param params.isTransient - Specifies if the connection is transient (non-persistent).\n * @param params.token - The authentication token required for the Livelink connection.\n * @param params.LoadingPanel - Optional React node displayed while the connection is being established.\n * @param params.InactivityWarningPanel - Optional React node displayed when an inactivity timeout occurs.\n * @param params.ConnectionErrorPanel - Optional React node displayed when the connection is lost.\n * @param params.autoJoinExisting - Specifies the mode for opening the session; defaults to `\"join-or-start\"`.\n *\n * @category Components\n */\nexport function LivelinkProvider({\n    sceneId,\n    sessionId,\n    isTransient,\n    token,\n    LoadingPanel,\n    InactivityWarningPanel,\n    ConnectionErrorPanel,\n    autoJoinExisting = true,\n    clientType,\n    children,\n}: PropsWithChildren<LivelinkConnectParameters>): JSX.Element {\n    const [instance, setInstance] = useState<LivelinkInstance | null>(null);\n    const [isConnecting, setIsConnecting] = useState(true);\n    const [isConnectionLost, setIsConnectionLost] = useState(false);\n    const [inactivityWarning, setInactivityWarning] = useState<Livelink.InactivityWarningEvent | null>(null);\n    const [connectionError, setConnectionError] = useState<string>(\"Unknown error\");\n    const connectionPromises = useRef<ConnectionPromisesMap>(new Map());\n\n    const disconnect = useCallback(() => instance?.disconnect(), [instance]);\n\n    useEffect(() => {\n        const connect = async ({\n            autoJoinExisting,\n            sceneId,\n            sessionId,\n            clientType,\n        }: SessionOpenMode): Promise<Livelink.Livelink> => {\n            if (sessionId) {\n                const session = await Livelink.Session.findById({ session_id: sessionId, token });\n                if (!session) {\n                    throw new Error(`Session '${sessionId}' not found on scene '${sceneId}'`);\n                }\n                return LivelinkInstance.join({ session });\n            }\n\n            if (sceneId) {\n                if (autoJoinExisting) {\n                    return LivelinkInstance.join_or_start({ scene_id: sceneId, token, is_transient: isTransient });\n                } else {\n                    return LivelinkInstance.start({ scene_id: sceneId, token, is_transient: isTransient });\n                }\n            }\n\n            if (clientType === \"guest\") {\n                const session = await Livelink.Session.findByGuestToken({ guest_token: token });\n                if (!session) {\n                    throw new Error(`No session available for guest token '${token}'`);\n                }\n\n                return LivelinkInstance.join({ session });\n            }\n\n            throw new Error(\"What are we doing here?!\");\n        };\n\n        /**\n         * To deal with React strict mode, and avoiding to create a session multiple times,\n         * we need to keep track of the connection promises. The promises are stored\n         * using the connection parameters as key.\n         *\n         * @returns The connection promise for the given parameters.\n         */\n        const getOrCreateConnectionPromise = (params: LivelinkConnectParameters): Promise<Livelink.Livelink> => {\n            const key = getConnectionPromiseKey(params);\n            let promise = connectionPromises.current.get(key);\n            if (!promise) {\n                promise = connect(params).then(instance => {\n                    connectionPromises.current.delete(key);\n                    return instance;\n                });\n                connectionPromises.current.set(key, promise);\n            }\n            return promise;\n        };\n\n        /**\n         * Abort controller to avoid side effects when the component is unmounted.\n         */\n        const abort_controller = new AbortController();\n\n        const onActivityDetected = (): void => {\n            setInactivityWarning(null);\n        };\n\n        getOrCreateConnectionPromise({\n            autoJoinExisting,\n            sceneId,\n            sessionId,\n            token,\n            clientType,\n        } as LivelinkConnectParameters)\n            .then(instance => {\n                // if the component is unmounted, stop right here, and do not proceed with the connection\n                if (abort_controller.signal.aborted) {\n                    return;\n                }\n\n                console.debug(\"Connected to Livelink\", instance);\n                configureClient(instance);\n                setInstance(instance);\n                instance.TO_REMOVE__setReadyCallback(async () => {\n                    instance.startStreaming();\n                    setIsConnecting(false);\n                });\n\n                instance.session.addEventListener(\"on-inactivity-warning\", setInactivityWarning);\n                instance.session.addEventListener(\"on-activity-detected\", onActivityDetected);\n            })\n            .catch(error => {\n                console.debug(\"Failed to connect to Livelink\", error);\n                setIsConnecting(false);\n                setIsConnectionLost(true);\n                setConnectionError(error);\n            });\n\n        return (): void => {\n            abort_controller.abort();\n\n            instance?.session.removeEventListener(\"on-inactivity-warning\", setInactivityWarning);\n            instance?.session.removeEventListener(\"on-activity-detected\", onActivityDetected);\n\n            setInstance(null);\n            setIsConnecting(true);\n            setIsConnectionLost(false);\n            setInactivityWarning(null);\n        };\n    }, [token, autoJoinExisting, sceneId, sessionId, isTransient, clientType]);\n\n    useEffect(() => {\n        if (!instance) {\n            return;\n        }\n\n        // Allow the hook user to be notified of a disconnection occuring while the above operations run.\n        // Still not perfect, because the gateway might disconnect before the instance is returned during\n        // the GatewayController.authenticateClient or EditorController.connectToSession of livelink-core.\n        // Also nothing's notify the livelink user of a loss of the EditorConnection.\n\n        const onDisconnectedHandler = (event: Livelink.DisconnectedEvent): void => {\n            setIsConnectionLost(true);\n            setInactivityWarning(null);\n            setConnectionError(event.reason);\n        };\n\n        instance.session.addEventListener(\"on-disconnected\", onDisconnectedHandler);\n\n        return (): void => {\n            instance.session.removeEventListener(\"on-disconnected\", onDisconnectedHandler);\n        };\n    }, [instance]);\n\n    // Disconnect when unmounted\n    useEffect(() => {\n        return (): void => {\n            instance?.disconnect();\n        };\n    }, [instance]);\n\n    return (\n        <LivelinkContext.Provider\n            value={{\n                instance,\n                isConnecting,\n                isDisconnected: isConnectionLost,\n                disconnect,\n            }}\n        >\n            {isConnecting && LoadingPanel && <LoadingPanel stage={\"\"} />}\n            {isConnectionLost && ConnectionErrorPanel && <ConnectionErrorPanel error={connectionError} />}\n            {inactivityWarning && InactivityWarningPanel && (\n                <InactivityWarningPanel\n                    warningDuration={inactivityWarning.seconds_remaining}\n                    onActivityDetected={() => {\n                        inactivityWarning.resetTimer();\n                        setInactivityWarning(null);\n                    }}\n                />\n            )}\n            {children}\n        </LivelinkContext.Provider>\n    );\n}\n\n//------------------------------------------------------------------------------\nfunction configureClient(instance: LivelinkInstance): void {\n    const configure = async (): Promise<void> => {\n        instance.session.removeEventListener(\"TO_REMOVE__viewports-added\", configure);\n\n        console.debug(\"-- Configuring client\");\n        const webcodec = await Livelink.WebCodecsDecoder.findSupportedCodec();\n        await instance.configureRemoteServer({ codec: webcodec || undefined });\n\n        await instance.setEncodedFrameConsumer({\n            encoded_frame_consumer:\n                webcodec !== null\n                    ? new Livelink.WebCodecsDecoder({ decoded_frame_consumer: instance.default_decoded_frame_consumer })\n                    : new Livelink.SoftwareDecoder({ decoded_frame_consumer: instance.default_decoded_frame_consumer }),\n        });\n\n        instance.TO_REMOVE__startIfReady();\n    };\n\n    instance.session.addEventListener(\"TO_REMOVE__viewports-added\", configure);\n}\n\n//------------------------------------------------------------------------------\nfunction getConnectionPromiseKey(params: LivelinkConnectParameters): string {\n    return JSON.stringify(params);\n}\n\n//------------------------------------------------------------------------------\nexport { LivelinkProvider as Livelink };\n", "//------------------------------------------------------------------------------\nimport { useContext, useEffect, useState } from \"react\";\n\n//------------------------------------------------------------------------------\nimport { Client } from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { LivelinkContext } from \"../components/core/Livelink\";\n\n/**\n * Provides a list of all clients connected to the current session.\n *\n * @category Hooks\n */\nexport function useClients(): { clients: Array<Client> } {\n    const { instance } = useContext(LivelinkContext);\n\n    const [clients, setClients] = useState<Array<Client>>([]);\n\n    useEffect(() => {\n        if (!instance) {\n            return;\n        }\n\n        const onClientsChanged = (): void => setClients(instance.session.other_clients);\n\n        instance.session.addEventListener(\"on-client-joined\", onClientsChanged);\n        instance.session.addEventListener(\"on-client-left\", onClientsChanged);\n\n        onClientsChanged();\n\n        return (): void => {\n            instance.session.removeEventListener(\"on-client-joined\", onClientsChanged);\n            instance.session.removeEventListener(\"on-client-left\", onClientsChanged);\n            setClients([]);\n        };\n    }, [instance]);\n\n    return { clients };\n}\n", "//------------------------------------------------------------------------------\nimport type { Vec3, Quat, RenderGraphDataObject, Entity, UUID, ComponentName, Components } from \"@3dverse/livelink\";\nimport { useEntity } from \"./useEntity\";\nimport { StrictUnion } from \"../utils\";\n\n/**\n * An exclusive union of the perspective and orthographic lenses.\n * @inline\n * @internal\n */\nexport type CameraLensProps =\n    | {\n          /**\n           * The perspective lens of the camera entity, can't be used with orthographic_lens.\n           */\n          perspective_lens?: Partial<Components.PerspectiveLens>;\n      }\n    | {\n          /**\n           * The orthographic lens of the camera entity, can't be used with perspective_lens.\n           */\n          orthographic_lens?: Partial<Components.OrthographicLens>;\n      };\n\n/**\n * The properties of the render graph the camera will entity use.\n * @inline\n * @internal\n */\nexport type RenderGraphProps = {\n    /**\n     * The render graph to use within the camera entity.\n     */\n    renderGraphRef?: UUID;\n\n    /**\n     * The settings of the camera entity.\n     */\n    settings?: RenderGraphDataObject;\n\n    /**\n     * The render target index to use to render the frame.\n     */\n    renderTargetIndex?: number;\n};\n\n/**\n * The properties of the initial transform of the camera entity.\n * Defines an exclusive union between orientation and eulerOrientation.\n * @inline\n * @internal\n */\nexport type OrientationProps =\n    | {\n          /**\n           * The initial orientation of the camera entity in quaternion form, can't be used with eulerOrientation.\n           */\n          orientation?: Quat;\n      }\n    | {\n          /**\n           * The initial orientation of the camera entity in Euler angles form, can't be used with orientation.\n           */\n          eulerOrientation?: Vec3;\n      };\n\n/**\n * The properties used to create a camera entity.\n * @inline\n * @internal\n */\nexport type UseCameraEntityProps = {\n    /**\n     * The name of the camera entity.\n     */\n    name?: string;\n\n    /**\n     * The initial position of the camera entity.\n     */\n    position?: Vec3;\n} & StrictUnion<OrientationProps> &\n    StrictUnion<CameraLensProps> &\n    RenderGraphProps;\n\n/**\n * A hook that creates a camera entity.\n *\n * @param props - The properties used to create the camera entity.\n * @param watchedComponents - The components to watch for changes. If any component in this list changes,\n * the entity trigger a redraw. If set to \"any\", the entity will trigger a redraw on any component change.\n *\n * @returns The camera entity and a boolean indicating if the entity is pending creation.\n *\n * @category Hooks\n */\nexport function useCameraEntity(\n    props: UseCameraEntityProps = {},\n    watchedComponents: Array<ComponentName> | \"any\" = [],\n): {\n    isPending: boolean;\n    cameraEntity: Entity | null;\n} {\n    const {\n        name = \"Camera\",\n        position = [0, 1, 5],\n        orientation: _orientation = [0, 0, 0, 1],\n        eulerOrientation: _eulerOrientation = [0, 0, 0],\n        renderGraphRef = \"398ee642-030a-45e7-95df-7147f6c43392\",\n        settings = { grid: true, skybox: false, gradient: true },\n        renderTargetIndex = -1,\n        perspective_lens: _perspective_lens = { fovy: 60, nearPlane: 0.1, farPlane: 10000 },\n    } = props;\n\n    const orientation = \"orientation\" in props ? _orientation : undefined;\n    const eulerOrientation = !orientation && \"eulerOrientation\" in props ? _eulerOrientation : undefined;\n\n    const orthographic_lens = \"orthographic_lens\" in props ? props.orthographic_lens : undefined;\n    const perspective_lens = !orthographic_lens ? _perspective_lens : undefined;\n\n    const { isPending, entity: cameraEntity } = useEntity(\n        {\n            name,\n            components: {\n                local_transform: { position, orientation, eulerOrientation },\n                camera: { renderGraphRef, dataJSON: settings, renderTargetIndex },\n                perspective_lens,\n                orthographic_lens,\n            },\n            options: { auto_broadcast: false, delete_on_client_disconnection: true },\n        },\n        watchedComponents,\n    );\n\n    return { isPending, cameraEntity };\n}\n", "//------------------------------------------------------------------------------\nimport React, {\n    createContext,\n    CSSProperties,\n    HTMLProps,\n    JSX,\n    PropsWithChildren,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\n\n//------------------------------------------------------------------------------\nimport { RenderingSurface } from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { LivelinkContext } from \"./Livelink\";\n\n/**\n * Context providing the canvas element and the rendering surface.\n *\n * @param canvas - The canvas element.\n * @param renderingSurface - The rendering surface.\n *\n * @category Contexts\n */\nexport const CanvasContext = createContext<{\n    canvas: HTMLCanvasElement | null;\n    renderingSurface: RenderingSurface | null;\n}>({\n    canvas: null,\n    renderingSurface: null,\n});\n\n//------------------------------------------------------------------------------\ntype CanvasContext =\n    | {\n          contextType: \"2d\";\n          contextAttributes?: CanvasRenderingContext2DSettings;\n      }\n    | {\n          contextType: \"webgl\";\n          contextAttributes?: WebGLContextAttributes & { xrCompatible?: boolean };\n      }\n    | {\n          contextType?: undefined;\n          contextAttributes?: undefined;\n      };\n\n/**\n * A component that provides a canvas element and a rendering surface.\n *\n * @param params - The canvas context.\n * @param params.children - The children to render.\n * @param params.contextType - The context type of the canvas.\n * @param params.contextAttributes - The context attributes of the canvas.\n * @param params.width - The width of the canvas.\n * @param params.height - The height of the canvas.\n *\n * @returns The canvas component.\n *\n * @category Components\n */\nexport function Canvas({\n    children,\n    contextType = \"2d\",\n    contextAttributes,\n    width,\n    height,\n    ...props\n}: PropsWithChildren<CanvasContext & HTMLProps<HTMLDivElement>>): JSX.Element {\n    const { instance } = useContext(LivelinkContext);\n    const { canvas: parentCanvas } = useContext(CanvasContext);\n\n    const [renderingSurface, setRenderingSurface] = useState<RenderingSurface | null>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        if (!instance || !canvasRef.current) {\n            return;\n        }\n\n        console.debug(\"--- Setting rendering surface\");\n\n        const rect = canvasRef.current.getBoundingClientRect();\n        if (!rect.width || !rect.height) {\n            console.error(\n                `Canvas element has an invalid size : [${rect.width} x ${rect.height}] it will not be mounted as a rendering surface.`,\n                canvasRef.current,\n            );\n            return;\n        }\n\n        const surface = new RenderingSurface({\n            canvas_element: canvasRef.current,\n            context_type: contextType,\n            context_attributes: contextAttributes,\n        });\n\n        setRenderingSurface(surface);\n\n        return (): void => {\n            console.debug(\"--- Removing rendering surface\");\n            surface.release();\n            setRenderingSurface(null);\n        };\n    }, [instance, contextType, contextAttributes]);\n\n    return (\n        <CanvasContext.Provider value={{ canvas: canvasRef.current, renderingSurface }}>\n            <div\n                data-role=\"canvas-container\"\n                style={computeCanvasContainerStyle({ parentCanvas, width, height })}\n                {...props}\n            >\n                <canvas\n                    ref={canvasRef}\n                    style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        pointerEvents: \"none\",\n                    }}\n                />\n                {children}\n            </div>\n        </CanvasContext.Provider>\n    );\n}\n\n//------------------------------------------------------------------------------\nfunction computeCanvasContainerStyle({\n    parentCanvas,\n    width,\n    height,\n}: {\n    parentCanvas: HTMLCanvasElement | null;\n    width?: string | number;\n    height?: string | number;\n}): CSSProperties {\n    const isNestedCanvas = Boolean(parentCanvas);\n    const commonStyle = { overflow: \"clip\" } satisfies CSSProperties;\n    const nestedCanvasStyle = { position: \"absolute\", width, height } satisfies CSSProperties;\n    const rootCanvasStyle = {\n        position: \"relative\",\n        width: width ?? \"100%\",\n        height: height ?? \"100%\",\n    } satisfies CSSProperties;\n    return { ...commonStyle, ...(isNestedCanvas ? nestedCanvasStyle : rootCanvasStyle) };\n}\n", "//------------------------------------------------------------------------------\nimport React, {\n    createContext,\n    forwardRef,\n    HTMLProps,\n    JSX,\n    Ref,\n    PropsWithChildren,\n    useCallback,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n    useImperativeHandle,\n} from \"react\";\n\n//------------------------------------------------------------------------------\nimport * as Livelink from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { LivelinkContext } from \"./Livelink\";\nimport { CanvasContext } from \"./Canvas\";\nimport { StrictUnion } from \"../../utils\";\n\n/**\n * Context that provides a viewport.\n *\n * @category Contexts\n */\nexport const ViewportContext = createContext<{\n    viewport: Livelink.Viewport | null;\n    viewportDomElement: HTMLDivElement | null;\n    zIndex: number;\n    camera: Livelink.CameraProjection | null;\n}>({\n    viewport: null,\n    viewportDomElement: null,\n    zIndex: 0,\n    camera: null,\n});\n\n/**\n * A viewport component.\n *\n * @category Components\n */\nexport const Viewport = forwardRef(function (\n    {\n        setHoveredEntity,\n        setPickedEntity,\n        renderTargetIndex = -1,\n        children,\n        ...props\n    }: PropsWithChildren<\n        StrictUnion<\n            | {\n                  cameraEntity: Livelink.Entity | null;\n              }\n            | {\n                  client: Livelink.Client;\n                  cameraIndex?: number;\n              }\n        > & {\n            setHoveredEntity?: (\n                data: { entity: Livelink.Entity; ws_position: Livelink.Vec3; ws_normal: Livelink.Vec3 } | null,\n            ) => void;\n            setPickedEntity?: (\n                data: { entity: Livelink.Entity; ws_position: Livelink.Vec3; ws_normal: Livelink.Vec3 } | null,\n            ) => void;\n            renderTargetIndex?: number;\n        } & HTMLProps<HTMLDivElement>\n    >,\n    ref: Ref<Livelink.Viewport | undefined>,\n): JSX.Element {\n    const { cameraEntity, client, cameraIndex, ...otherProps } = props as {\n        cameraEntity?: Livelink.Entity | null;\n        cameraIndex?: number;\n        client?: Livelink.Client;\n    } & HTMLProps<HTMLDivElement>;\n\n    //--------------------------------------------------------------------------\n    const { instance } = useContext(LivelinkContext);\n    const { renderingSurface, canvas } = useContext(CanvasContext);\n    const { zIndex: parentZIndex = 0 } = useContext(ViewportContext);\n\n    //--------------------------------------------------------------------------\n    const [viewport, setViewport] = useState<Livelink.Viewport | null>(null);\n    const [clientCameraEntity, setClientCameraEntity] = useState<Livelink.Entity | null>(null);\n    const [camera, setCamera] = useState<Livelink.CameraProjection | null>(null);\n    const viewportDomElement = useRef<HTMLDivElement>(null);\n\n    //--------------------------------------------------------------------------\n    useImperativeHandle(ref, () => viewport ?? undefined, [viewport]);\n\n    //--------------------------------------------------------------------------\n    const onResize = useCallback(() => {\n        if (!viewportDomElement.current || !canvas || !viewport) {\n            return;\n        }\n\n        console.debug(\"---- Resizing viewport\", viewportDomElement.current);\n        viewport.relative_rect = Livelink.RelativeRect.from_dom_elements({\n            element: viewportDomElement.current,\n            parent: canvas,\n        });\n    }, [viewport, canvas, viewportDomElement.current]);\n\n    //--------------------------------------------------------------------------\n    useEffect(() => {\n        if (!viewportDomElement.current) {\n            return;\n        }\n\n        const resizeObserver = new ResizeObserver(onResize);\n        resizeObserver.observe(viewportDomElement.current);\n        return (): void => {\n            resizeObserver.disconnect();\n        };\n    }, [viewportDomElement.current, onResize]);\n\n    //--------------------------------------------------------------------------\n    useEffect(() => {\n        if (!renderingSurface) {\n            return;\n        }\n\n        renderingSurface.addEventListener(\"on-rendering-surface-resized\", onResize);\n        return (): void => {\n            renderingSurface.removeEventListener(\"on-rendering-surface-resized\", onResize);\n        };\n    }, [renderingSurface, onResize]);\n\n    //--------------------------------------------------------------------------\n    const zIndex = parentZIndex + 1;\n    useEffect(() => {\n        if (!instance || !renderingSurface || !canvas || !viewportDomElement.current) {\n            return;\n        }\n\n        try {\n            const rect = Livelink.RelativeRect.from_dom_elements({\n                element: viewportDomElement.current,\n                parent: canvas,\n            });\n\n            const viewport = new Livelink.Viewport({\n                core: instance,\n                rendering_surface: renderingSurface,\n                options: {\n                    rect,\n                    z_index: zIndex,\n                    render_target_index: renderTargetIndex,\n                    dom_element: viewportDomElement.current,\n                },\n            });\n\n            console.debug(\"---- Setting viewport\", viewport.width, viewport.height, zIndex);\n            instance.addViewports({ viewports: [viewport] });\n            setViewport(viewport);\n\n            return (): void => {\n                console.debug(\"---- Removing viewport\");\n                instance.removeViewport({ viewport });\n                viewport.release();\n                setViewport(null);\n            };\n        } catch (error) {\n            if (error instanceof Livelink.OutOfBoundsError) {\n                console.error(\n                    \"A viewport MUST be contained into its parent Canvas bounds\",\n                    viewportDomElement.current,\n                    canvas,\n                );\n            } else if (error instanceof Livelink.InvalidSizeError) {\n                console.error(\n                    `Viewport element has an invalid size : [${error.rect.width} x ${error.rect.height}].`,\n                    canvas,\n                );\n            } else {\n                console.error(\"Failed to mount viewport\", viewportDomElement.current, error);\n            }\n        }\n    }, [instance, renderingSurface, canvas, zIndex]);\n\n    //--------------------------------------------------------------------------\n    useEffect(() => {\n        if (client) {\n            client.getCameraEntities().then(cameraEntities => {\n                setClientCameraEntity(cameraEntities[cameraIndex ?? 0]);\n            });\n        } else {\n            setClientCameraEntity(cameraEntity ?? null);\n        }\n    }, [cameraEntity, client, cameraIndex]);\n\n    //--------------------------------------------------------------------------\n    useEffect(() => {\n        if (!viewport || !clientCameraEntity) {\n            return;\n        }\n\n        console.debug(\"---- Setting camera\", clientCameraEntity);\n        viewport.camera_projection = new Livelink.CameraProjection({ camera_entity: clientCameraEntity, viewport });\n        setCamera(viewport.camera_projection);\n    }, [viewport, clientCameraEntity]);\n\n    //--------------------------------------------------------------------------\n    useEffect(() => {\n        if (!viewport) {\n            return;\n        }\n\n        const onEntityPicked = (e: Livelink.EntityPickedEvent): void =>\n            setPickedEntity?.(\n                e.picked_entity && e.ws_position && e.ws_normal\n                    ? { entity: e.picked_entity, ws_position: e.ws_position, ws_normal: e.ws_normal }\n                    : null,\n            );\n        if (setPickedEntity) {\n            viewport.activatePicking();\n            viewport.addEventListener(\"on-entity-picked\", onEntityPicked);\n        }\n\n        const onEntityHovered = (e: Livelink.EntityHoveredEvent): void =>\n            setHoveredEntity?.(\n                e.hovered_entity && e.ws_position && e.ws_normal\n                    ? { entity: e.hovered_entity, ws_position: e.ws_position, ws_normal: e.ws_normal }\n                    : null,\n            );\n        if (setHoveredEntity) {\n            viewport.activateHovering();\n            viewport.addEventListener(\"on-entity-hovered\", onEntityHovered);\n        }\n\n        return (): void => {\n            if (setPickedEntity) {\n                viewport.removeEventListener(\"on-entity-picked\", onEntityPicked);\n                viewport.deactivatePicking();\n            }\n\n            if (setHoveredEntity) {\n                viewport.removeEventListener(\"on-entity-hovered\", onEntityHovered);\n                viewport.deactivateHovering();\n            }\n        };\n    }, [viewport, setPickedEntity, setHoveredEntity]);\n\n    //--------------------------------------------------------------------------\n    return (\n        <ViewportContext.Provider\n            value={{\n                viewport,\n                viewportDomElement: viewportDomElement.current,\n                zIndex,\n                camera: camera,\n            }}\n        >\n            <div ref={viewportDomElement} data-role=\"viewport\" {...otherProps}>\n                {children}\n            </div>\n        </ViewportContext.Provider>\n    );\n});\n", "//------------------------------------------------------------------------------\nimport React, {\n    createContext,\n    forwardRef,\n    PropsWithChildren,\n    Ref,\n    useContext,\n    useEffect,\n    useImperativeHandle,\n    useState,\n} from \"react\";\n\n//------------------------------------------------------------------------------\nimport {\n    CameraController as DefaultCameraController,\n    CameraControllerPresets,\n    CameraControllerPreset,\n} from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { ViewportContext } from \"./Viewport\";\n\n/**\n * Context that provides a camera controller.\n *\n * @category Contexts\n */\nexport const CameraControllerContext = createContext<{\n    cameraController: DefaultCameraController | undefined;\n}>({\n    cameraController: undefined,\n});\n\n/**\n * A component that provides a camera controller.\n *\n * @category Components\n */\nexport const CameraController = forwardRef(function CameraController(\n    { preset = CameraControllerPresets.orbital, children }: PropsWithChildren & { preset?: CameraControllerPreset },\n    ref: Ref<DefaultCameraController | undefined>,\n) {\n    const { viewport, camera } = useContext(ViewportContext);\n    const [cameraController, setCameraController] = useState<DefaultCameraController | undefined>(undefined);\n    useImperativeHandle(ref, () => cameraController, [cameraController]);\n\n    useEffect(() => {\n        if (!viewport || !camera) {\n            return;\n        }\n\n        const controller = new DefaultCameraController({\n            camera_entity: camera.camera_entity,\n            viewport,\n            preset,\n        });\n\n        setCameraController(controller);\n\n        return (): void => {\n            controller.release();\n            setCameraController(undefined);\n        };\n    }, [viewport, camera, preset]);\n\n    return <CameraControllerContext.Provider value={{ cameraController }}>{children}</CameraControllerContext.Provider>;\n});\n", "import React, { ReactNode, useContext, useEffect, useMemo, useState } from \"react\";\nimport { CanvasContext } from \"../core/Canvas\";\n\n/**\n * @experimental\n *\n * Recorder component for recording video from a canvas.\n *\n * @category Components\n */\nexport function Recorder({\n    fileOptions = {\n        description: \"Video recording\",\n        accept: {\n            \"video/webm\": [\".webm\"],\n        },\n    },\n    recorderOptions = {\n        mimeType: `video/webm; codecs=\"vp8\"`,\n        videoBitsPerSecond: 10000000,\n    },\n    streamOptions = {\n        frameRequestRate: 30,\n    },\n    children,\n}: {\n    fileOptions?: FilePickerAcceptType;\n    recorderOptions?: MediaRecorderOptions;\n    streamOptions?: { frameRequestRate: number };\n    children?: (props: { recordTime: number }) => ReactNode;\n}): ReactNode {\n    const { renderingSurface } = useContext(CanvasContext);\n    const [recordTime, setRecordTime] = useState(0);\n    const [isRecording, setIsRecording] = useState(false);\n\n    const mediaRecorder = useMemo(() => {\n        if (!renderingSurface) {\n            return null;\n        }\n\n        const stream = renderingSurface.canvas.captureStream(streamOptions.frameRequestRate);\n        return new MediaRecorder(stream, recorderOptions);\n    }, [renderingSurface]);\n\n    useEffect(() => {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        window.showSaveFilePicker({ types: [fileOptions] }).then(async (fileHandle: FileSystemFileHandle) => {\n            const fileStream: FileSystemWritableFileStream = await fileHandle.createWritable();\n            mediaRecorder.ondataavailable = (event: BlobEvent): void => {\n                if (event.data.size > 0) {\n                    fileStream.write(event.data);\n                }\n            };\n            mediaRecorder.onstop = (): void => {\n                fileStream.close();\n            };\n            mediaRecorder.start();\n            setIsRecording(true);\n        });\n\n        return (): void => {\n            mediaRecorder.stop();\n        };\n    }, [mediaRecorder]);\n\n    useEffect(() => {\n        if (!isRecording) {\n            return;\n        }\n\n        const interval = setInterval(() => {\n            setRecordTime((prev: number) => prev + 1);\n        }, 1000);\n\n        return (): void => clearInterval(interval);\n    }, [isRecording]);\n\n    return <>{children ? children({ recordTime }) : null}</>;\n}\n", "export * from \"./hooks/useEntity\";\nexport * from \"./hooks/useClients\";\nexport * from \"./hooks/useCameraEntity\";\n\nexport * from \"./components/core/Livelink\";\nexport * from \"./components/core/Canvas\";\nexport * from \"./components/core/Viewport\";\nexport * from \"./components/core/CameraController\";\nexport * from \"./components/utils/Recorder\";\nexport { CameraController as DefaultCameraController } from \"@3dverse/livelink\";\n\nexport * from \"./components/overlays/DOM3DOverlay\";\nexport * from \"./components/overlays/DOM3DElement\";\nexport * from \"./components/overlays/DOMEntity\";\n\nexport * from \"./overlays/ReactOverlay\";\nexport * from \"./overlays/React3DElement\";\n\nexport * from \"./utils\";\n\n//------------------------------------------------------------------------------\n/**\n * Version of the Livelink React library, injected by the build system.\n * @internal\n */\ndeclare const LIVELINK_REACT_VERSION: string;\n\n/**\n * Name of the package, injected by the build system.\n * @internal\n */\ndeclare const PACKAGE_NAME: string;\n\n//------------------------------------------------------------------------------\ndeclare global {\n    interface Window {\n        __LIVELINK__: Record<string, string>;\n    }\n}\n\n//------------------------------------------------------------------------------\nif (typeof window !== \"undefined\") {\n    if (!window.__LIVELINK__) {\n        window.__LIVELINK__ = {};\n    }\n\n    if (Object.prototype.hasOwnProperty.call(window.__LIVELINK__, PACKAGE_NAME)) {\n        console.warn(\"\u26A0\uFE0F WARNING \u26A0\uFE0F Multiple instances of Livelink React \u269B\uFE0F being imported.\");\n    } else {\n        window.__LIVELINK__[PACKAGE_NAME] = LIVELINK_REACT_VERSION;\n    }\n}\n", "//------------------------------------------------------------------------------\nimport React, {\n    createContext,\n    HTMLProps,\n    JSX,\n    PropsWithChildren,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\n\n//------------------------------------------------------------------------------\nimport { ViewportContext } from \"../core/Viewport\";\nimport { ReactOverlay } from \"../../overlays/ReactOverlay\";\n\n/**\n * Context that provides an overlay.\n *\n * @category Contexts\n */\nexport const OverlayContext = createContext<ReactOverlay | null>(null);\n\n/**\n * A component that provides a DOM 3D overlay.\n *\n * @category Components\n */\nexport function DOM3DOverlay({ children, ...props }: PropsWithChildren<HTMLProps<HTMLDivElement>>): JSX.Element {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [overlay, setOverlay] = useState<ReactOverlay | null>(null);\n    const { viewport } = useContext(ViewportContext);\n\n    useEffect(() => {\n        if (!viewport || !containerRef.current) {\n            return;\n        }\n\n        const overlay = new ReactOverlay({ container: containerRef.current, viewport });\n        viewport.addOverlay({ overlay });\n\n        setOverlay(overlay);\n\n        return (): void => {\n            viewport.removeOverlay({ overlay });\n        };\n    }, [viewport, containerRef]);\n\n    return (\n        <OverlayContext.Provider value={overlay}>\n            <div\n                ref={containerRef}\n                data-role=\"dom-3d-overlay\"\n                style={{\n                    position: \"absolute\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    top: \"0\",\n                    pointerEvents: \"none\",\n                    padding: \"inherit\",\n                    overflow: \"hidden\",\n                }}\n                {...props}\n            >\n                {children}\n            </div>\n        </OverlayContext.Provider>\n    );\n}\n", "import React, { PropsWithChildren, ReactNode } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { vec3 } from \"gl-matrix\";\nimport type { ReactOverlay, Projection } from \"./ReactOverlay\";\nimport { Vec2 } from \"@3dverse/livelink\";\n\n/**\n *\n */\nexport type Anchor =\n    | \"left-top\"\n    | \"left-center\"\n    | \"left-bottom\"\n    | \"center-top\"\n    | \"center\"\n    | \"center-bottom\"\n    | \"right-top\"\n    | \"right-center\"\n    | \"right-bottom\";\n\n/**\n *\n */\ntype HorizontalAnchor = \"left\" | \"center\" | \"right\";\n\n/**\n *\n */\ntype VerticalAnchor = \"top\" | \"center\" | \"bottom\";\n\n/**\n *\n */\nexport type React3DElementProps = PropsWithChildren<{\n    worldPosition: vec3;\n    anchor: Anchor;\n    scaleFactor?: number;\n}>;\n\n/**\n * @internal\n */\nexport function createReact3DElementFactory(overlay: ReactOverlay): (props: React3DElementProps) => React.ReactElement {\n    return (props: React3DElementProps): React.ReactElement => {\n        return <React3DElement overlay={overlay} {...props} />;\n    };\n}\n\n/**\n * @internal\n */\nexport class React3DElement extends React.Component<\n    { overlay: ReactOverlay } & React3DElementProps,\n    { screen_position: vec3; z_index: number; scale: number; is_visible: boolean; translation: Vec2 }\n> {\n    /**\n     *\n     */\n    static VerticalAnchorPositions: Record<VerticalAnchor, number> = {\n        top: 0,\n        center: -50,\n        bottom: -100,\n    };\n\n    /**\n     *\n     */\n    static HorizontalAnchorPositions: Record<HorizontalAnchor, number> = {\n        left: 0,\n        center: -50,\n        right: -100,\n    };\n\n    /**\n     *\n     */\n    state = {\n        screen_position: vec3.create(),\n        z_index: 0,\n        scale: 1,\n        is_visible: false,\n        translation: [0, 0] as Vec2,\n    };\n\n    /**\n     *\n     */\n    componentDidMount(): void {\n        this.#updateTranslation();\n        this.props.overlay._registerElement(this);\n    }\n\n    /**\n     *\n     */\n    componentDidUpdate(\n        prevProps: Readonly<\n            { overlay: ReactOverlay } & React3DElementProps & {\n                    children?: ReactNode | undefined;\n                }\n        >,\n    ): void {\n        if (\n            prevProps.worldPosition.some((v, i) => v !== this.props.worldPosition[i]) ||\n            prevProps.anchor !== this.props.anchor ||\n            prevProps.scaleFactor !== this.props.scaleFactor\n        ) {\n            this.#updateTranslation();\n            this.props.overlay._updateElement();\n        }\n    }\n\n    /**\n     *\n     */\n\n    /**\n     *\n     */\n    componentWillUnmount(): void {\n        this.props.overlay._unregisterElement(this);\n    }\n\n    /**\n     *\n     */\n    get screen_position(): vec3 {\n        return this.state.screen_position;\n    }\n\n    /**\n     *\n     */\n    get world_position(): vec3 {\n        return this.props.worldPosition;\n    }\n\n    /**\n     *\n     */\n    get scale_factor(): number | undefined {\n        return this.props.scaleFactor;\n    }\n\n    /**\n     *\n     */\n    setProjection(state: Projection & { z_index: number }): void {\n        this.setState(state);\n    }\n\n    /**\n     *\n     */\n    #updateTranslation(): void {\n        if (this.props.anchor === \"center\") {\n            this.setState({\n                translation: [\n                    React3DElement.HorizontalAnchorPositions.center,\n                    React3DElement.VerticalAnchorPositions.center,\n                ],\n            });\n            return;\n        }\n\n        const [anchor_x, anchor_y] = this.props.anchor.split(\"-\") as [HorizontalAnchor, VerticalAnchor];\n\n        this.setState({\n            translation: [\n                React3DElement.HorizontalAnchorPositions[anchor_x],\n                React3DElement.VerticalAnchorPositions[anchor_y],\n            ],\n        });\n    }\n\n    /**\n     *\n     */\n    render(): ReactNode {\n        if (!this.state.is_visible) {\n            return null;\n        }\n\n        const transformStyle = `\n            translate(${this.state.translation[0]}%, ${this.state.translation[1]}%)\n            translate(${this.state.screen_position[0]}px, ${this.state.screen_position[1]}px)`;\n\n        return createPortal(\n            <div\n                style={{\n                    position: \"absolute\",\n                    transform: transformStyle,\n                    zIndex: this.state.z_index,\n                    pointerEvents: \"auto\",\n                }}\n            >\n                {this.scale_factor ? (\n                    <div style={{ transform: `scale(${this.state.scale})` }}>{this.props.children}</div>\n                ) : (\n                    this.props.children\n                )}\n            </div>,\n            this.props.overlay.container,\n        );\n    }\n}\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "//------------------------------------------------------------------------------\nimport React from \"react\";\n\n//------------------------------------------------------------------------------\nimport type { Vec3, OverlayInterface, Viewport } from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { React3DElement, React3DElementProps, createReact3DElementFactory } from \"./React3DElement\";\n\n/**\n *\n */\nconst INFINITE_FAR_VALUE = 100000;\n\n/**\n *\n */\nexport type Projection = {\n    screen_position: Vec3;\n    scale: number;\n    is_visible: boolean;\n};\n\n/**\n *\n */\nexport class ReactOverlay implements OverlayInterface {\n    /**\n     *\n     */\n    readonly container: HTMLDivElement;\n\n    /**\n     *\n     */\n    readonly #elements: Set<React3DElement> = new Set();\n\n    /**\n     *\n     */\n    readonly #viewport: Viewport;\n\n    /**\n     *\n     */\n    readonly #factory: (props: React3DElementProps) => React.ReactElement;\n\n    /**\n     *\n     */\n    constructor({ container, viewport }: { container: HTMLDivElement; viewport: Viewport }) {\n        this.container = container;\n        this.#viewport = viewport;\n        this.#factory = createReact3DElementFactory(this);\n    }\n\n    /**\n     *\n     */\n    get DOM3DElement(): (props: React3DElementProps) => React.ReactElement {\n        return this.#factory;\n    }\n\n    /**\n     * @internal\n     */\n    _registerElement(react_element: React3DElement): void {\n        this.#elements.add(react_element);\n        this.#viewport.rendering_surface.redrawLastFrame();\n    }\n\n    /**\n     * @internal\n     */\n    _unregisterElement(react_element: React3DElement): void {\n        if (!this.#elements.delete(react_element)) {\n            console.warn(`Element ref not found in dom overlay`);\n        }\n    }\n\n    _updateElement(): void {\n        this.#viewport.rendering_surface.redrawLastFrame();\n    }\n\n    /**\n     *\n     */\n    resize({ width, height }: { width: number; height: number }): void {\n        this.container.style.width = width + \"px\";\n        this.container.style.height = height + \"px\";\n    }\n\n    /**\n     *\n     */\n    draw(): OffscreenCanvas | null {\n        if (!this.#viewport.isValid()) {\n            return null;\n        }\n\n        this.updateElements();\n        return null;\n    }\n\n    /**\n     *\n     */\n    updateElements(): void {\n        const elements: Array<{\n            projection: Projection;\n            react_element: React3DElement;\n        }> = [];\n\n        for (const react_element of this.#elements.values()) {\n            const projection = this.#projectElementOnScreen({ react_element });\n            elements.push({ projection, react_element });\n        }\n\n        elements.sort((a, b) => b.projection.screen_position[2] - a.projection.screen_position[2]);\n        elements.forEach(({ projection, react_element }, z_index) => {\n            react_element.setProjection({ ...projection, z_index });\n        });\n    }\n\n    /**\n     *\n     */\n    #projectElementOnScreen({ react_element }: { react_element: React3DElement }): Projection {\n        const screen_position = this.#viewport.projectWorldToScreen({\n            world_position: react_element.world_position as Vec3,\n            out_screen_position: react_element.screen_position as Vec3,\n        });\n\n        const scale = react_element.scale_factor\n            ? this.#computeElementScale({ screen_position, scale_factor: react_element.scale_factor })\n            : 1.0;\n\n        const is_visible = screen_position[2] < 1.0 && screen_position[2] > 0;\n\n        return {\n            screen_position,\n            scale,\n            is_visible,\n        };\n    }\n\n    /**\n     *\n     */\n    #computeElementScale({ screen_position, scale_factor }: { screen_position: Vec3; scale_factor: number }): number {\n        const camera = this.#viewport.camera_projection?.camera_entity;\n        if (!camera) {\n            throw new Error(\"Viewport has no camera\");\n        }\n\n        const near =\n            (camera.perspective_lens ? camera.perspective_lens.nearPlane : camera.orthographic_lens?.zFar) ?? 0;\n        const far =\n            (camera.perspective_lens\n                ? camera.perspective_lens.farPlane || INFINITE_FAR_VALUE\n                : camera.orthographic_lens?.zNear) ?? 1;\n\n        return (far - near) * (1 - screen_position[2]) * scale_factor;\n    }\n\n    /**\n     *\n     */\n    release(): void {\n        // We need to unmount the root in the next event loop\n        // iteration to avoid unmounting the root while rendering.\n        setTimeout(() => {\n            this.#elements.clear();\n        }, 0);\n    }\n}\n", "//------------------------------------------------------------------------------\nimport React, { PropsWithChildren, useContext } from \"react\";\nimport type { Vec3 } from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { OverlayContext } from \"./DOM3DOverlay\";\nimport type { Anchor } from \"../../overlays/React3DElement\";\n\n/**\n * A component that renders a 3D DOM element.\n *\n * @category Components\n */\nexport function DOM3DElement({\n    worldPosition,\n    anchor = \"center\",\n    scaleFactor,\n    children,\n}: PropsWithChildren<{\n    worldPosition: Vec3;\n    anchor?: Anchor;\n    scaleFactor?: number;\n}>): React.JSX.Element | null {\n    const overlay = useContext(OverlayContext);\n    if (!overlay) {\n        return null;\n    }\n\n    return (\n        <overlay.DOM3DElement worldPosition={worldPosition} anchor={anchor} scaleFactor={scaleFactor}>\n            {children}\n        </overlay.DOM3DElement>\n    );\n}\n", "//------------------------------------------------------------------------------\nimport React, { JSX, PropsWithChildren, useEffect, useState } from \"react\";\n\n//------------------------------------------------------------------------------\nimport type { Entity, Vec3 } from \"@3dverse/livelink\";\n\n//------------------------------------------------------------------------------\nimport { DOM3DElement } from \"./DOM3DElement\";\nimport { Anchor } from \"../../overlays/React3DElement\";\n\n/**\n * A component that renders a DOM element at the position of an entity.\n *\n * @category Components\n */\nexport function DOMEntity({\n    entity,\n    scaleFactor,\n    anchor,\n    children,\n}: PropsWithChildren<{\n    entity: Entity | null;\n    anchor?: Anchor;\n    scaleFactor?: number;\n}>): JSX.Element | null {\n    const [worldPosition, setWorldPosition] = useState<Vec3>(entity ? entity.global_transform.position : [0, 0, 0]);\n    const [isVisible, setIsVisible] = useState(entity ? entity.is_visible : false);\n\n    useEffect(() => {\n        if (!entity) {\n            return;\n        }\n\n        const updatePosition = (): void => setWorldPosition(entity.global_transform.position);\n        const updateVisibility = (): void => setIsVisible(entity.is_visible);\n\n        // Initialize states\n        updatePosition();\n        updateVisibility();\n\n        entity.addEventListener(\"on-entity-updated\", updatePosition);\n        entity.addEventListener(\"on-entity-visibility-changed\", updateVisibility);\n        return (): void => {\n            entity.removeEventListener(\"on-entity-updated\", updatePosition);\n            entity.removeEventListener(\"on-entity-visibility-changed\", updateVisibility);\n        };\n    }, [entity]);\n\n    if (!entity || !isVisible) {\n        return null;\n    }\n\n    return (\n        <DOM3DElement worldPosition={worldPosition} anchor={anchor} scaleFactor={scaleFactor}>\n            {children}\n        </DOM3DElement>\n    );\n}\n", "//\n//  Copyright (c) 2015 Paperspace Co. All rights reserved.\n//\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to\n//  deal in the Software without restriction, including without limitation the\n//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n//  sell copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n//\n//  The above copyright notice and this permission notice shall be included in\n//  all copies or substantial portions of the Software.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n//  IN THE SOFTWARE.\n//\n\n// universal module definition\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof exports === \"object\") {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.YUVCanvas = factory();\n    }\n})(this, function () {\n    /**\n     * This class can be used to render output pictures from an H264bsdDecoder to a canvas element.\n     * If available the content is rendered using WebGL.\n     */\n    function YUVCanvas(parOptions) {\n        parOptions = parOptions || {};\n\n        this.canvasElement = parOptions.canvas || document.createElement(\"canvas\");\n        this.contextOptions = parOptions.contextOptions;\n\n        this.type = parOptions.type || \"yuv420\";\n\n        this.customYUV444 = parOptions.customYUV444;\n\n        this.conversionType = parOptions.conversionType || \"rec601\";\n\n        this.width = parOptions.width || 640;\n        this.height = parOptions.height || 320;\n\n        this.animationTime = parOptions.animationTime || 0;\n\n        this.canvasElement.width = this.width;\n        this.canvasElement.height = this.height;\n\n        this.fakeAlphaEnabled = parOptions.fakeAlphaEnabled === true ? 1 : 0;\n\n        this.initContextGL();\n\n        if (this.contextGL) {\n            this.initProgram();\n            this.initBuffers();\n            this.initTextures();\n        }\n\n        /**\n         * Draw the next output picture using WebGL\n         */\n        if (this.type === \"yuv420\") {\n            this.drawNextOuptutPictureGL = function (par) {\n                var gl = this.contextGL;\n                var texturePosBuffer = this.texturePosBuffer;\n                var uTexturePosBuffer = this.uTexturePosBuffer;\n                var vTexturePosBuffer = this.vTexturePosBuffer;\n\n                var yTextureRef = this.yTextureRef;\n                var uTextureRef = this.uTextureRef;\n                var vTextureRef = this.vTextureRef;\n\n                var yData = par.yData;\n                var uData = par.uData;\n                var vData = par.vData;\n\n                var width = this.width;\n                var height = this.height;\n\n                var yDataPerRow = par.yDataPerRow || width;\n                var yRowCnt = par.yRowCnt || height;\n\n                var uDataPerRow = par.uDataPerRow || width / 2;\n                var uRowCnt = par.uRowCnt || height / 2;\n\n                var vDataPerRow = par.vDataPerRow || uDataPerRow;\n                var vRowCnt = par.vRowCnt || uRowCnt;\n\n                gl.viewport(0, 0, this.viewportWidth || width, this.viewportHeight || height);\n\n                var tTop = 0;\n                var tLeft = 0;\n                var tBottom = height / yRowCnt;\n                var tRight = width / yDataPerRow;\n                var texturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, texturePosValues, gl.DYNAMIC_DRAW);\n\n                if (this.customYUV444) {\n                    tBottom = height / uRowCnt;\n                    tRight = width / uDataPerRow;\n                } else {\n                    tBottom = height / 2 / uRowCnt;\n                    tRight = width / 2 / uDataPerRow;\n                }\n                var uTexturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, uTexturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, uTexturePosValues, gl.DYNAMIC_DRAW);\n\n                if (this.customYUV444) {\n                    tBottom = height / vRowCnt;\n                    tRight = width / vDataPerRow;\n                } else {\n                    tBottom = height / 2 / vRowCnt;\n                    tRight = width / 2 / vDataPerRow;\n                }\n                var vTexturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, vTexturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, vTexturePosValues, gl.DYNAMIC_DRAW);\n\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, yTextureRef);\n                gl.texImage2D(\n                    gl.TEXTURE_2D,\n                    0,\n                    gl.LUMINANCE,\n                    yDataPerRow,\n                    yRowCnt,\n                    0,\n                    gl.LUMINANCE,\n                    gl.UNSIGNED_BYTE,\n                    yData,\n                );\n\n                gl.activeTexture(gl.TEXTURE1);\n                gl.bindTexture(gl.TEXTURE_2D, uTextureRef);\n                gl.texImage2D(\n                    gl.TEXTURE_2D,\n                    0,\n                    gl.LUMINANCE,\n                    uDataPerRow,\n                    uRowCnt,\n                    0,\n                    gl.LUMINANCE,\n                    gl.UNSIGNED_BYTE,\n                    uData,\n                );\n\n                gl.activeTexture(gl.TEXTURE2);\n                gl.bindTexture(gl.TEXTURE_2D, vTextureRef);\n                gl.texImage2D(\n                    gl.TEXTURE_2D,\n                    0,\n                    gl.LUMINANCE,\n                    vDataPerRow,\n                    vRowCnt,\n                    0,\n                    gl.LUMINANCE,\n                    gl.UNSIGNED_BYTE,\n                    vData,\n                );\n\n                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n            };\n        } else if (this.type === \"yuv422\") {\n            this.drawNextOuptutPictureGL = function (par) {\n                var gl = this.contextGL;\n                var texturePosBuffer = this.texturePosBuffer;\n\n                var textureRef = this.textureRef;\n\n                var data = par.data;\n\n                var width = this.width;\n                var height = this.height;\n\n                var dataPerRow = par.dataPerRow || width * 2;\n                var rowCnt = par.rowCnt || height;\n\n                gl.viewport(0, 0, width, height);\n\n                var tTop = 0;\n                var tLeft = 0;\n                var tBottom = height / rowCnt;\n                var tRight = width / (dataPerRow / 2);\n                var texturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n                gl.bufferData(gl.ARRAY_BUFFER, texturePosValues, gl.DYNAMIC_DRAW);\n\n                gl.uniform2f(gl.getUniformLocation(this.shaderProgram, \"resolution\"), dataPerRow, height);\n\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, textureRef);\n                gl.texImage2D(\n                    gl.TEXTURE_2D,\n                    0,\n                    gl.LUMINANCE,\n                    dataPerRow,\n                    rowCnt,\n                    0,\n                    gl.LUMINANCE,\n                    gl.UNSIGNED_BYTE,\n                    data,\n                );\n\n                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n            };\n        }\n    }\n\n    /**\n     * Returns true if the canvas supports WebGL\n     */\n    YUVCanvas.prototype.isWebGL = function () {\n        return this.contextGL;\n    };\n\n    /**\n     * Create the GL context from the canvas element\n     */\n    YUVCanvas.prototype.initContextGL = function () {\n        var canvas = this.canvasElement;\n        var gl = null;\n\n        var validContextNames = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"];\n        var nameIndex = 0;\n\n        while (!gl && nameIndex < validContextNames.length) {\n            var contextName = validContextNames[nameIndex];\n\n            try {\n                if (this.contextOptions) {\n                    gl = canvas.getContext(contextName, this.contextOptions);\n                } else {\n                    gl = canvas.getContext(contextName);\n                }\n            } catch (e) {\n                gl = null;\n            }\n\n            if (!gl || typeof gl.getParameter !== \"function\") {\n                gl = null;\n            }\n\n            ++nameIndex;\n        }\n\n        this.contextGL = gl;\n    };\n\n    /**\n     * Initialize GL shader program\n     */\n    YUVCanvas.prototype.initProgram = function () {\n        var gl = this.contextGL;\n\n        // vertex shader is the same for all types\n        var vertexShaderScript;\n        var fragmentShaderScript;\n\n        if (this.type === \"yuv420\") {\n            vertexShaderScript = [\n                \"attribute vec4 vertexPos;\",\n                \"attribute vec4 texturePos;\",\n                \"attribute vec4 uTexturePos;\",\n                \"attribute vec4 vTexturePos;\",\n                \"varying vec2 textureCoord;\",\n                \"varying vec2 uTextureCoord;\",\n                \"varying vec2 vTextureCoord;\",\n\n                \"void main()\",\n                \"{\",\n                \"  gl_Position = vertexPos;\",\n                \"  textureCoord = texturePos.xy;\",\n                \"  uTextureCoord = uTexturePos.xy;\",\n                \"  vTextureCoord = vTexturePos.xy;\",\n                \"}\",\n            ].join(\"\\n\");\n\n            fragmentShaderScript = [\n                \"precision highp float;\",\n                \"varying highp vec2 textureCoord;\",\n                \"varying highp vec2 uTextureCoord;\",\n                \"varying highp vec2 vTextureCoord;\",\n                \"uniform sampler2D ySampler;\",\n                \"uniform sampler2D uSampler;\",\n                \"uniform sampler2D vSampler;\",\n                \"uniform mat4 YUV2RGB;\",\n                \"uniform int fakeAlphaEnabled;\",\n\n                \"void main(void) {\",\n                \"  highp float y = texture2D(ySampler,  textureCoord).r;\",\n                \"  highp float u = texture2D(uSampler,  uTextureCoord).r;\",\n                \"  highp float v = texture2D(vSampler,  vTextureCoord).r;\",\n                \"  gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;\",\n                // HACK dirty alpha compute\n                \"  if(fakeAlphaEnabled == 1) {\",\n                \"     highp float maxIntensity = max(max(gl_FragColor.r, gl_FragColor.g), gl_FragColor.b);\",\n                \"     if(maxIntensity < 0.1) gl_FragColor.a = maxIntensity;\",\n                \"  }\",\n                \"}\",\n            ].join(\"\\n\");\n        } else if (this.type === \"yuv422\") {\n            vertexShaderScript = [\n                \"attribute vec4 vertexPos;\",\n                \"attribute vec4 texturePos;\",\n                \"varying vec2 textureCoord;\",\n\n                \"void main()\",\n                \"{\",\n                \"  gl_Position = vertexPos;\",\n                \"  textureCoord = texturePos.xy;\",\n                \"}\",\n            ].join(\"\\n\");\n\n            fragmentShaderScript = [\n                \"precision highp float;\",\n                \"varying highp vec2 textureCoord;\",\n                \"uniform sampler2D sampler;\",\n                \"uniform highp vec2 resolution;\",\n                \"uniform mat4 YUV2RGB;\",\n                \"uniform int fakeAlphaEnabled;\",\n\n                \"void main(void) {\",\n\n                \"  highp float texPixX = 1.0 / resolution.x;\",\n                \"  highp float logPixX = 2.0 / resolution.x;\", // half the resolution of the texture\n                \"  highp float logHalfPixX = 4.0 / resolution.x;\", // half of the logical resolution so every 4th pixel\n                \"  highp float steps = floor(textureCoord.x / logPixX);\",\n                \"  highp float uvSteps = floor(textureCoord.x / logHalfPixX);\",\n                \"  highp float y = texture2D(sampler, vec2((logPixX * steps) + texPixX, textureCoord.y)).r;\",\n                \"  highp float u = texture2D(sampler, vec2((logHalfPixX * uvSteps), textureCoord.y)).r;\",\n                \"  highp float v = texture2D(sampler, vec2((logHalfPixX * uvSteps) + texPixX + texPixX, textureCoord.y)).r;\",\n\n                //'  highp float y = texture2D(sampler,  textureCoord).r;',\n                //'  gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;',\n                \"  gl_FragColor = vec4(y, u, v, 1.0) * YUV2RGB;\",\n                \"  if(fakeAlphaEnabled == 1) {\",\n                \"     highp float maxIntensity = max(max(gl_FragColor.r, gl_FragColor.g), gl_FragColor.b);\",\n                \"     if(maxIntensity < 0.1) gl_FragColor.a = maxIntensity;\",\n                \"  }\",\n                \"}\",\n            ].join(\"\\n\");\n        }\n\n        var YUV2RGB = [];\n\n        if (this.conversionType == \"rec709\") {\n            // ITU-T Rec. 709\n            YUV2RGB = [\n                1.16438, 0.0, 1.79274, -0.97295, 1.16438, -0.21325, -0.53291, 0.30148, 1.16438, 2.1124, 0.0, -1.1334, 0,\n                0, 0, 1,\n            ];\n        } else {\n            // assume ITU-T Rec. 601\n            YUV2RGB = [\n                1.16438, 0.0, 1.59603, -0.87079, 1.16438, -0.39176, -0.81297, 0.52959, 1.16438, 2.01723, 0.0, -1.08139,\n                0, 0, 0, 1,\n            ];\n        }\n\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertexShaderScript);\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            console.error(\"Vertex shader failed to compile: \" + gl.getShaderInfoLog(vertexShader));\n        }\n\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragmentShaderScript);\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            console.error(\"Fragment shader failed to compile: \" + gl.getShaderInfoLog(fragmentShader));\n        }\n\n        var program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            console.error(\"Program failed to compile: \" + gl.getProgramInfoLog(program));\n        }\n\n        gl.useProgram(program);\n\n        var YUV2RGBRef = gl.getUniformLocation(program, \"YUV2RGB\");\n        gl.uniformMatrix4fv(YUV2RGBRef, false, YUV2RGB);\n        var fakeAlphaEnabledRef = gl.getUniformLocation(program, \"fakeAlphaEnabled\");\n        gl.uniform1i(fakeAlphaEnabledRef, this.fakeAlphaEnabled);\n\n        this.shaderProgram = program;\n    };\n\n    /**\n     * Initialize vertex buffers and attach to shader program\n     */\n    YUVCanvas.prototype.initBuffers = function () {\n        var gl = this.contextGL;\n        var program = this.shaderProgram;\n\n        var vertexPosBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n\n        var vertexPosRef = gl.getAttribLocation(program, \"vertexPos\");\n        gl.enableVertexAttribArray(vertexPosRef);\n        gl.vertexAttribPointer(vertexPosRef, 2, gl.FLOAT, false, 0, 0);\n\n        if (this.animationTime) {\n            var animationTime = this.animationTime;\n            var timePassed = 0;\n            var stepTime = 15;\n\n            var aniFun = function () {\n                timePassed += stepTime;\n                var mul = (1 * timePassed) / animationTime;\n\n                if (timePassed >= animationTime) {\n                    mul = 1;\n                } else {\n                    setTimeout(aniFun, stepTime);\n                }\n\n                var neg = -1 * mul;\n                var pos = 1 * mul;\n\n                var vertexPosBuffer = gl.createBuffer();\n                gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);\n                gl.bufferData(\n                    gl.ARRAY_BUFFER,\n                    new Float32Array([pos, pos, neg, pos, pos, neg, neg, neg]),\n                    gl.STATIC_DRAW,\n                );\n\n                var vertexPosRef = gl.getAttribLocation(program, \"vertexPos\");\n                gl.enableVertexAttribArray(vertexPosRef);\n                gl.vertexAttribPointer(vertexPosRef, 2, gl.FLOAT, false, 0, 0);\n\n                try {\n                    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n                } catch (e) {}\n            };\n            aniFun();\n        }\n\n        var texturePosBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n        var texturePosRef = gl.getAttribLocation(program, \"texturePos\");\n        gl.enableVertexAttribArray(texturePosRef);\n        gl.vertexAttribPointer(texturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n        this.texturePosBuffer = texturePosBuffer;\n\n        if (this.type === \"yuv420\") {\n            var uTexturePosBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, uTexturePosBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n            var uTexturePosRef = gl.getAttribLocation(program, \"uTexturePos\");\n            gl.enableVertexAttribArray(uTexturePosRef);\n            gl.vertexAttribPointer(uTexturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n            this.uTexturePosBuffer = uTexturePosBuffer;\n\n            var vTexturePosBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, vTexturePosBuffer);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n\n            var vTexturePosRef = gl.getAttribLocation(program, \"vTexturePos\");\n            gl.enableVertexAttribArray(vTexturePosRef);\n            gl.vertexAttribPointer(vTexturePosRef, 2, gl.FLOAT, false, 0, 0);\n\n            this.vTexturePosBuffer = vTexturePosBuffer;\n        }\n    };\n\n    /**\n     * Initialize GL textures and attach to shader program\n     */\n    YUVCanvas.prototype.initTextures = function () {\n        var gl = this.contextGL;\n        var program = this.shaderProgram;\n\n        if (this.type === \"yuv420\") {\n            var yTextureRef = this.initTexture();\n            var ySamplerRef = gl.getUniformLocation(program, \"ySampler\");\n            gl.uniform1i(ySamplerRef, 0);\n            this.yTextureRef = yTextureRef;\n\n            var uTextureRef = this.initTexture();\n            var uSamplerRef = gl.getUniformLocation(program, \"uSampler\");\n            gl.uniform1i(uSamplerRef, 1);\n            this.uTextureRef = uTextureRef;\n\n            var vTextureRef = this.initTexture();\n            var vSamplerRef = gl.getUniformLocation(program, \"vSampler\");\n            gl.uniform1i(vSamplerRef, 2);\n            this.vTextureRef = vTextureRef;\n        } else if (this.type === \"yuv422\") {\n            // only one texture for 422\n            var textureRef = this.initTexture();\n            var samplerRef = gl.getUniformLocation(program, \"sampler\");\n            gl.uniform1i(samplerRef, 0);\n            this.textureRef = textureRef;\n        }\n    };\n\n    /**\n     * Create and configure a single texture\n     */\n    YUVCanvas.prototype.initTexture = function () {\n        var gl = this.contextGL;\n\n        var textureRef = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, textureRef);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        return textureRef;\n    };\n\n    /**\n     * Draw picture data to the canvas.\n     * If this object is using WebGL, the data must be an I420 formatted ArrayBuffer,\n     * Otherwise, data must be an RGBA formatted ArrayBuffer.\n     */\n    YUVCanvas.prototype.drawNextOutputPicture = function (width, height, croppingParams, data) {\n        var gl = this.contextGL;\n\n        if (gl) {\n            this.drawNextOuptutPictureGL(width, height, croppingParams, data);\n        } else {\n            this.drawNextOuptutPictureRGBA(width, height, croppingParams, data);\n        }\n    };\n\n    /**\n     * Draw next output picture using ARGB data on a 2d canvas.\n     */\n    YUVCanvas.prototype.drawNextOuptutPictureRGBA = function (width, height, croppingParams, data) {\n        var canvas = this.canvasElement;\n\n        var croppingParams = null;\n\n        var argbData = data;\n\n        var ctx = canvas.getContext(\"2d\");\n        var imageData = ctx.getImageData(0, 0, width, height);\n        imageData.data.set(argbData);\n\n        if (croppingParams === null) {\n            ctx.putImageData(imageData, 0, 0);\n        } else {\n            ctx.putImageData(\n                imageData,\n                -croppingParams.left,\n                -croppingParams.top,\n                0,\n                0,\n                croppingParams.width,\n                croppingParams.height,\n            );\n        }\n    };\n\n    return YUVCanvas;\n});\n", "import type { LivelinkCore } from \"./LivelinkCore\";\nimport type VM from \"node:vm\";\n\n/**\n *\n */\nconst isNode = typeof process !== \"undefined\" && process.versions != null && process.versions.node != null;\n\n/**\n * The URL of the Livelink core library. Injected by the build system.\n */\ndeclare const LIVELINK_CORE_URL: string;\n\n/**\n *\n */\ntype LivelinkCoreType = typeof LivelinkCore;\n\n/**\n *\n */\ntype CoreImporter = () => Promise<{\n    LivelinkCore: LivelinkCoreType;\n    LIVELINK_CORE_VERSION: string;\n    LIVELINK_CORE_COMMIT_SHA: string;\n}>;\n\n/**\n *\n */\ntype BuildTarget = \"prod\" | \"dev\" | \"debug\";\n\n/**\n * Dynamically loads the Livelink core library.\n *\n * {@link DynamicLoader.load} must be called before accessing {@link DynamicLoader.Core}.\n *\n * ### Usage\n * ```typescript\n * await DynamicLoader.load();\n * const core = new DynamicLoader.Core();\n * ```\n *\n * @category Core\n */\nexport class DynamicLoader {\n    /**\n     *\n     */\n    static #core: LivelinkCoreType | null = null;\n\n    /**\n     *\n     */\n    static #importPromise: Promise<void> | null = null;\n\n    /**\n     * Returns the core.\n     */\n    static get Core(): LivelinkCoreType {\n        if (!DynamicLoader.#core) {\n            throw new Error(\"Livelink core not initialized\");\n        }\n        return DynamicLoader.#core;\n    }\n\n    /**\n     * Dynamically loads the Livelink core library.\n     *\n     * Must be called before accessing {@link DynamicLoader.Core}.\n     * Only one target can be loaded at a time.\n     *\n     * @param target - The target build to load.\n     *  - `\"prod\"`: Contains no debug information.\n     *  - `\"dev\"`: Contains some debug information.\n     *  - `\"debug\"`: Contains extra debug information.\n     */\n    static load(target: BuildTarget = \"prod\"): Promise<void> {\n        if (!DynamicLoader.#importPromise) {\n            DynamicLoader.#importPromise = DynamicLoader.#importCore(target);\n        }\n\n        return DynamicLoader.#importPromise;\n    }\n\n    /**\n     *\n     */\n    static async #importCore(target: BuildTarget): Promise<void> {\n        const dynamicImport = await DynamicLoader.#createImporter(target);\n        const { LivelinkCore } = await dynamicImport();\n\n        DynamicLoader.#core = LivelinkCore;\n\n        const TARGET_COLOR = {\n            prod: \"#FFC700\",\n            dev: \"#36D399\",\n            debug: \"#FB4949\",\n        } satisfies Record<BuildTarget, string>;\n\n        console.info(\n            `%c Livelink Core initialized \uD83D\uDE80 %c ${LivelinkCore.VERSION} %c ${LivelinkCore.COMMIT_SHA} %c${target}`,\n            \"background: #080A12; color: #FFC700; font-weight: bold; padding: 8px; padding-right: 164px; border-radius: 16px; margin: 16px 0 16px 0\",\n            \"background: #9EA6D6; color: #0A1018; font-weight: bold; padding: 1px; padding-right: 0px; margin-left: -160px; border-radius: 16px 0 0 16px;\",\n            \"background: #6973A8; color: #0A1018; font-weight: bold; padding: 1px; padding-left: 0; border-radius: 0 16px 16px 0;\",\n            `background: ${TARGET_COLOR[target]}; color: #000; font-weight: bold; padding: 6px 16px; border: 4px solid #080A12; border-radius: 16px; margin-left: 16px`,\n        );\n    }\n\n    /**\n     *\n     */\n    static async #createImporter(target: string): Promise<CoreImporter> {\n        const moduleURL = LIVELINK_CORE_URL + \"/\" + (target !== \"prod\" ? `core.${target}.mjs` : \"core.mjs\");\n\n        if (!isNode) {\n            return new Function(\"return import('\" + moduleURL + \"')\") as CoreImporter;\n        }\n\n        const response = await fetch(moduleURL);\n        const source = await response.text();\n\n        // As a platform neutral build, we needs to load node:vm dynamically.\n        // We can't use await import('node:vm') directly because it will be resolved at build time\n        // and will not be available in the browser.\n        const vm = (await new Function(\"return import('node:vm')\")()) as {\n            SourceTextModule: typeof VM.SourceTextModule;\n        };\n\n        // VM Modules is an experimental feature, so it may not be available in all versions of Node.js.\n        // This feature is only available with the --experimental-vm-modules command flag enabled.\n        if (!vm.SourceTextModule) {\n            return new Function(\"return import('data:text/javascript;base64,\" + btoa(source) + \"')\") as CoreImporter;\n        }\n\n        console.info(\"Using experimental VM SourceTextModule to load Livelink core\");\n        return (async () => {\n            const module = new vm.SourceTextModule(source, { identifier: moduleURL });\n            // @ts-expect-error: Since core has no dependencies, the linker function will never be called.\n            await module.link(() => {});\n            await module.evaluate();\n\n            return module.namespace;\n        }) as CoreImporter;\n    }\n\n    /**\n     *\n     */\n    private constructor() {}\n}\n", "export * from \"./DynamicLoader\";\nexport type * from \"./core\";\n\n//------------------------------------------------------------------------------\n/**\n * Version of the Livelink Core library, injected by the build system.\n * @internal\n */\ndeclare const LIVELINK_CORE_VERSION: string;\n\n/**\n * Name of the package, injected by the build system.\n * @internal\n */\ndeclare const PACKAGE_NAME: string;\n\n//------------------------------------------------------------------------------\ndeclare global {\n    interface Window {\n        __LIVELINK__: Record<string, string>;\n    }\n}\n\n//------------------------------------------------------------------------------\nif (typeof window !== \"undefined\") {\n    if (!window.__LIVELINK__) {\n        window.__LIVELINK__ = {};\n    }\n\n    if (Object.prototype.hasOwnProperty.call(window.__LIVELINK__, PACKAGE_NAME)) {\n        console.warn(\"\u26A0\uFE0F WARNING \u26A0\uFE0F Multiple instances of Livelink Core being imported.\");\n    } else {\n        window.__LIVELINK__[PACKAGE_NAME] = LIVELINK_CORE_VERSION;\n    }\n}\n", "import type { Mat4, Quat, Events, UUID, Vec3 } from \"@3dverse/livelink.core\";\nimport { FrameCameraTransform } from \"./FrameCameraTransform\";\nimport { EntityRegistry } from \"../../scene/EntityRegistry\";\nimport { Viewport } from \"../camera/Viewport\";\n\n/**\n * @category Streaming\n */\nexport type FrameMetaData = {\n    /**\n     * Timestamp of the frame\n     */\n    renderer_timestamp: number;\n\n    /**\n     * Number of the frame, incremented for each frame\n     */\n    frame_counter: number;\n\n    /**\n     * @internal\n     * Camera transforms of each client camera attached to a viewport in the frame\n     */\n    viewport_layout_camera_entities: Array<FrameCameraTransform & { viewport: Viewport }>;\n\n    /**\n     * @internal\n     * Camera transforms of each client camera not attached to a viewport in the frame\n     */\n    other_clients_camera_entities: Array<FrameCameraTransform>;\n};\n\n/**\n * @internal\n */\nexport function convertRawFrameMetaDataToFrameMetaData({\n    raw_frame_meta_data,\n    client_id,\n    entity_registry,\n    viewports,\n}: {\n    raw_frame_meta_data: Events.RawFrameMetaData;\n    client_id: UUID;\n    entity_registry: EntityRegistry;\n    viewports: Array<Viewport>;\n}): FrameMetaData {\n    const meta_data: FrameMetaData = {\n        renderer_timestamp: raw_frame_meta_data.renderer_timestamp,\n        frame_counter: raw_frame_meta_data.frame_counter,\n        viewport_layout_camera_entities: [],\n        other_clients_camera_entities: [],\n    };\n\n    for (const client_meta_data of raw_frame_meta_data.clients) {\n        const is_current_client = client_meta_data.client_id === client_id;\n\n        for (const viewport_meta_data of client_meta_data.viewports) {\n            const camera_entity = entity_registry.get({ entity_rtid: viewport_meta_data.camera_rtid });\n            if (!camera_entity) {\n                continue;\n            }\n\n            const viewport = viewports.find(v => v.camera_projection?.camera_entity.rtid === camera_entity.rtid);\n\n            // Either the metadata concerns a viewport that is displayed on the current frame\n            // whether it is controlled by the current client or not\n            if (is_current_client) {\n                if (viewport) {\n                    meta_data.viewport_layout_camera_entities.push({\n                        camera_entity,\n                        world_from_view_matrix: viewport_meta_data.ws_from_ls,\n                        world_position: getWorldPosition(viewport_meta_data.ws_from_ls),\n                        world_orientation: getWorldQuaternion(viewport_meta_data.ws_from_ls),\n                        viewport,\n                    });\n                }\n\n                continue;\n            }\n\n            // Otherwise, this metadata describes the frame layout of another client.\n            // In that case, the other client might be watching one of our cameras.\n            // That is the case when viewport is not null.\n            if (viewport) {\n                // If the camera attached to the viewport is controlled by the current client,\n                // we are already aware of its transform, so we can skip it.\n                if (viewport.is_camera_controlled_by_current_client) {\n                    continue;\n                }\n            }\n\n            // If we are down here, it means that either the camera is not attached to a viewport,\n            // or it is attached to a viewport but not controlled by the current client.\n            meta_data.other_clients_camera_entities.push({\n                camera_entity,\n                world_from_view_matrix: viewport_meta_data.ws_from_ls,\n                world_position: getWorldPosition(viewport_meta_data.ws_from_ls),\n                world_orientation: getWorldQuaternion(viewport_meta_data.ws_from_ls),\n            });\n        }\n    }\n\n    return meta_data;\n}\n\n/**\n *\n */\nfunction getWorldPosition(worldMatrix: Mat4): Vec3 {\n    return [worldMatrix[12], worldMatrix[13], worldMatrix[14]];\n}\n\n/**\n *\n */\nfunction getWorldQuaternion(worldMatrix: Mat4): Quat {\n    const quaternion = [0, 0, 0, 0];\n    const m11 = worldMatrix[0];\n    const m12 = worldMatrix[1];\n    const m13 = worldMatrix[2];\n\n    const m21 = worldMatrix[4];\n    const m22 = worldMatrix[5];\n    const m23 = worldMatrix[6];\n\n    const m31 = worldMatrix[8];\n    const m32 = worldMatrix[9];\n    const m33 = worldMatrix[10];\n\n    const trace = m11 + m22 + m33;\n\n    if (trace > 0) {\n        const s = 0.5 / Math.sqrt(trace + 1.0);\n        quaternion[3] = 0.25 / s;\n        quaternion[0] = (m23 - m32) * s;\n        quaternion[1] = (m31 - m13) * s;\n        quaternion[2] = (m12 - m21) * s;\n    } else if (m11 > m22 && m11 > m33) {\n        const s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n        quaternion[3] = (m23 - m32) / s;\n        quaternion[0] = 0.25 * s;\n        quaternion[1] = (m12 + m21) / s;\n        quaternion[2] = (m13 + m31) / s;\n    } else if (m22 > m33) {\n        const s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n        quaternion[3] = (m31 - m13) / s;\n        quaternion[0] = (m12 + m21) / s;\n        quaternion[1] = 0.25 * s;\n        quaternion[2] = (m23 + m32) / s;\n    } else {\n        const s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n        quaternion[3] = (m12 - m21) / s;\n        quaternion[0] = (m13 + m31) / s;\n        quaternion[1] = (m23 + m32) / s;\n        quaternion[2] = 0.25 * s;\n    }\n\n    return quaternion as Quat;\n}\n", "/**\n * @category Rendering Surfaces\n */\nexport class Rect {\n    /**\n     *\n     */\n    readonly left: number;\n    readonly top: number;\n    readonly right: number;\n    readonly bottom: number;\n    readonly width: number;\n    readonly height: number;\n\n    /**\n     *\n     */\n    constructor({\n        left = 0,\n        top = 0,\n        right,\n        bottom,\n        width,\n        height,\n    }: {\n        left?: number;\n        top?: number;\n        right?: number;\n        bottom?: number;\n        width?: number;\n        height?: number;\n    }) {\n        if (!this.#isValid({ left, top, right, bottom, width, height })) {\n            console.error(\"Invalid rect\", this);\n        }\n\n        this.left = left;\n        this.top = top;\n\n        this.right = right !== undefined ? right : left + width!;\n        this.bottom = bottom !== undefined ? bottom : top + height!;\n\n        this.width = width !== undefined ? width : right! - left;\n        this.height = height !== undefined ? height : bottom! - top;\n    }\n\n    /**\n     *\n     */\n    #isValid({\n        left = 0,\n        top = 0,\n        right,\n        bottom,\n        width,\n        height,\n    }: {\n        left?: number;\n        top?: number;\n        right?: number;\n        bottom?: number;\n        width?: number;\n        height?: number;\n    }): boolean {\n        // No negative values\n        if (left < 0 || top < 0) return false;\n        if (right !== undefined && right < 0) return false;\n        if (bottom !== undefined && bottom < 0) return false;\n        if (width !== undefined && width < 0) return false;\n        if (height !== undefined && height < 0) return false;\n        // Can't compute width\n        if (right === undefined && width === undefined) return false;\n        // Can't compute height\n        if (bottom === undefined && height === undefined) return false;\n        // Invalid values provided\n        if (right !== undefined && left >= right) return false;\n        if (bottom !== undefined && top >= bottom) return false;\n        if (width !== undefined && right !== undefined && left + width !== right) return false;\n        if (height !== undefined && bottom !== undefined && top + height !== bottom) return false;\n\n        return true;\n    }\n}\n\n/**\n * Occurs when an element has an invalid size.\n * @category Rendering Surfaces\n */\nexport class InvalidSizeError extends Error {\n    /**\n     * Element bounds.\n     */\n    rect: DOMRect;\n\n    /**\n     *\n     */\n    constructor(rect: DOMRect) {\n        super(`Element has an invalid size : [${rect.width} x ${rect.height}]`);\n        this.rect = rect;\n    }\n}\n\n/**\n * Occurs when an element is not contained into its parent bounds.\n * @category Rendering Surfaces\n */\nexport class OutOfBoundsError extends Error {\n    /**\n     * Element bounds.\n     */\n    rect: DOMRect;\n\n    /**\n     * Parent bounds.\n     */\n    parentRect: DOMRect;\n\n    /**\n     *\n     */\n    constructor(rect: DOMRect, parentRect: DOMRect) {\n        super(\"Element MUST be contained into its parent bounds.\");\n        this.rect = rect;\n        this.parentRect = parentRect;\n    }\n}\n\n/**\n * @category Rendering Surfaces\n */\nexport class RelativeRect extends Rect {\n    /**\n     * Default relative rect that covers the whole area.\n     */\n    static readonly default: RelativeRect = Object.freeze(\n        new RelativeRect({ left: 0, top: 0, width: 1, height: 1 }),\n    ) as RelativeRect;\n\n    /**\n     * Creates a relative rect from the given DOM elements.\n     * It calculates the relative position and size of the element inside the parent element.\n     *\n     * @param params\n     * @param params.element - The element to get the relative rect from.\n     * @param params.parent - The parent element of the element.\n     *\n     * @throws {InvalidSizeError} - If the element has an invalid size.\n     * @throws {OutOfBoundsError} - If the element is not contained into its parent bounds.\n     *\n     * @returns The relative rect.\n     */\n    static from_dom_elements({ element, parent }: { element: HTMLElement; parent: HTMLElement }): RelativeRect {\n        const rect = element.getBoundingClientRect();\n        const parentRect = parent.getBoundingClientRect();\n\n        if (!rect.width || !rect.height) {\n            throw new InvalidSizeError(rect);\n        }\n\n        const relativePos = {\n            left: rect.left - parentRect.left,\n            top: rect.top - parentRect.top,\n        };\n\n        if (\n            relativePos.left < 0 ||\n            relativePos.top < 0 ||\n            relativePos.left + rect.width > parentRect.left + parentRect.width ||\n            relativePos.top + rect.height > parentRect.top + parentRect.height\n        ) {\n            throw new OutOfBoundsError(rect, parentRect);\n        }\n\n        const PRECISION = 6 as const;\n        return new RelativeRect({\n            left: parseFloat((relativePos.left / parentRect.width).toPrecision(PRECISION)),\n            top: parseFloat((relativePos.top / parentRect.height).toPrecision(PRECISION)),\n            width: parseFloat((rect.width / parentRect.width).toPrecision(PRECISION)),\n            height: parseFloat((rect.height / parentRect.height).toPrecision(PRECISION)),\n        });\n    }\n\n    /**\n     *\n     */\n    constructor({\n        left = 0,\n        top = 0,\n        right,\n        bottom,\n        width = 1,\n        height = 1,\n    }: {\n        left?: number;\n        top?: number;\n        right?: number;\n        bottom?: number;\n        width?: number;\n        height?: number;\n    }) {\n        super({ left, top, right, bottom, width, height });\n\n        if (!this.#areValuesRelative()) {\n            console.error(\"Relative rect values must fall in [0,1] range\", this);\n        }\n    }\n\n    /**\n     *\n     */\n    #areValuesRelative(): boolean {\n        return (\n            this.left < 1 && this.top < 1 && this.right <= 1 && this.bottom <= 1 && this.width <= 1 && this.height <= 1\n        );\n    }\n}\n", "//------------------------------------------------------------------------------\nimport type { Enums, Commands, Vec2i, Vec2u16 } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { Livelink } from \"../../Livelink\";\nimport { Viewport } from \"../camera/Viewport\";\nimport { RenderingSurfaceBase } from \"../surfaces/RenderingSurfaceBase\";\nimport { DecodedFrameConsumer } from \"./DecodedFrameConsumer\";\nimport { RelativeRect } from \"../surfaces/Rect\";\nimport { DecodedFrame } from \"./EncodedFrameConsumer\";\n\n/**\n * A remote frame proxy represents the surface on which the remote renderer will draw.\n *\n * It is responsible for computing the total required area for the remote renderer to draw on\n * and splitting this area into viewports.\n *\n * This drawing area is split into viewports. Each viewport must have an\n * associated camera.\n * Note that viewports will be packed arbitrarily on the rendering surface.\n *\n * The surface is also responsible of decoding the encoded frame returned by the\n * renderer and spliting the decoded frame into areas corresponding to their\n * respective viewports.\n *\n * @internal\n */\nexport class RemoteFrameProxy implements DecodedFrameConsumer {\n    /**\n     * Owning Livelink instance.\n     */\n    #core: Livelink;\n\n    /**\n     * Reference counted rendering surfaces.\n     */\n    #surfaces: Array<RenderingSurfaceBase> = [];\n\n    /**\n     * Surface actual dimensions with padding.\n     */\n    #dimensions: Vec2u16 = [0, 0];\n\n    /**\n     * Because of the way the encoder works, pixels may be grouped in macroblocks,\n     * to avoid artifacts the surface dimensions must be a multiple of a power of 2.\n     * This multiple value depends on the encoder used.\n     */\n    #size_multiple: Vec2u16 = [32, 32];\n\n    /**\n     * Flag indicating that the remote surface needs to be resized.\n     * This needs to be stored, as we not might be able to resize the surface immediately.\n     */\n    #needs_resize: boolean = true;\n\n    /**\n     * Surface dimensions in pixels rounded up to the next multiple of 8.\n     */\n    get dimensions(): Vec2u16 {\n        return this.#dimensions;\n    }\n    get width(): number {\n        return this.#dimensions[0];\n    }\n    get height(): number {\n        return this.#dimensions[1];\n    }\n\n    /**\n     * Registered viewports.\n     */\n    get viewports(): Array<Viewport> {\n        const result: Array<Viewport> = [];\n        for (const surface of this.#surfaces) {\n            result.push(...surface.viewports);\n        }\n        return result;\n    }\n\n    /**\n     * Config for all registered viewports.\n     */\n    get #config(): Array<Commands.ViewportConfig> {\n        const result: Array<Commands.ViewportConfig & { z_index: number }> = [];\n        for (const surface of this.#surfaces) {\n            result.push(...surface._getViewportConfigs({ width: this.width, height: this.height }));\n        }\n        return result.sort((a, b) => a.z_index - b.z_index);\n    }\n\n    /**\n     *\n     */\n    constructor(core: Livelink) {\n        this.#core = core;\n    }\n\n    /**\n     *\n     */\n    init(): void {\n        this.#onFrameLayoutModified();\n    }\n\n    /**\n     *\n     */\n    release(): void {\n        for (const surface of this.#surfaces) {\n            surface.release();\n        }\n    }\n\n    /**\n     *\n     */\n    consumeDecodedFrame({ decoded_frame }: { decoded_frame: DecodedFrame }): void {\n        for (const surface of this.#surfaces) {\n            surface.drawFrame({ decoded_frame });\n        }\n    }\n\n    /**\n     * Attach a viewport to the surface\n     *\n     * @param viewport The viewport to attach to the surface\n     */\n    addViewport({ viewport }: { viewport: Viewport }): void {\n        this.#addViewport({ viewport });\n        this.#onFrameLayoutModified();\n    }\n\n    /**\n     * Attach viewports to the surface\n     *\n     * @param viewports The viewports to attach to the surface\n     */\n    addViewports({ viewports }: { viewports: Array<Viewport> }): void {\n        for (const viewport of viewports) {\n            this.#addViewport({ viewport });\n        }\n        this.#onFrameLayoutModified();\n    }\n\n    /**\n     * Detach a viewport from the surface\n     */\n    removeViewport({ viewport }: { viewport: Viewport }): void {\n        const index = this.#surfaces.indexOf(viewport.rendering_surface);\n        if (index === -1) {\n            throw new Error(\"Viewport without registered surface\");\n        }\n\n        const surface = this.#surfaces[index];\n        surface.removeViewport({ viewport });\n\n        viewport.release();\n\n        if (surface.viewports.length === 0) {\n            surface.removeEventListener(\"on-rendering-surface-resized\", this.#onFrameLayoutModified);\n            surface.release();\n            this.#surfaces.splice(index, 1);\n        }\n\n        this.#onFrameLayoutModified();\n    }\n\n    /**\n     *\n     */\n    _computeRemoteCanvasSize({ codec }: { codec: Enums.CodecType }): Vec2u16 {\n        if (codec === \"h265\") {\n            const HEVC_MACROBLOCK_SIZE: Vec2i = [64, 64] as const;\n            this.#size_multiple = HEVC_MACROBLOCK_SIZE;\n            this.#computeSurfaceSize();\n        }\n\n        return this.#dimensions;\n    }\n\n    /**\n     *\n     */\n    #isValid(): boolean {\n        return this.#surfaces.every(s => s.isValid());\n    }\n\n    /**\n     *\n     */\n    #addViewport({ viewport }: { viewport: Viewport }): void {\n        viewport.rendering_surface.addViewport({ viewport });\n\n        if (this.#surfaces.includes(viewport.rendering_surface)) {\n            return;\n        }\n\n        this.#addSurface({ surface: viewport.rendering_surface });\n    }\n\n    /**\n     *\n     */\n    #addSurface({ surface }: { surface: RenderingSurfaceBase }): void {\n        console.debug(\"Adding a new surface\", surface);\n        surface.addEventListener(\"on-rendering-surface-resized\", this.#onFrameLayoutModified);\n        this.#surfaces.push(surface);\n    }\n\n    /**\n     *\n     */\n    #onFrameLayoutModified = (): void => {\n        this.#computeSurfaceSize();\n\n        if (this.#core.isConfigured() && this.#isValid()) {\n            if (this.#needs_resize) {\n                console.debug(\"\uD83D\uDDBC\uFE0F Remote surface resized\", this.#dimensions);\n                this.#core._resize({ size: this.#dimensions });\n                this.#needs_resize = false;\n            }\n            console.debug(\"Viewports reconfigured\", this.#config);\n            this.#core._setViewports({ viewport_configs: this.#config });\n        }\n    };\n\n    /**\n     *\n     */\n    #next_multiple = (n: number, multiple: number): number => {\n        return Math.floor(n) + (Math.floor(n) % multiple === 0 ? 0 : multiple - (Math.floor(n) % multiple));\n    };\n\n    /**\n     *\n     */\n    #computeSurfaceSize(): void {\n        const { offset, width, height } = this.#computeBoundingRect();\n\n        const new_dimensions: Vec2i = [\n            this.#next_multiple(width, this.#size_multiple[0]),\n            this.#next_multiple(height, this.#size_multiple[1]),\n        ];\n\n        this.#needs_resize ||= new_dimensions[0] != this.#dimensions[0] || new_dimensions[1] != this.dimensions[1];\n        this.#dimensions = new_dimensions;\n\n        this.#computeSurfaceDimensions({ offset, width: this.#dimensions[0], height: this.#dimensions[1] });\n    }\n\n    /**\n     *\n     */\n    #computeBoundingRect(): { offset: Vec2i; width: number; height: number } {\n        const min: Vec2i = [Number.MAX_VALUE, Number.MAX_VALUE];\n        const max: Vec2i = [0, 0];\n\n        for (const surface of this.#surfaces) {\n            const clientRect = surface.getBoundingRect();\n            min[0] = Math.min(min[0], clientRect.left);\n            min[1] = Math.min(min[1], clientRect.top);\n            max[0] = Math.max(max[0], clientRect.right);\n            max[1] = Math.max(max[1], clientRect.bottom);\n        }\n\n        const width = max[0] - min[0];\n        const height = max[1] - min[1];\n        return { offset: min, width, height: height };\n    }\n\n    /**\n     *\n     */\n    #computeSurfaceDimensions({ offset, width, height }: { offset: Vec2i; width: number; height: number }): void {\n        for (const surface of this.#surfaces) {\n            const clientRect = surface.getBoundingRect();\n            surface.relative_rect = new RelativeRect({\n                left: (clientRect.left - offset[0]) / width,\n                top: (clientRect.top - offset[1]) / height,\n                width: (clientRect.right - clientRect.left) / width,\n                height: (clientRect.bottom - clientRect.top) / height,\n            });\n        }\n    }\n}\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "/**\n * @category Utils\n */\nexport class TypedEventTarget<EventMap extends Record<string, Event>> {\n    #event_target = new EventTarget();\n\n    /**\n     *\n     */\n    addEventListener<_EventName extends keyof EventMap & string>(\n        event_name: _EventName,\n        listener: (event: EventMap[_EventName]) => void,\n        options?: AddEventListenerOptions | boolean,\n    ): void {\n        this.#event_target.addEventListener(event_name, listener as EventListener, options);\n    }\n\n    /**\n     *\n     */\n    removeEventListener<_EventName extends keyof EventMap & string>(\n        event_name: _EventName,\n        listener: (event: EventMap[_EventName]) => void,\n        options?: EventListenerOptions | boolean,\n    ): void {\n        this.#event_target.removeEventListener(event_name, listener as EventListener, options);\n    }\n\n    /**\n     * @internal\n     */\n    _dispatchEvent<T extends keyof EventMap>(event: EventMap[T]): boolean {\n        return this.#event_target.dispatchEvent(event as Event);\n    }\n}\n", "/**\n * DO NOT EDIT THIS FILE MANUALLY.\n * This file has been generated automatically from ftl-schemas\n */\nimport type { Components, ComponentName, ComponentType, EntityCore } from \"@3dverse/livelink.core\";\nimport { TypedEventTarget } from \"../sources/TypedEventTarget\";\nimport { EntityEvents } from \"../sources/scene/EntityEvents\";\n\n/**\n * If specified as a component value, the default values will be applied.\n * Note that the compponent default values might on future versions of their schema.\n */\nexport type DefaultValue = \"default\";\n\n/**\n *\n */\nexport abstract class EntityBase extends TypedEventTarget<EntityEvents> {\n    /**\n     * @internal\n     */\n    public static readonly component_names: Array<ComponentName> = [\n        \"animation_controller\",\n        \"animation_sequence_controller\",\n        \"bone\",\n        \"box_geometry\",\n        \"camera\",\n        \"capsule_geometry\",\n        \"character_controller\",\n        \"collision_geometry_ref\",\n        \"constraint\",\n        \"culling_geometry\",\n        \"cylinder_geometry\",\n        \"debug_name\",\n        \"decal_projector\",\n        \"environment\",\n        \"joint\",\n        \"label\",\n        \"lineage\",\n        \"local_aabb\",\n        \"material\",\n        \"material_ref\",\n        \"measure\",\n        \"mesh_ref\",\n        \"orthographic_lens\",\n        \"overrider\",\n        \"perspective_lens\",\n        \"physics_material\",\n        \"plane_geometry\",\n        \"point_cloud_ref\",\n        \"point_light\",\n        \"reflection_probe\",\n        \"rigid_body\",\n        \"scene_ref\",\n        \"script_map\",\n        \"shadow_caster\",\n        \"skeleton_ref\",\n        \"sound_ref\",\n        \"sphere_geometry\",\n        \"spline\",\n        \"spot_light\",\n        \"stereoscopic_lens\",\n        \"tags\",\n        \"vehicle_controller\",\n        \"volume_filter\",\n        \"volume_material_ref\",\n        \"volume_ref\",\n    ];\n\n    /**\n     *\n     */\n    #core: EntityCore;\n\n    /**\n     * @internal\n     */\n    get _core(): EntityCore {\n        return this.#core;\n    }\n\n    /**\n     *\n     */\n    get euid(): Readonly<Components.Euid> {\n        return this.#core.euid;\n    }\n\n    /**\n     * Animation controller with reference to an animation graph and an animation set. Enables skeletal animation on its skinned mesh descendents whose skeleton is compatible with the animations in the animation set.\n     */\n    get animation_controller() : Components.AnimationController | undefined {\n        return this.#core.animation_controller;\n    }\n\n    set animation_controller(value: Partial<Components.AnimationController> | DefaultValue | undefined) {\n        this.#core.animation_controller = this._setComponentValue({ ref: this.#core.animation_controller, component_name: \"animation_controller\", value });\n    }\n\n    /**\n     * Animation sequence controller with reference to an animation sequence and assigned entities.\n     */\n    get animation_sequence_controller() : Components.AnimationSequenceController | undefined {\n        return this.#core.animation_sequence_controller;\n    }\n\n    set animation_sequence_controller(value: Partial<Components.AnimationSequenceController> | DefaultValue | undefined) {\n        this.#core.animation_sequence_controller = this._setComponentValue({ ref: this.#core.animation_sequence_controller, component_name: \"animation_sequence_controller\", value });\n    }\n\n    /**\n     * Links entity to bone in skeleton.\n     */\n    get bone() : Components.Bone | undefined {\n        return this.#core.bone;\n    }\n\n    set bone(value: Partial<Components.Bone> | DefaultValue | undefined) {\n        this.#core.bone = this._setComponentValue({ ref: this.#core.bone, component_name: \"bone\", value });\n    }\n\n    /**\n     * Box geometry.\n     */\n    get box_geometry() : Components.BoxGeometry | undefined {\n        return this.#core.box_geometry;\n    }\n\n    set box_geometry(value: Partial<Components.BoxGeometry> | DefaultValue | undefined) {\n        this.#core.box_geometry = this._setComponentValue({ ref: this.#core.box_geometry, component_name: \"box_geometry\", value });\n    }\n\n    /**\n     * Virtual camera.\n     */\n    get camera() : Components.Camera | undefined {\n        return this.#core.camera;\n    }\n\n    set camera(value: Partial<Components.Camera> | DefaultValue | undefined) {\n        this.#core.camera = this._setComponentValue({ ref: this.#core.camera, component_name: \"camera\", value });\n    }\n\n    /**\n     * Capsule geometry.\n     */\n    get capsule_geometry() : Components.CapsuleGeometry | undefined {\n        return this.#core.capsule_geometry;\n    }\n\n    set capsule_geometry(value: Partial<Components.CapsuleGeometry> | DefaultValue | undefined) {\n        this.#core.capsule_geometry = this._setComponentValue({ ref: this.#core.capsule_geometry, component_name: \"capsule_geometry\", value });\n    }\n\n    /**\n     * Character controller used for movement constrained by collisions without having to deal with a rigid body. A character controller is kinematic, and so is not affected by forces. It uses its own tweaked collision algorithm to give a good feeling while controlling the character.\n     */\n    get character_controller() : Components.CharacterController | undefined {\n        return this.#core.character_controller;\n    }\n\n    set character_controller(value: Partial<Components.CharacterController> | DefaultValue | undefined) {\n        this.#core.character_controller = this._setComponentValue({ ref: this.#core.character_controller, component_name: \"character_controller\", value });\n    }\n\n    /**\n     * Reference to a collision geometry.\n     */\n    get collision_geometry_ref() : Components.CollisionGeometryRef | undefined {\n        return this.#core.collision_geometry_ref;\n    }\n\n    set collision_geometry_ref(value: Partial<Components.CollisionGeometryRef> | DefaultValue | undefined) {\n        this.#core.collision_geometry_ref = this._setComponentValue({ ref: this.#core.collision_geometry_ref, component_name: \"collision_geometry_ref\", value });\n    }\n\n    /**\n     * A physics constraint that can be configured along 6 degrees of freedom. In its default state it behaves as a fixed constraint - that is, it rigidly fixes the constraint frames of its two entities. However, individual degrees of freedom may be unlocked to permit any combination of rotation around the x-, y- and z- axes, and translation along these axes.\n     */\n    get constraint() : Components.Constraint | undefined {\n        return this.#core.constraint;\n    }\n\n    set constraint(value: Partial<Components.Constraint> | DefaultValue | undefined) {\n        this.#core.constraint = this._setComponentValue({ ref: this.#core.constraint, component_name: \"constraint\", value });\n    }\n\n    /**\n     * Culling geometry. Add this component in addition to another geometry component (e.g. box geometry, sphere geometry, etc.) to enable culling geometry.\n     */\n    get culling_geometry() : Components.CullingGeometry | undefined {\n        return this.#core.culling_geometry;\n    }\n\n    set culling_geometry(value: Partial<Components.CullingGeometry> | DefaultValue | undefined) {\n        this.#core.culling_geometry = this._setComponentValue({ ref: this.#core.culling_geometry, component_name: \"culling_geometry\", value });\n    }\n\n    /**\n     * Cylinder geometry.\n     */\n    get cylinder_geometry() : Components.CylinderGeometry | undefined {\n        return this.#core.cylinder_geometry;\n    }\n\n    set cylinder_geometry(value: Partial<Components.CylinderGeometry> | DefaultValue | undefined) {\n        this.#core.cylinder_geometry = this._setComponentValue({ ref: this.#core.cylinder_geometry, component_name: \"cylinder_geometry\", value });\n    }\n\n    /**\n     * Name of the entity.\n     */\n    get debug_name() : Components.DebugName | undefined {\n        return this.#core.debug_name;\n    }\n\n    set debug_name(value: Partial<Components.DebugName> | DefaultValue | undefined) {\n        this.#core.debug_name = this._setComponentValue({ ref: this.#core.debug_name, component_name: \"debug_name\", value });\n    }\n\n    /**\n     * Decal Projector.\n     */\n    get decal_projector() : Components.DecalProjector | undefined {\n        return this.#core.decal_projector;\n    }\n\n    set decal_projector(value: Partial<Components.DecalProjector> | DefaultValue | undefined) {\n        this.#core.decal_projector = this._setComponentValue({ ref: this.#core.decal_projector, component_name: \"decal_projector\", value });\n    }\n\n    /**\n     * The environment of a scene. Used to give a scene a skybox.\n     */\n    get environment() : Components.Environment | undefined {\n        return this.#core.environment;\n    }\n\n    set environment(value: Partial<Components.Environment> | DefaultValue | undefined) {\n        this.#core.environment = this._setComponentValue({ ref: this.#core.environment, component_name: \"environment\", value });\n    }\n\n    /**\n     * Base component of all the other joint components (revolute_joint, etc.). By itself it will lock the orientations and distances of the constrainer and constrainee.\n     */\n    get joint() : Components.Joint | undefined {\n        return this.#core.joint;\n    }\n\n    set joint(value: Partial<Components.Joint> | DefaultValue | undefined) {\n        this.#core.joint = this._setComponentValue({ ref: this.#core.joint, component_name: \"joint\", value });\n    }\n\n    /**\n     * Display a label in the 3d view.\n     */\n    get label() : Components.Label | undefined {\n        return this.#core.label;\n    }\n\n    set label(value: Partial<Components.Label> | DefaultValue | undefined) {\n        this.#core.label = this._setComponentValue({ ref: this.#core.label, component_name: \"label\", value });\n    }\n\n    /**\n     * Lineage of the entity through linkers.\n     */\n    get lineage() : Components.Lineage | undefined {\n        return this.#core.lineage;\n    }\n\n    set lineage(value: Partial<Components.Lineage> | DefaultValue | undefined) {\n        this.#core.lineage = this._setComponentValue({ ref: this.#core.lineage, component_name: \"lineage\", value });\n    }\n\n    /**\n     * Local Axis Aligned Bounding Box of the entity.\n     */\n    get local_aabb() : Components.LocalAabb | undefined {\n        return this.#core.local_aabb;\n    }\n\n    set local_aabb(value: Partial<Components.LocalAabb> | DefaultValue | undefined) {\n        this.#core.local_aabb = this._setComponentValue({ ref: this.#core.local_aabb, component_name: \"local_aabb\", value });\n    }\n\n    /**\n     * References a shader and specifies input values if needed.\n     */\n    get material() : Components.Material | undefined {\n        return this.#core.material;\n    }\n\n    set material(value: Partial<Components.Material> | DefaultValue | undefined) {\n        this.#core.material = this._setComponentValue({ ref: this.#core.material, component_name: \"material\", value });\n    }\n\n    /**\n     * Reference to a material.\n     */\n    get material_ref() : Components.MaterialRef | undefined {\n        return this.#core.material_ref;\n    }\n\n    set material_ref(value: Partial<Components.MaterialRef> | DefaultValue | undefined) {\n        this.#core.material_ref = this._setComponentValue({ ref: this.#core.material_ref, component_name: \"material_ref\", value });\n    }\n\n    /**\n     * Display a measure in the 3d view.\n     */\n    get measure() : Components.Measure | undefined {\n        return this.#core.measure;\n    }\n\n    set measure(value: Partial<Components.Measure> | DefaultValue | undefined) {\n        this.#core.measure = this._setComponentValue({ ref: this.#core.measure, component_name: \"measure\", value });\n    }\n\n    /**\n     * Reference to a mesh.\n     */\n    get mesh_ref() : Components.MeshRef | undefined {\n        return this.#core.mesh_ref;\n    }\n\n    set mesh_ref(value: Partial<Components.MeshRef> | DefaultValue | undefined) {\n        this.#core.mesh_ref = this._setComponentValue({ ref: this.#core.mesh_ref, component_name: \"mesh_ref\", value });\n    }\n\n    /**\n     * A lens that applies an orthographic projection.\n     */\n    get orthographic_lens() : Components.OrthographicLens | undefined {\n        return this.#core.orthographic_lens;\n    }\n\n    set orthographic_lens(value: Partial<Components.OrthographicLens> | DefaultValue | undefined) {\n        this.#core.orthographic_lens = this._setComponentValue({ ref: this.#core.orthographic_lens, component_name: \"orthographic_lens\", value });\n    }\n\n    /**\n     * Overrides a given entity in a sub scene.\n     */\n    get overrider() : Components.Overrider | undefined {\n        return this.#core.overrider;\n    }\n\n    set overrider(value: Partial<Components.Overrider> | DefaultValue | undefined) {\n        this.#core.overrider = this._setComponentValue({ ref: this.#core.overrider, component_name: \"overrider\", value });\n    }\n\n    /**\n     * A lens that applies a perspective projection.\n     */\n    get perspective_lens() : Components.PerspectiveLens | undefined {\n        return this.#core.perspective_lens;\n    }\n\n    set perspective_lens(value: Partial<Components.PerspectiveLens> | DefaultValue | undefined) {\n        this.#core.perspective_lens = this._setComponentValue({ ref: this.#core.perspective_lens, component_name: \"perspective_lens\", value });\n    }\n\n    /**\n     * Physics material which represents a set of physical surface properties.\n     */\n    get physics_material() : Components.PhysicsMaterial | undefined {\n        return this.#core.physics_material;\n    }\n\n    set physics_material(value: Partial<Components.PhysicsMaterial> | DefaultValue | undefined) {\n        this.#core.physics_material = this._setComponentValue({ ref: this.#core.physics_material, component_name: \"physics_material\", value });\n    }\n\n    /**\n     * Plane geometry.\n     */\n    get plane_geometry() : Components.PlaneGeometry | undefined {\n        return this.#core.plane_geometry;\n    }\n\n    set plane_geometry(value: Partial<Components.PlaneGeometry> | DefaultValue | undefined) {\n        this.#core.plane_geometry = this._setComponentValue({ ref: this.#core.plane_geometry, component_name: \"plane_geometry\", value });\n    }\n\n    /**\n     * Reference to a point cloud.\n     */\n    get point_cloud_ref() : Components.PointCloudRef | undefined {\n        return this.#core.point_cloud_ref;\n    }\n\n    set point_cloud_ref(value: Partial<Components.PointCloudRef> | DefaultValue | undefined) {\n        this.#core.point_cloud_ref = this._setComponentValue({ ref: this.#core.point_cloud_ref, component_name: \"point_cloud_ref\", value });\n    }\n\n    /**\n     * A light with color and intensity. A point light by default, add a spot light component to add a cutoff. Can be parameterized to simulate the atmosphere sun.\n     */\n    get point_light() : Components.PointLight | undefined {\n        return this.#core.point_light;\n    }\n\n    set point_light(value: Partial<Components.PointLight> | DefaultValue | undefined) {\n        this.#core.point_light = this._setComponentValue({ ref: this.#core.point_light, component_name: \"point_light\", value });\n    }\n\n    /**\n     * Omni directional reflection probe parameters, used for local cubemap reflection generation.\n     */\n    get reflection_probe() : Components.ReflectionProbe | undefined {\n        return this.#core.reflection_probe;\n    }\n\n    set reflection_probe(value: Partial<Components.ReflectionProbe> | DefaultValue | undefined) {\n        this.#core.reflection_probe = this._setComponentValue({ ref: this.#core.reflection_probe, component_name: \"reflection_probe\", value });\n    }\n\n    /**\n     * Rigid body parameters.\n     */\n    get rigid_body() : Components.RigidBody | undefined {\n        return this.#core.rigid_body;\n    }\n\n    set rigid_body(value: Partial<Components.RigidBody> | DefaultValue | undefined) {\n        this.#core.rigid_body = this._setComponentValue({ ref: this.#core.rigid_body, component_name: \"rigid_body\", value });\n    }\n\n    /**\n     * Reference to a scene.\n     */\n    get scene_ref() : Components.SceneRef | undefined {\n        return this.#core.scene_ref;\n    }\n\n    set scene_ref(value: Partial<Components.SceneRef> | DefaultValue | undefined) {\n        this.#core.scene_ref = this._setComponentValue({ ref: this.#core.scene_ref, component_name: \"scene_ref\", value });\n    }\n\n    /**\n     * References multiple scripts.\n     */\n    get script_map() : Components.ScriptMap | undefined {\n        return this.#core.script_map;\n    }\n\n    set script_map(value: Partial<Components.ScriptMap> | DefaultValue | undefined) {\n        this.#core.script_map = this._setComponentValue({ ref: this.#core.script_map, component_name: \"script_map\", value });\n    }\n\n    /**\n     * Enables a light to cast shadows.\n     */\n    get shadow_caster() : Components.ShadowCaster | undefined {\n        return this.#core.shadow_caster;\n    }\n\n    set shadow_caster(value: Partial<Components.ShadowCaster> | DefaultValue | undefined) {\n        this.#core.shadow_caster = this._setComponentValue({ ref: this.#core.shadow_caster, component_name: \"shadow_caster\", value });\n    }\n\n    /**\n     * Reference to a skeleton.\n     */\n    get skeleton_ref() : Components.SkeletonRef | undefined {\n        return this.#core.skeleton_ref;\n    }\n\n    set skeleton_ref(value: Partial<Components.SkeletonRef> | DefaultValue | undefined) {\n        this.#core.skeleton_ref = this._setComponentValue({ ref: this.#core.skeleton_ref, component_name: \"skeleton_ref\", value });\n    }\n\n    /**\n     * Reference to a sound.\n     */\n    get sound_ref() : Components.SoundRef | undefined {\n        return this.#core.sound_ref;\n    }\n\n    set sound_ref(value: Partial<Components.SoundRef> | DefaultValue | undefined) {\n        this.#core.sound_ref = this._setComponentValue({ ref: this.#core.sound_ref, component_name: \"sound_ref\", value });\n    }\n\n    /**\n     * Sphere geometry.\n     */\n    get sphere_geometry() : Components.SphereGeometry | undefined {\n        return this.#core.sphere_geometry;\n    }\n\n    set sphere_geometry(value: Partial<Components.SphereGeometry> | DefaultValue | undefined) {\n        this.#core.sphere_geometry = this._setComponentValue({ ref: this.#core.sphere_geometry, component_name: \"sphere_geometry\", value });\n    }\n\n    /**\n     * Display a spline in the 3d view.\n     */\n    get spline() : Components.Spline | undefined {\n        return this.#core.spline;\n    }\n\n    set spline(value: Partial<Components.Spline> | DefaultValue | undefined) {\n        this.#core.spline = this._setComponentValue({ ref: this.#core.spline, component_name: \"spline\", value });\n    }\n\n    /**\n     * Adds a cutoff to a point light to simulate a spot light.\n     */\n    get spot_light() : Components.SpotLight | undefined {\n        return this.#core.spot_light;\n    }\n\n    set spot_light(value: Partial<Components.SpotLight> | DefaultValue | undefined) {\n        this.#core.spot_light = this._setComponentValue({ ref: this.#core.spot_light, component_name: \"spot_light\", value });\n    }\n\n    /**\n     * A lens that applies a custom projection.\n     */\n    get stereoscopic_lens() : Components.StereoscopicLens | undefined {\n        return this.#core.stereoscopic_lens;\n    }\n\n    set stereoscopic_lens(value: Partial<Components.StereoscopicLens> | DefaultValue | undefined) {\n        this.#core.stereoscopic_lens = this._setComponentValue({ ref: this.#core.stereoscopic_lens, component_name: \"stereoscopic_lens\", value });\n    }\n\n    /**\n     * Tags used to filter entities.\n     */\n    get tags() : Components.Tags | undefined {\n        return this.#core.tags;\n    }\n\n    set tags(value: Partial<Components.Tags> | DefaultValue | undefined) {\n        this.#core.tags = this._setComponentValue({ ref: this.#core.tags, component_name: \"tags\", value });\n    }\n\n    /**\n     * Vehicle Controller parameters.\n     */\n    get vehicle_controller() : Components.VehicleController | undefined {\n        return this.#core.vehicle_controller;\n    }\n\n    set vehicle_controller(value: Partial<Components.VehicleController> | DefaultValue | undefined) {\n        this.#core.vehicle_controller = this._setComponentValue({ ref: this.#core.vehicle_controller, component_name: \"vehicle_controller\", value });\n    }\n\n    /**\n     * Filtering properties applied to the volume.\n     */\n    get volume_filter() : Components.VolumeFilter | undefined {\n        return this.#core.volume_filter;\n    }\n\n    set volume_filter(value: Partial<Components.VolumeFilter> | DefaultValue | undefined) {\n        this.#core.volume_filter = this._setComponentValue({ ref: this.#core.volume_filter, component_name: \"volume_filter\", value });\n    }\n\n    /**\n     * Reference to a material to use with a volume.\n     */\n    get volume_material_ref() : Components.VolumeMaterialRef | undefined {\n        return this.#core.volume_material_ref;\n    }\n\n    set volume_material_ref(value: Partial<Components.VolumeMaterialRef> | DefaultValue | undefined) {\n        this.#core.volume_material_ref = this._setComponentValue({ ref: this.#core.volume_material_ref, component_name: \"volume_material_ref\", value });\n    }\n\n    /**\n     * Reference to a volume made of voxels.\n     */\n    get volume_ref() : Components.VolumeRef | undefined {\n        return this.#core.volume_ref;\n    }\n\n    set volume_ref(value: Partial<Components.VolumeRef> | DefaultValue | undefined) {\n        this.#core.volume_ref = this._setComponentValue({ ref: this.#core.volume_ref, component_name: \"volume_ref\", value });\n    }\n\n    /**\n     *\n     */\n    constructor({ euid }: { euid: Components.Euid }) {\n        super();\n        this.#core = { euid };\n    }\n\n    /**\n     *\n     */\n    toJSON(): object {\n        const { euid, ...components } = this.#core;\n        return { euid: { value: euid.value }, ...components} ;\n    }\n\n    /**\n     * Sets the value of a component. Used by the component setters.\n     *\n     * @internal\n     */\n    protected abstract _setComponentValue<_ComponentName extends ComponentName>({\n        ref,\n        component_name,\n        value,\n    }: {\n        ref: ComponentType<_ComponentName> | undefined\n        component_name: _ComponentName;\n        value: Partial<ComponentType<_ComponentName>> | DefaultValue | undefined;\n    }): ComponentType<_ComponentName> | undefined;\n\n    /**\n     * @internal\n     */\n    protected _unsafeSetComponentValue<_ComponentName extends ComponentName>({\n        component_name,\n        value,\n    }: {\n        component_name: _ComponentName;\n        value: ComponentType<_ComponentName>;\n    }): void {\n        //@ts-expect-error: sssh go back to sleep\n        this.#core[component_name] = value;\n    }\n}\n", "import { ComponentName } from \"@3dverse/livelink.core\";\n\n/**\n * The event that is fired when an entity is updated, either by adding, modifying or removing\n * components.\n *\n * @event\n * @noInheritDoc\n * @category Scene\n */\nexport class EntityUpdatedEvent extends Event {\n    /**\n     * The source of the change.\n     * - \"external\": The change was made by another user from another instance of the app or even another app.\n     * - \"internal\": The change was made by the current app.\n     */\n    public readonly change_source: \"local\" | \"external\";\n\n    /**\n     * The names of the components that were added.\n     */\n    public readonly new_components: Array<ComponentName>;\n\n    /**\n     * The names of the components that were updated.\n     */\n    public readonly updated_components: Array<ComponentName>;\n\n    /**\n     * The names of the components that were removed.\n     */\n    public readonly deleted_components: Array<ComponentName>;\n\n    /**\n     *\n     */\n    isAnyComponentDirty({ components }: { components: Array<ComponentName> }): boolean {\n        return (\n            this.new_components.some(component => components.includes(component)) ||\n            this.updated_components.some(component => components.includes(component)) ||\n            this.deleted_components.some(component => components.includes(component))\n        );\n    }\n\n    /**\n     * @internal\n     */\n    constructor({\n        change_source,\n        new_components,\n        updated_components,\n        deleted_components,\n    }: {\n        change_source: \"local\" | \"external\";\n        new_components: Array<ComponentName>;\n        updated_components: Array<ComponentName>;\n        deleted_components: Array<ComponentName>;\n    }) {\n        super(\"on-entity-updated\");\n        this.change_source = change_source;\n        this.new_components = new_components;\n        this.updated_components = updated_components;\n        this.deleted_components = deleted_components;\n    }\n}\n\n/**\n * The event that is fired when the entity visibility changes.\n *\n * @event\n * @noInheritDoc\n * @category Scene\n */\nexport class EntityVisibilityChangedEvent extends Event {\n    /**\n     * The new visibility state of the entity.\n     */\n    public readonly is_visible: boolean;\n\n    /**\n     * @internal\n     */\n    constructor({ is_visible }: { is_visible: boolean }) {\n        super(\"on-entity-visibility-changed\");\n        this.is_visible = is_visible;\n    }\n}\n\n/**\n * @event\n * @category Scene\n */\nexport type EntityEvents = {\n    \"on-entity-updated\": EntityUpdatedEvent;\n    \"on-entity-visibility-changed\": EntityVisibilityChangedEvent;\n};\n", "import { copySign } from \".\";\nimport type { Quat, Vec3 } from \"@3dverse/livelink.core\";\n\n/**\n * @internal\n */\nexport function quaternionToEuler([x, y, z, w]: Quat): Vec3 {\n    const euler = { roll: 0.0, pitch: 0.0, yaw: 0.0 };\n    const q = { x, y, z, w };\n\n    // roll (x-axis rotation)\n    const sinr_cosp = +2.0 * (q.w * q.x + q.y * q.z);\n    const cosr_cosp = +1.0 - 2.0 * (q.x * q.x + q.y * q.y);\n    euler.roll = Math.atan2(sinr_cosp, cosr_cosp);\n\n    // pitch (y-axis rotation)\n    const sinp = +2.0 * (q.w * q.y - q.z * q.x);\n    if (Math.abs(sinp) >= 1) {\n        euler.pitch = copySign(Math.PI / 2, sinp); // use 90 degrees if out of range: ;\n    } else {\n        euler.pitch = Math.asin(sinp);\n    }\n\n    // yaw (z-axis rotation)\n    const siny_cosp = +2.0 * (q.w * q.z + q.x * q.y);\n    const cosy_cosp = +1.0 - 2.0 * (q.y * q.y + q.z * q.z);\n    euler.yaw = Math.atan2(siny_cosp, cosy_cosp);\n\n    return [euler.roll, euler.pitch, euler.yaw].map(radian => (radian * 180.0) / Math.PI) as Vec3;\n}\n\n/**\n * @internal\n */\nexport function quaternionFromEuler(eulers: Vec3): Quat {\n    const [roll, pitch, yaw] = eulers.map(degree => (degree * Math.PI) / 180.0);\n\n    const cy = Math.cos(yaw / 2);\n    const sy = Math.sin(yaw / 2);\n    const cp = Math.cos(pitch / 2);\n    const sp = Math.sin(pitch / 2);\n    const cr = Math.cos(roll / 2);\n    const sr = Math.sin(roll / 2);\n\n    return [\n        cy * cp * sr - sy * sp * cr,\n        sy * cp * sr + cy * sp * cr,\n        sy * cp * cr - cy * sp * sr,\n        cy * cp * cr + sy * sp * sr,\n    ];\n}\n", "export * from \"./quaternion\";\n\n/**\n * @internal\n */\nexport function copySign(a: number, b: number): number {\n    return b < 0 ? -Math.abs(a) : Math.abs(a);\n}\n", "//------------------------------------------------------------------------------\nimport type { ComponentName, Components, Mat4, Quat, Vec3 } from \"@3dverse/livelink.core\";\nimport { mat4, quat, vec3 } from \"gl-matrix\";\n\n//------------------------------------------------------------------------------\nimport { EntityBase } from \"../../_prebuild/EntityBase\";\n\n//------------------------------------------------------------------------------\nimport { EntityUpdatedEvent } from \"./EntityEvents\";\nimport { quaternionFromEuler, quaternionToEuler } from \"../maths\";\n\nfunction assert<_T extends never>(): void {}\ntype TypeSatisfies<A, B> = Exclude<B, A>;\n\n/**\n * @category Engine Schemas\n */\nexport type Transform = {\n    /**\n     * x, y, z position of the entity.\n     * @defaultValue 0,0,0\n     */\n    position: Vec3;\n\n    /**\n     * Orientation of the entity expressed as a quaternion.\n     * @defaultValue 0,0,0,1\n     */\n    orientation: Quat;\n\n    /**\n     * x, y, z scale of the entity.\n     * @defaultValue 1,1,1\n     */\n    scale: Vec3;\n\n    /**\n     * Orientation of the entity expressed as euler angles.\n     * @defaultValue 0,0,0\n     */\n    eulerOrientation: Vec3;\n};\n\n/**\n * Axis-Aligned Bounding Box data\n *\n * @category Engine Schemas\n */\nexport type Aabb = {\n    /**\n     * Minimum X,Y,Z distances\n     * @defaultValue -1,-1,-1\n     */\n    min: Vec3;\n    /**\n     * Maximum X,Y,Z distances\n     * @defaultValue 1,1,1\n     */\n    max: Vec3;\n    /**\n     * Center of the bounding box\n     * @defaultValue 0,0,0\n     */\n    center: Vec3;\n    /**\n     * longest edge length of the bounding box\n     * @defaultValue 2\n     */\n    longest_edge_length: number;\n};\n\nassert<TypeSatisfies<Transform, Omit<Components.LocalTransform, \"globalEulerOrientation\">>>();\n\n/**\n * @category Scene\n */\nexport abstract class EntityTransformHandler extends EntityBase {\n    /**\n     *\n     */\n    #global_transform: Transform;\n\n    /**\n     *\n     */\n    #global_transform_proxy: GlobalTransformHandler;\n\n    /**\n     *\n     */\n    #local_transform: Components.LocalTransform;\n\n    /**\n     *\n     */\n    #local_transform_proxy: LocalTransformHandler;\n\n    /**\n     * The local space to world space matrix of the entity.\n     */\n    #ls_to_ws: Mat4 = mat4.create() as Mat4;\n\n    /**\n     * The world space to local space matrix of the entity.\n     */\n    #ws_to_ls: Mat4 = mat4.create() as Mat4;\n\n    /**\n     *\n     */\n    #parent: EntityTransformHandler | null = null;\n\n    /**\n     * Whether the global transform needs to be recalculated.\n     */\n    #is_global_transform_dirty = true;\n\n    /**\n     * A counter that increments every time the global or local transform of the entity is altered.\n     * Used by our child entities to determine if their parent entity has been altered since the last update.\n     * See #last_parent_update_id below.\n     */\n    #last_update_id = 0;\n\n    /**\n     * A copy of the last parent entity update id.\n     * Used to determine if our parent entity has been altered since the last update.\n     */\n    #last_parent_update_id = 0;\n\n    /**\n     *\n     */\n    constructor({\n        euid,\n        local_transform,\n        parent,\n    }: {\n        euid: Components.Euid;\n        local_transform: Components.LocalTransform;\n        parent: EntityTransformHandler | null;\n    }) {\n        super({ euid });\n\n        this.#parent = parent;\n        this.#local_transform = local_transform;\n        this.#global_transform = {\n            position: [0, 0, 0],\n            orientation: [0, 0, 0, 1],\n            scale: [1, 1, 1],\n            eulerOrientation: [0, 0, 0],\n        };\n\n        this.#local_transform_proxy = new LocalTransformHandler(this, this.#local_transform);\n        this.#global_transform_proxy = new GlobalTransformHandler(this, this.#global_transform);\n\n        this._unsafeSetComponentValue({ component_name: \"local_transform\", value: this.#local_transform });\n    }\n\n    /**\n     * @internal\n     */\n    get _last_update_id(): number {\n        return this.#last_update_id;\n    }\n\n    /**\n     * The global transform of the entity.\n     */\n    get global_transform(): Transform {\n        return this.#global_transform_proxy;\n    }\n\n    /**\n     * The global transform of the entity.\n     */\n    set global_transform(value: Partial<Transform>) {\n        this._setGlobalTransform({ global_transform: value, change_source: \"local\" });\n        this._markComponentAsDirty({ component_name: \"local_transform\" });\n    }\n\n    /**\n     * The local transform of the entity.\n     */\n    get local_transform(): Transform {\n        return this.#local_transform_proxy;\n    }\n\n    /**\n     * The local transform of the entity.\n     */\n    set local_transform(value: Partial<Transform>) {\n        Object.assign(this.#local_transform_proxy, value);\n    }\n\n    /**\n     * The global bounding box (aabb) of the entity.\n     */\n    get global_aabb(): Aabb {\n        let longest_edge_length = -Number.MAX_VALUE;\n        const local_aabb = this.local_aabb || { min: [-1, -1, -1] as Vec3, max: [1, 1, 1] as Vec3 };\n        const { min: aabb_min, max: aabb_max } = local_aabb;\n\n        const vertices = [\n            vec3.fromValues(aabb_min[0], aabb_min[1], aabb_min[2]),\n            vec3.fromValues(aabb_max[0], aabb_min[1], aabb_min[2]),\n            vec3.fromValues(aabb_min[0], aabb_max[1], aabb_min[2]),\n            vec3.fromValues(aabb_min[0], aabb_min[1], aabb_max[2]),\n            vec3.fromValues(aabb_max[0], aabb_max[1], aabb_max[2]),\n            vec3.fromValues(aabb_min[0], aabb_max[1], aabb_max[2]),\n            vec3.fromValues(aabb_max[0], aabb_min[1], aabb_max[2]),\n            vec3.fromValues(aabb_max[0], aabb_max[1], aabb_min[2]),\n        ];\n\n        vertices.forEach(vertex => vec3.transformMat4(vertex, vertex, this.ls_to_ws as mat4));\n\n        const min = vec3.fromValues(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n        const max = vec3.fromValues(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n        const center = vec3.create();\n        vertices.forEach(vertex => {\n            vec3.min(min, min, vertex);\n            vec3.max(max, max, vertex);\n            vec3.add(center, center, vertex);\n        });\n        vec3.scale(center, center, 1 / 8);\n\n        const axes = [\n            { vertex: vertices[0], test_vertices: [vertices[1], vertices[2], vertices[3]] },\n            { vertex: vertices[6], test_vertices: [vertices[1], vertices[3], vertices[4]] },\n            { vertex: vertices[5], test_vertices: [vertices[2], vertices[3], vertices[4]] },\n            { vertex: vertices[7], test_vertices: [vertices[1], vertices[2], vertices[4]] },\n        ];\n\n        axes.forEach(({ vertex, test_vertices }) => {\n            test_vertices.forEach(test_vertex => {\n                const distance = vec3.distance(vertex, test_vertex);\n                if (distance > longest_edge_length) {\n                    longest_edge_length = distance;\n                }\n            });\n        });\n\n        return {\n            min: Array.from(min) as Vec3,\n            max: Array.from(max) as Vec3,\n            center: Array.from(center) as Vec3,\n            longest_edge_length,\n        };\n    }\n\n    /**\n     * The parent entity of this entity or null if it has no parent.\n     */\n    get parent(): EntityTransformHandler | null {\n        return this.#parent;\n    }\n\n    /**\n     *\n     */\n    set parent(_parent: EntityTransformHandler | null) {\n        throw new Error(\"Not implemented\");\n    }\n\n    /**\n     * Check if the entity global transform, or any of its ancestors global transform,\n     * has been modified since the last calculation.\n     */\n    get #is_dirty(): boolean {\n        if (this.#parent) {\n            if (this.#parent._last_update_id !== this.#last_parent_update_id) {\n                return true;\n            }\n\n            if (this.#parent.#is_dirty) {\n                return true;\n            }\n        }\n\n        return this.#is_global_transform_dirty;\n    }\n\n    /**\n     * Called when the entity has been updated from the proxy object.\n     * Saves the last parent update id, and increments the update id\n     * as our global transform has been modified.\n     */\n    set #is_dirty(value: false) {\n        this.#is_global_transform_dirty = value;\n        this.#last_update_id++;\n        this.#last_parent_update_id = this.#parent?._last_update_id ?? 0;\n    }\n\n    /**\n     * @internal\n     *\n     * Recalculate the local transform of the entity based on the global transform.\n     * Does not mark the local transform component as dirty.\n     */\n    _setGlobalTransform({\n        global_transform,\n        change_source,\n    }: {\n        global_transform: Partial<Transform>;\n        change_source: \"local\" | \"external\";\n    }): void {\n        if (global_transform.position) {\n            this._setGlobalPosition(global_transform.position);\n            vec3.copy(this.#global_transform.position, global_transform.position);\n        }\n\n        if (global_transform.orientation) {\n            this._setGlobalOrientation(global_transform.orientation);\n            quat.copy(this.#global_transform.orientation, global_transform.orientation);\n        }\n\n        if (global_transform.eulerOrientation) {\n            this._setGlobalEulerOrientation(global_transform.eulerOrientation);\n            vec3.copy(this.#global_transform.eulerOrientation, global_transform.eulerOrientation);\n        }\n\n        if (global_transform.scale) {\n            this._setGlobalScale(global_transform.scale);\n            vec3.copy(this.#global_transform.scale, global_transform.scale);\n        }\n\n        this._computeTransformMatrices();\n\n        this._dispatchEvent(\n            new EntityUpdatedEvent({\n                change_source,\n                updated_components: [\"local_transform\"],\n                deleted_components: [],\n                new_components: [],\n            }),\n        );\n    }\n\n    /**\n     * @internal\n     *\n     * Mark the global transform as needing recalculation.\n     *\n     * Called when the local transform of the entity has been modified from the proxied object.\n     */\n    _markGlobalTransformAsDirty(): void {\n        this.#is_global_transform_dirty = true;\n        this._markLocalTransformAsDirty();\n    }\n\n    /**\n     * @internal\n     *\n     * Mark the local transform as dirty\n     *\n     * Called when the global transform of the entity has been modified, or when the local transform has been modified.\n     */\n    _markLocalTransformAsDirty(): void {\n        this.#last_update_id++;\n        this._markComponentAsDirty({ component_name: \"local_transform\" });\n    }\n\n    /**\n     * @internal\n     *\n     * If the entity is dirty, recalculate the global transform, then clear the dirty state.\n     */\n    _recalculateGlobalTransformIfNeeded = (): void => {\n        if (this.#is_dirty) {\n            this.#computeGlobalPosition();\n            this.#computeGlobalOrientation();\n            this.#computeGlobalScale();\n            this.#computeGlobalEulerOrientation();\n\n            this._computeTransformMatrices();\n\n            //console.debug(`\uD83E\uDD13 Recalculating ${this.debug_name?.value} global transform`);\n            this.#is_dirty = false;\n        }\n    };\n\n    /**\n     * @internal\n     *\n     * Compute the local space to world space and world space to local space matrices of the entity.\n     */\n    _computeTransformMatrices(): void {\n        mat4.fromRotationTranslationScale(\n            this.#ls_to_ws,\n            this.#global_transform.orientation,\n            this.#global_transform.position,\n            this.#global_transform.scale,\n        );\n\n        mat4.invert(this.#ws_to_ls, this.#ls_to_ws);\n    }\n\n    /**\n     * @internal\n     *\n     * Set the local transform of the entity.\n     * Does not mark the local transform as dirty.\n     *\n     * Called when the entity is updated from an external source.\n     */\n    _setLocalTransform({ local_transform }: { local_transform: Partial<Components.LocalTransform> }): void {\n        if (local_transform.position) {\n            vec3.copy(this.#local_transform.position, local_transform.position);\n        }\n        if (local_transform.orientation) {\n            quat.copy(this.#local_transform.orientation, local_transform.orientation);\n        }\n        if (local_transform.eulerOrientation) {\n            vec3.copy(this.#local_transform.eulerOrientation, local_transform.eulerOrientation);\n        }\n        if (local_transform.scale) {\n            vec3.copy(this.#local_transform.scale, local_transform.scale);\n        }\n        if (local_transform.globalEulerOrientation) {\n            vec3.copy(this.#local_transform.globalEulerOrientation, local_transform.globalEulerOrientation);\n        }\n\n        this.#is_global_transform_dirty = true;\n    }\n\n    /**\n     * Compute the global position of the entity.\n     */\n    #computeGlobalPosition(): Vec3 {\n        const local_position = this.#local_transform.position;\n        if (!this.#parent) {\n            return vec3.copy(this.#global_transform.position, local_position) as Vec3;\n        }\n\n        return vec3.transformMat4(this.#global_transform.position, local_position, this.#parent.ls_to_ws) as Vec3;\n    }\n\n    /**\n     * @internal\n     *\n     * Set the global position of the entity.\n     * Does not mark the local transform as dirty.\n     */\n    _setGlobalPosition(value: Vec3): void {\n        if (!this.#parent) {\n            vec3.copy(this.#local_transform.position, value);\n            return;\n        }\n\n        vec3.transformMat4(this.#local_transform.position, value, this.#parent.ws_to_ls);\n    }\n\n    /**\n     * Get the global orientation of the entity.\n     * Does not mark the local transform as dirty.\n     */\n    #computeGlobalOrientation(): Quat {\n        if (!this.#parent) {\n            return quat.copy(this.#global_transform.orientation, this.#local_transform.orientation) as Quat;\n        }\n\n        return quat.multiply(\n            this.#global_transform.orientation,\n            this.#parent.global_transform.orientation,\n            this.#local_transform.orientation,\n        ) as Quat;\n    }\n\n    /**\n     * @internal\n     *\n     * Set the global orientation of the entity.\n     * Also update the euler orientation.\n     * Does not mark the local transform as dirty.\n     */\n    _setGlobalOrientation(value: Quat): void {\n        if (!this.#parent) {\n            quat.copy(this.#local_transform.orientation, value);\n            vec3.copy(this.#local_transform.eulerOrientation, quaternionToEuler(value));\n            return;\n        }\n\n        const conjugate = quat.conjugate(quat.create(), this.#parent.global_transform.orientation);\n        const local_orientation = this.#local_transform.orientation;\n        quat.multiply(local_orientation, conjugate, value);\n        this.#local_transform.eulerOrientation = quaternionToEuler(local_orientation);\n    }\n\n    /**\n     * Get the global euler orientation of the entity.\n     */\n    #computeGlobalEulerOrientation(): Vec3 {\n        const orientationFromEuler = quaternionFromEuler(this.#local_transform.globalEulerOrientation);\n        const isQuaternionEqual = orientationFromEuler.every(\n            (value, index) => Math.max(value - this.#global_transform.orientation[index]) < 0.000001,\n        );\n\n        const quat = isQuaternionEqual\n            ? this.#local_transform.globalEulerOrientation\n            : quaternionToEuler(this.#global_transform.orientation as Quat);\n\n        return vec3.copy(this.#global_transform.eulerOrientation, quat) as Vec3;\n    }\n\n    /**\n     * Set the global euler orientation of the entity.\n     * Also update the quat orientation.\n     * Does not mark the local transform as dirty.\n     */\n    _setGlobalEulerOrientation(value: Vec3): void {\n        const orientation = quaternionFromEuler(value);\n        this._setGlobalOrientation(orientation);\n        vec3.copy(this.#local_transform.globalEulerOrientation, value);\n    }\n\n    /**\n     * @internal\n     *\n     * Get the global scale of the entity.\n     */\n    #computeGlobalScale(): Vec3 {\n        const local_scale = this.#local_transform.scale;\n        if (!this.#parent) {\n            return vec3.copy(this.#global_transform.scale, local_scale) as Vec3;\n        }\n\n        return vec3.multiply(this.#global_transform.scale, this.#parent.global_transform.scale, local_scale) as Vec3;\n    }\n\n    /**\n     * @internal\n     *\n     * Set the global scale of the entity.\n     * Does not mark the local transform as dirty.\n     */\n    _setGlobalScale(value: Vec3): void {\n        if (!this.#parent) {\n            vec3.copy(this.#local_transform.scale, value);\n            return;\n        }\n\n        vec3.divide(this.#local_transform.scale, value, this.#parent.global_transform.scale) as Vec3;\n    }\n\n    /**\n     * The local space to world space matrix of the entity.\n     */\n    get ls_to_ws(): Readonly<Mat4> {\n        this._recalculateGlobalTransformIfNeeded();\n        return this.#ls_to_ws;\n    }\n\n    /**\n     * The world space to local space matrix of the entity.\n     */\n    get ws_to_ls(): Readonly<Mat4> {\n        this._recalculateGlobalTransformIfNeeded();\n        return this.#ws_to_ls;\n    }\n\n    /**\n     * @internal\n     */\n    abstract _markComponentAsDirty({ component_name }: { component_name: ComponentName }): void;\n}\n\n/**\n *\n */\nclass LocalTransformHandler implements Transform {\n    #position: Vec3;\n    #orientation: Quat;\n    #eulerOrientation: Vec3;\n    #scale: Vec3;\n\n    /**\n     *\n     */\n    constructor(entity: EntityTransformHandler, local_transform: Components.LocalTransform) {\n        const createProxyHandler = <T extends object>(): ProxyHandler<T> => ({\n            get: (target, prop): unknown => Reflect.get(target, prop),\n            set: (target, prop, value): boolean => {\n                const returnValue = Reflect.set(target, prop, value);\n                entity._markGlobalTransformAsDirty();\n                return returnValue;\n            },\n        });\n\n        this.#position = new Proxy(local_transform.position, createProxyHandler<Vec3>());\n        this.#scale = new Proxy(local_transform.scale, createProxyHandler<Vec3>());\n\n        this.#orientation = new Proxy(local_transform.orientation, {\n            get: (target, prop): unknown => local_transform.orientation[prop as keyof Quat],\n            set: (target, prop, value): boolean => {\n                const returnValue = Reflect.set(target, prop, value);\n                local_transform.eulerOrientation = quaternionToEuler(local_transform.orientation);\n                entity._markGlobalTransformAsDirty();\n                return returnValue;\n            },\n        });\n\n        this.#eulerOrientation = new Proxy(local_transform.eulerOrientation, {\n            get: (target, prop): unknown => local_transform.eulerOrientation[prop as keyof Vec3],\n            set: (target, prop, value): boolean => {\n                const returnValue = Reflect.set(target, prop, value);\n                local_transform.orientation = quaternionFromEuler(local_transform.eulerOrientation);\n                entity._markGlobalTransformAsDirty();\n                return returnValue;\n            },\n        });\n    }\n\n    /**\n     *\n     */\n    get position(): Vec3 {\n        return this.#position;\n    }\n\n    /**\n     *\n     */\n    get orientation(): Quat {\n        return this.#orientation;\n    }\n\n    /**\n     *\n     */\n    get eulerOrientation(): Vec3 {\n        return this.#eulerOrientation;\n    }\n\n    /**\n     *\n     */\n    get scale(): Vec3 {\n        return this.#scale;\n    }\n\n    /**\n     *\n     */\n    set position(value: Vec3) {\n        Object.assign(this.#position, value);\n    }\n\n    /**\n     *\n     */\n    set orientation(value: Quat) {\n        Object.assign(this.#orientation, value);\n    }\n\n    /**\n     *\n     */\n    set eulerOrientation(value: Vec3) {\n        Object.assign(this.#eulerOrientation, value);\n    }\n\n    /**\n     *\n     */\n    set scale(value: Vec3) {\n        Object.assign(this.#scale, value);\n    }\n}\n\n/**\n *\n */\nclass GlobalTransformHandler implements Transform {\n    #position: Vec3;\n    #orientation: Quat;\n    #eulerOrientation: Vec3;\n    #scale: Vec3;\n\n    /**\n     *\n     */\n    constructor(_entity: EntityTransformHandler, global_transform: Transform) {\n        this.#position = new Proxy(global_transform.position, {\n            get: (target, prop): unknown => {\n                _entity._recalculateGlobalTransformIfNeeded();\n                return Reflect.get(target, prop);\n            },\n            set: (target, prop, value): boolean => {\n                Reflect.set(target, prop, value);\n                _entity._setGlobalPosition(target);\n                _entity._computeTransformMatrices();\n                _entity._markLocalTransformAsDirty();\n                return true;\n            },\n        });\n\n        this.#orientation = new Proxy(global_transform.orientation, {\n            get: (target, prop): unknown => {\n                _entity._recalculateGlobalTransformIfNeeded();\n                return Reflect.get(target, prop);\n            },\n            set: (target, prop, value): boolean => {\n                Reflect.set(target, prop, value);\n                _entity._setGlobalOrientation(target);\n                _entity._computeTransformMatrices();\n                _entity._markLocalTransformAsDirty();\n                return true;\n            },\n        });\n\n        this.#eulerOrientation = new Proxy(global_transform.eulerOrientation, {\n            get: (target, prop): unknown => {\n                _entity._recalculateGlobalTransformIfNeeded();\n                return Reflect.get(target, prop);\n            },\n            set: (target, prop, value): boolean => {\n                Reflect.set(target, prop, value);\n                _entity._setGlobalEulerOrientation(target);\n                _entity._computeTransformMatrices();\n                _entity._markLocalTransformAsDirty();\n                return true;\n            },\n        });\n\n        this.#scale = new Proxy(global_transform.scale, {\n            get: (target, prop): unknown => {\n                _entity._recalculateGlobalTransformIfNeeded();\n                return Reflect.get(target, prop);\n            },\n            set: (target, prop, value): boolean => {\n                Reflect.set(target, prop, value);\n                _entity._setGlobalScale(target);\n                _entity._computeTransformMatrices();\n                _entity._markLocalTransformAsDirty();\n                return true;\n            },\n        });\n    }\n\n    /**\n     *\n     */\n    get position(): Vec3 {\n        return this.#position;\n    }\n\n    /**\n     *\n     */\n    get orientation(): Quat {\n        return this.#orientation;\n    }\n\n    /**\n     *\n     */\n    get eulerOrientation(): Vec3 {\n        return this.#eulerOrientation;\n    }\n\n    /**\n     *\n     */\n    get scale(): Vec3 {\n        return this.#scale;\n    }\n\n    /**\n     *\n     */\n    set position(value: Vec3) {\n        Object.assign(this.#position, value);\n    }\n\n    /**\n     *\n     */\n    set orientation(value: Quat) {\n        Object.assign(this.#orientation, value);\n    }\n\n    /**\n     *\n     */\n    set eulerOrientation(value: Vec3) {\n        Object.assign(this.#eulerOrientation, value);\n    }\n\n    /**\n     *\n     */\n    set scale(value: Vec3) {\n        Object.assign(this.#scale, value);\n    }\n}\n", "import type { Entity } from \"./Entity\";\nimport type { ComponentName } from \"@3dverse/livelink.core\";\n\nexport type ComponentHandlers = Record<ComponentName | \"default\", typeof ComponentHandler>;\n\n/**\n * @internal\n */\n/* eslint-disable */\nexport class ComponentHandler {\n    /**\n     *\n     */\n    constructor(\n        protected readonly _entity: Entity,\n        private readonly _component_name: ComponentName,\n    ) {}\n\n    /**\n     *\n     */\n    get(component: object, prop: PropertyKey): unknown {\n        //@ts-ignore\n        if (typeof component[prop] === \"object\" || Array.isArray(component[prop])) {\n            //@ts-ignore\n            return new Proxy(component[prop], new ComponentHandler(this._entity, this._component_name));\n        }\n        return Reflect.get(component, prop);\n    }\n\n    /**\n     *\n     */\n    set(component: object, prop: PropertyKey, v: any): boolean {\n        //console.trace(\"SET ATTRIBUTE\", prop, v);\n        this._entity._markComponentAsDirty({ component_name: this._component_name });\n        return Reflect.set(component, prop, v);\n    }\n\n    /**\n     *\n     */\n    deleteProperty(component: object, prop: PropertyKey): boolean {\n        //console.debug(\"DELETE ATTRIBUTE\", prop);\n        this._entity._markComponentAsDirty({ component_name: this._component_name });\n        return Reflect.deleteProperty(component, prop);\n    }\n}\n", "import { RTID, ScriptDataObject } from \"@3dverse/livelink.core\";\nimport { Entity } from \"./Entity\";\nimport { Scene } from \"./Scene\";\n\n/**\n * The event that is fired when an entity receives a script event.\n *\n * @event\n * @noInheritDoc\n * @category Scene\n */\nexport class ScriptEventReceived extends Event {\n    /**\n     * The entity that emitted the script event.\n     */\n    readonly emitter_entity: Entity | null;\n\n    /**\n     * The data object associated with the script event.\n     */\n    readonly data_object: ScriptDataObject;\n\n    /**\n     * @internal\n     */\n    constructor({\n        event_name,\n        emitter_entity,\n        data_object,\n    }: {\n        event_name: string;\n        emitter_entity: Entity | null;\n        data_object: ScriptDataObject;\n    }) {\n        super(event_name);\n        this.emitter_entity = emitter_entity;\n        this.data_object = data_object;\n    }\n}\n\n/**\n * The event that is fired when an entity emits a script event.\n *\n * @event\n * @noInheritDoc\n * @category Scene\n */\nexport class ScriptEventEmitted extends Event {\n    /**\n     * The entity that emitted the script event.\n     */\n    readonly emitter_entity: Entity;\n\n    /**\n     * The data object associated with the script event.\n     */\n    readonly data_object: ScriptDataObject;\n\n    /**\n     *\n     */\n    #scene: Scene;\n\n    /**\n     *\n     */\n    #target_rtids: Array<RTID>;\n\n    /**\n     *\n     */\n    #target_entities: Promise<Array<Entity | null>> | null = null;\n\n    /**\n     * The entities that are targeted by the script event.\n     * @returns A promise that resolves to an array of entities or null if the entity could not be found.\n     */\n    get target_entities(): Promise<Array<Entity | null>> {\n        if (!this.#target_entities) {\n            this.#target_entities = Promise.all(\n                this.#target_rtids.map(entity_rtid => this.#scene._findEntity({ entity_rtid })),\n            );\n        }\n        return this.#target_entities;\n    }\n\n    /**\n     * @internal\n     */\n    constructor({\n        scene,\n        event_name,\n        emitter_entity,\n        target_rtids,\n        data_object,\n    }: {\n        scene: Scene;\n        event_name: string;\n        emitter_entity: Entity;\n        target_rtids: Array<RTID>;\n        data_object: ScriptDataObject;\n    }) {\n        super(event_name);\n        this.#scene = scene;\n        this.emitter_entity = emitter_entity;\n        this.#target_rtids = target_rtids;\n        this.data_object = data_object;\n    }\n}\n\n/**\n * @internal\n * @event\n * @category Scene\n */\nexport type ScriptEvents<T> = {\n    [event_id: string]: T;\n};\n", "//------------------------------------------------------------------------------\nimport type {\n    ComponentName,\n    RTID,\n    UUID,\n    ComponentType,\n    EntityCore,\n    ComponentsManifest,\n    ComponentsRecord,\n    Mat4,\n    ScriptDataObject,\n} from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { type DefaultValue } from \"../../_prebuild/EntityBase\";\n\n//------------------------------------------------------------------------------\nimport { EntityCreationOptions, Scene } from \"./Scene\";\nimport { EntityTransformHandler, Transform } from \"./EntityTransformHandler\";\nimport { ComponentHandler } from \"./ComponentHandler\";\nimport { EntityUpdatedEvent, EntityVisibilityChangedEvent } from \"./EntityEvents\";\nimport { ScriptEventEmitted, ScriptEventReceived, ScriptEvents } from \"./ScriptEvents\";\nimport { TypedEventTarget } from \"../TypedEventTarget\";\n\n/**\n * An entity in a scene.\n *\n * An entity is a collection of components.\n *\n * This class embeds a proxy to monitor component access and mark the entity as dirty when\n * a component is added, modified or deleted.\n *\n * All relevant modifications to entities are batched and automatically sent to the server and\n * broadcasted to other clients if the `auto_broadcast` property is set to \"on\".\n *\n * On top of providing direct access to the components, this class provides helper methods to\n * retrieve the parent entity and the children entities.\n *\n * This class cannot be instantiated directly.\n * Use the {@link Scene.newEntity} or {@link Scene.newEntities} methods on an existing scene to\n * create an entity.\n *\n * @category Scene\n */\nexport class Entity extends EntityTransformHandler {\n    /**\n     *\n     */\n    readonly #scene: Scene;\n\n    /**\n     *\n     */\n    readonly #dirty_components = new Set<ComponentName>();\n\n    /**\n     *\n     */\n    readonly #deleted_components = new Set<ComponentName>();\n\n    /**\n     *\n     */\n    readonly #script_event_received_event_target = new TypedEventTarget<ScriptEvents<ScriptEventReceived>>();\n\n    /**\n     *\n     */\n    readonly #script_event_emitted_event_target = new TypedEventTarget<ScriptEvents<ScriptEventEmitted>>();\n\n    /**\n     * @deprecated\n     */\n    #auto_broadcast: boolean = true;\n\n    /**\n     *\n     */\n    #is_visible: boolean = true;\n\n    /**\n     * @internal\n     */\n    get rtid(): RTID {\n        return this.euid.rtid;\n    }\n\n    /**\n     * The UUID of the entity.\n     *\n     * Note that multiple entities can share the same UUID if they are different instances of the\n     * same entity brought by multiple instances of the same scene.\n     */\n    get id(): UUID {\n        return this.euid.value;\n    }\n\n    /**\n     * The name of the entity.\n     */\n    get name(): string {\n        return this.debug_name?.value ?? \"<unnamed>\";\n    }\n\n    /**\n     * @deprecated\n     * Whether the entity has its components updates broadcasted to other clients.\n     */\n    get auto_broadcast(): boolean {\n        return this.#auto_broadcast;\n    }\n\n    /**\n     * @deprecated\n     * Set whether the entity has its components updates broadcasted to other clients.\n     */\n    set auto_broadcast(state: boolean) {\n        this.#auto_broadcast = state;\n        if (state === false) {\n            this.#scene._entity_registry._removeEntityFromBroadcastList({ entity: this });\n        }\n    }\n\n    /**\n     * Whether the entity is visible.\n     */\n    get is_visible(): boolean {\n        return this.#is_visible;\n    }\n\n    /**\n     * Set whether the entity is visible.\n     */\n    set is_visible(is_visible: boolean) {\n        this.#scene._setEntityVisibility({ entity_rtid: this.rtid, is_visible });\n        this.#is_visible = is_visible;\n        this._dispatchEvent(new EntityVisibilityChangedEvent({ is_visible }));\n    }\n\n    /**\n     * The parent entity of this entity or null if it has no parent.\n     */\n    override get parent(): Entity | null {\n        return super.parent as Entity | null;\n    }\n\n    /**\n     * Re-parent the entity by setting a parent entity.\n     */\n    override set parent(parent: Entity | null) {\n        super.parent = parent;\n    }\n\n    /**\n     * Local transform of the entity.\n     */\n    override get local_transform(): Transform {\n        return super.local_transform;\n    }\n\n    /**\n     * Set the local transform of the entity.\n     */\n    override set local_transform(local_transform: Partial<Transform>) {\n        super.local_transform = local_transform;\n    }\n\n    /**\n     * Global transform of the entity.\n     */\n    override get global_transform(): Transform {\n        return super.global_transform;\n    }\n\n    /**\n     * Set the global transform of the entity.\n     */\n    override set global_transform(global_transform: Partial<Transform>) {\n        super.global_transform = global_transform;\n    }\n\n    /**\n     * The local space to world space matrix of the entity.\n     */\n    override get ls_to_ws(): Readonly<Mat4> {\n        return super.ls_to_ws;\n    }\n\n    /**\n     * The world space to local space matrix of the entity.\n     */\n    override get ws_to_ls(): Readonly<Mat4> {\n        return super.ws_to_ls;\n    }\n\n    /**\n     * @internal\n     */\n    get _dirty_components(): Array<ComponentName> {\n        return Array.from(this.#dirty_components);\n    }\n\n    /**\n     * @internal\n     */\n    get _deleted_components(): Array<ComponentName> {\n        return Array.from(this.#deleted_components);\n    }\n\n    /**\n     * @internal\n     */\n    constructor({\n        scene,\n        parent = null,\n        components,\n        options,\n    }: {\n        scene: Scene;\n        parent: Entity | null;\n        components: EntityCore;\n        options?: EntityCreationOptions;\n    }) {\n        super({\n            euid: components.euid,\n            parent,\n            local_transform: scene._sanitizeComponentValue({\n                component_name: \"local_transform\",\n                value: components.local_transform,\n            }),\n        });\n\n        this.#scene = scene;\n        this._mergeComponents({ components, dispatch_event: false });\n        this.#scene._entity_registry.add({ entity: this });\n\n        if (!options) {\n            return;\n        }\n\n        if (options.auto_broadcast !== undefined) {\n            this.auto_broadcast = options.auto_broadcast;\n        }\n    }\n\n    /**\n     *\n     */\n    async getChildren(): Promise<Entity[]> {\n        return await this.#scene._getChildren({ entity: this });\n    }\n\n    /**\n     * Add an event listener for a script event.\n     * Script events are triggered by the server when a script attached to an entity emits an event.\n     *\n     * @param params\n     * @param params.event_map_id - The ID of the event map.\n     * @param params.event_name - The name of the event.\n     * @param params.onReceived - The callback to be called when the current entity is targetted by the script event.\n     * @param params.onEmitted - The callback to be called when the current entity emits the script event.\n     */\n    addScriptEventListener({\n        event_map_id,\n        event_name,\n        onReceived,\n        onEmitted,\n    }: {\n        event_map_id: UUID;\n        event_name: string;\n        onReceived?: (evt: ScriptEventReceived) => void;\n        onEmitted?: (evt: ScriptEventEmitted) => void;\n    }): void {\n        if (onReceived) {\n            this.#script_event_received_event_target.addEventListener(event_map_id + \"/\" + event_name, onReceived);\n        }\n\n        if (onEmitted) {\n            this.#script_event_emitted_event_target.addEventListener(event_map_id + \"/\" + event_name, onEmitted);\n        }\n    }\n\n    /**\n     * Remove an event listener for a script event.\n     *\n     * @param params\n     * @param params.event_map_id - The ID of the event map.\n     * @param params.event_name - The name of the event.\n     * @param params.onReceived - A previously registered callback.\n     * @param params.onEmitted - A previously registered callback.\n     */\n    removeScriptEventListener({\n        event_map_id,\n        event_name,\n        onReceived,\n        onEmitted,\n    }: {\n        event_map_id: UUID;\n        event_name: string;\n        onReceived?: (evt: ScriptEventReceived) => void;\n        onEmitted?: (evt: ScriptEventEmitted) => void;\n    }): void {\n        if (onReceived) {\n            this.#script_event_received_event_target.removeEventListener(event_map_id + \"/\" + event_name, onReceived);\n        }\n\n        if (onEmitted) {\n            this.#script_event_emitted_event_target.removeEventListener(event_map_id + \"/\" + event_name, onEmitted);\n        }\n    }\n\n    /**\n     * @experimental\n     */\n    async assignClientToScripts({ client_uuid }: { client_uuid: UUID }): Promise<void> {\n        if (!this.script_map || !this.script_map.elements) {\n            throw new Error(\"Entity has no scripts\");\n        }\n        const script_ids = Object.keys(this.script_map.elements);\n        await Promise.all(\n            script_ids.map(script_id =>\n                this.#scene._assignClientToScripts({ client_uuid, entity_rtid: this.rtid, script_uuid: script_id }),\n            ),\n        );\n    }\n\n    /**\n     * @internal\n     */\n    _mergeComponents({\n        components,\n        dispatch_event,\n        change_source,\n    }: { components: EntityCore | ComponentsManifest | Partial<ComponentsRecord> } & (\n        | { dispatch_event: false; change_source?: undefined }\n        | { dispatch_event: true; change_source: \"local\" | \"external\" }\n    )): void {\n        for (const key in components) {\n            const component_name = key as ComponentName | \"euid\";\n\n            switch (component_name) {\n                case \"euid\":\n                    break;\n                case \"local_transform\":\n                    this._setLocalTransform({ local_transform: components[component_name]! });\n                    break;\n                default:\n                    this.#unsafeSetComponentValue({ component_name, value: components[component_name] });\n                    break;\n            }\n        }\n\n        if (dispatch_event) {\n            this._dispatchEvent(\n                new EntityUpdatedEvent({\n                    change_source,\n                    updated_components: Object.keys(components) as Array<ComponentName>,\n                    deleted_components: [],\n                    new_components: [],\n                }),\n            );\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _markComponentAsDirty({ component_name }: { component_name: ComponentName }): void {\n        this.#dirty_components.add(component_name);\n        this.#scene._entity_registry._addDirtyEntity({ entity: this });\n        const isNewComponent = this[component_name] === undefined;\n        this._dispatchEvent(\n            new EntityUpdatedEvent({\n                change_source: \"local\",\n                updated_components: !isNewComponent ? [component_name] : [],\n                deleted_components: [],\n                new_components: isNewComponent ? [component_name] : [],\n            }),\n        );\n    }\n\n    /**\n     * @internal\n     */\n    _markComponentAsDeleted({ component_name }: { component_name: ComponentName }): void {\n        this.#deleted_components.add(component_name);\n        this.#scene._entity_registry._addDirtyEntity({ entity: this });\n        this._dispatchEvent(\n            new EntityUpdatedEvent({\n                change_source: \"local\",\n                updated_components: [],\n                deleted_components: [component_name],\n                new_components: [],\n            }),\n        );\n    }\n\n    /**\n     * @internal\n     */\n    _clearDirtyState(): void {\n        this.#dirty_components.clear();\n        this.#deleted_components.clear();\n    }\n\n    /**\n     * @internal\n     */\n    _onVisibilityChanged({ is_visible }: { is_visible: boolean }): void {\n        this.#is_visible = is_visible;\n        this._dispatchEvent(new EntityVisibilityChangedEvent({ is_visible }));\n    }\n\n    /**\n     * @internal\n     */\n    _onScriptEventEmitted({\n        scene,\n        event_name,\n        target_rtids,\n        data_object,\n    }: {\n        scene: Scene;\n        event_name: string;\n        target_rtids: Array<RTID>;\n        data_object: ScriptDataObject;\n    }): void {\n        this.#script_event_emitted_event_target._dispatchEvent(\n            new ScriptEventEmitted({ scene, event_name, emitter_entity: this, target_rtids, data_object }),\n        );\n    }\n\n    /**\n     * @internal\n     */\n    _onScriptEventReceived({\n        script_event_received_event,\n    }: {\n        script_event_received_event: ScriptEventReceived;\n    }): void {\n        this.#script_event_received_event_target._dispatchEvent(script_event_received_event);\n    }\n\n    /**\n     * Implementation of the EntityBase method.\n     * Called by each component setters.\n     *\n     * @internal\n     */\n    protected _setComponentValue<_ComponentName extends ComponentName>({\n        ref,\n        component_name,\n        value,\n    }: {\n        ref: ComponentType<_ComponentName> | undefined;\n        component_name: _ComponentName;\n        value: Partial<ComponentType<_ComponentName>> | DefaultValue | undefined;\n    }): ComponentType<_ComponentName> | undefined {\n        if (value === undefined && ref === undefined) {\n            return undefined;\n        }\n\n        if (value === undefined) {\n            this._markComponentAsDeleted({ component_name });\n            Reflect.deleteProperty(this, `#${component_name}`);\n            return undefined;\n        }\n\n        if (value === \"default\") {\n            // Setting the value to undefined will resolve to the default values\n            value = this.#scene._sanitizeComponentValue({ component_name, value: undefined });\n        }\n\n        if (ref === undefined) {\n            this._markComponentAsDirty({ component_name });\n            return this.#createComponentProxy({ component_name, value });\n        }\n\n        if (ref !== undefined) {\n            // Proxy will mark the entity as dirty if the component attributes are modified\n            Object.assign(ref, value);\n            return ref;\n        }\n    }\n\n    /**\n     *\n     */\n    #unsafeGetComponentValue<_ComponentName extends ComponentName>({\n        component_name,\n    }: {\n        component_name: _ComponentName;\n    }): ComponentType<_ComponentName> {\n        return Reflect.get(this, `#${component_name}`) as ComponentType<_ComponentName>;\n    }\n\n    /**\n     * Set the values of a component without marking it as dirty.\n     */\n    #unsafeSetComponentValue<_ComponentName extends ComponentName>({\n        component_name,\n        value,\n    }: {\n        component_name: _ComponentName;\n        value: Partial<ComponentType<_ComponentName>> | undefined;\n    }): void {\n        const existing_component = this.#unsafeGetComponentValue({ component_name });\n        if (existing_component) {\n            Object.assign(existing_component, value);\n            return;\n        }\n\n        const proxy = this.#createComponentProxy({ component_name, value });\n        this._unsafeSetComponentValue({ component_name, value: proxy });\n    }\n\n    /**\n     * Attach a component to the entity, by instantiating a proxy for it.\n     * Proxy is used to mark the entity as dirty if the component attributes are modified.\n     */\n    #createComponentProxy<_ComponentName extends ComponentName>({\n        component_name,\n        value,\n    }: {\n        component_name: _ComponentName;\n        value: Partial<ComponentType<_ComponentName>> | undefined;\n    }): ComponentType<_ComponentName> {\n        const sanitized_value = this.#scene._sanitizeComponentValue({ component_name, value });\n        // Keep an accessible reference to the proxied component value\n        Reflect.set(this, `#${component_name}`, sanitized_value);\n\n        return new Proxy(sanitized_value, new ComponentHandler(this, component_name)) as ComponentType<_ComponentName>;\n    }\n}\n", "/**\n *\n */\nconst op_prio = {\n    \"!\": 3,\n    \"&\": 2,\n    \"|\": 1,\n    \"^\": 1,\n} as const;\n\n/**\n *\n */\nfunction is_operator(op: string): boolean {\n    return Object.prototype.hasOwnProperty.call(op_prio, op);\n}\n\n/**\n *\n */\nfunction has_greater_precedence(op1: keyof typeof op_prio, op2: keyof typeof op_prio): boolean {\n    return op_prio[op1] > op_prio[op2];\n}\n\n/**\n * @internal\n */\nexport function compute_rpn(filter_value: string): string {\n    const tokens = filter_value.split(\" \");\n    const output: Array<string> = [];\n    const operators: Array<string> = [];\n\n    for (const token of tokens) {\n        switch (token) {\n            case \"!\":\n            case \"&\":\n            case \"|\":\n            case \"^\":\n                {\n                    while (operators.length > 0) {\n                        const op = operators[operators.length - 1] as keyof typeof op_prio;\n                        if (!is_operator(op) || has_greater_precedence(token, op)) {\n                            break;\n                        }\n                        operators.pop();\n                        output.push(op);\n                    }\n                    operators.push(token);\n                }\n                break;\n            case \"(\":\n                {\n                    operators.push(token);\n                }\n                break;\n            case \")\":\n                {\n                    while (operators[operators.length - 1] !== \"(\") {\n                        output.push(operators.pop()!);\n                    }\n                    console.assert(operators[operators.length - 1] === \"(\");\n                    operators.pop();\n                }\n                break;\n            default:\n                {\n                    output.push(token);\n                }\n                break;\n        }\n    }\n\n    while (operators.length !== 0) {\n        const op = operators.pop()!;\n        console.assert(op !== \"(\");\n        output.push(op);\n    }\n\n    return JSON.stringify(output);\n}\n", "//------------------------------------------------------------------------------\nimport type { RTID, UUID, ComponentName, UpdateEntityCommand } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { Entity } from \"./Entity\";\n\n/**\n * @internal\n *\n * The EntityRegistry class is responsible for managing the entities in the scene.\n * It keeps track of all entities and provides methods to add, remove, and find entities.\n * It also keeps track of:\n *  - dirty entities that have components that have been updated and need to be broadcasted to the editor.\n *  - entities that have components that have been detached and need to be removed from the editor.\n *  - entities that have updates that need to be broadcasted to the editor.\n */\nexport class EntityRegistry {\n    /**\n     * A set of all resolved entities that are ready to be used in the client application.\n     */\n    #entities = new Set<Entity>();\n\n    /**\n     * Map from rtid to entity.\n     */\n    #entity_rtid_lut = new Map<RTID, Entity>();\n\n    /**\n     * Map from EUID to a list of entities sharing the same EUID.\n     */\n    #entity_euid_lut = new Map<UUID, Array<Entity>>();\n\n    /**\n     * List of dirty entities sorted by component type.\n     */\n    #dirty_entities = new Set<Entity>();\n\n    /**\n     * List of dirty entities that need to be broadcasted to the editor sorted by component type.\n     */\n    #entities_to_persist = new Map<Entity, Set<ComponentName>>();\n\n    /**\n     * Adds a new entity in the registry. The entity must be valid, i.e. have valid RTID and EUID and must not have the\n     * same RTID as any registered entity.\n     *\n     * @param entity The entity to add.\n     * @throws Error if the entity is invalid or if an entity with the same RTID is already registered.\n     */\n    add({ entity }: { entity: Entity }): void {\n        const existingEntity = this.#entity_rtid_lut.get(entity.rtid);\n        if (existingEntity) {\n            throw new Error(\n                `Cannot add entity ${entity.name} to the registry, because entity ${existingEntity.name} has the same RTID.`,\n            );\n        }\n\n        this.#entities.add(entity);\n        this.#entity_rtid_lut.set(entity.rtid, entity);\n        const entities = this.#entity_euid_lut.get(entity.id);\n\n        if (entities) {\n            entities.push(entity);\n        } else {\n            this.#entity_euid_lut.set(entity.id, [entity]);\n        }\n    }\n\n    /**\n     * Removes an entity from the registry. The entity must have been previously added to the registry.\n     *\n     * @param entity The entity to remove.\n     * @throws Error if the entity is not registered in the registry.\n     */\n    remove({ entity }: { entity: Entity }): void {\n        if (!this.#entity_rtid_lut.delete(entity.rtid)) {\n            throw new Error(`Trying to remove entity ${entity.rtid} which has not been registred to the RTID LUT.`);\n        }\n\n        const entities = this.#entity_euid_lut.get(entity.id);\n        if (!entities) {\n            throw new Error(`Trying to remove entity ${entity.id} which has not been registered to the EUID LUT.`);\n        }\n\n        const index = entities.indexOf(entity);\n        if (index == -1) {\n            throw new Error(`Trying to remove entity ${entity.id} which has not been registered to the EUID LUT.`);\n        }\n\n        entities.slice(index, 1);\n\n        if (entities.length === 0) {\n            this.#entity_euid_lut.delete(entity.id);\n        }\n\n        if (!this.#entities.delete(entity)) {\n            throw new Error(`Trying to remove entity ${entity.id} which has not been registered to the registry.`);\n        }\n    }\n\n    /**\n     * @internal\n     *\n     * Returns the entity with the given RTID or null if not found.\n     *\n     * @param entity_rtid The RTID of the entity to get.\n     * @returns The entity with the given RTID or null if not found.\n     */\n    get({ entity_rtid }: { entity_rtid: RTID }): Entity | null {\n        return this.#entity_rtid_lut.get(entity_rtid) ?? null;\n    }\n\n    /**\n     * Returns all entities matching the given EUID or empty array if not found.\n     *\n     * @param entity_euid The EUID of the entities to get.\n     * @returns All entities matching the given EUID or empty array if not found.\n     */\n    find({ entity_euid }: { entity_euid: UUID }): Array<Entity> {\n        return this.#entity_euid_lut.get(entity_euid) ?? [];\n    }\n\n    /**\n     * @internal\n     */\n    _addDirtyEntity({ entity }: { entity: Entity }): void {\n        this.#dirty_entities.add(entity);\n    }\n\n    /**\n     * @internal\n     */\n    _removeEntityFromBroadcastList({ entity }: { entity: Entity }): void {\n        this.#entities_to_persist.delete(entity);\n    }\n\n    /**\n     * @internal\n     */\n    _getEntitiesToUpdate(): Array<UpdateEntityCommand> {\n        const update_command = new Array<UpdateEntityCommand>(this.#dirty_entities.size);\n\n        let i = 0;\n        for (const entity of this.#dirty_entities) {\n            update_command[i++] = {\n                entity_components: entity._core,\n                dirty_components: entity._dirty_components,\n                deleted_components: entity._deleted_components,\n            };\n\n            if (entity.auto_broadcast) {\n                this.#updateBroadcastList({ entity });\n            }\n\n            entity._clearDirtyState();\n        }\n\n        this.#dirty_entities.clear();\n\n        return update_command;\n    }\n\n    /**\n     * @internal\n     */\n    _getEntitiesToPersist(): Array<UpdateEntityCommand> {\n        const update_command = new Array<UpdateEntityCommand>(this.#entities_to_persist.size);\n\n        let i = 0;\n        for (const [entity, component_names] of this.#entities_to_persist) {\n            update_command[i++] = {\n                entity_components: entity._core,\n                dirty_components: Array.from(component_names),\n                deleted_components: [],\n            };\n        }\n\n        this.#entities_to_persist.clear();\n\n        return update_command;\n    }\n\n    /**\n     * @internal\n     */\n    #updateBroadcastList({ entity }: { entity: Entity }): void {\n        const broadcast_data = this.#entities_to_persist.get(entity);\n        if (!broadcast_data) {\n            this.#entities_to_persist.set(entity, new Set([...entity._dirty_components]));\n        } else {\n            for (const component_name of entity._dirty_components) {\n                broadcast_data.add(component_name);\n            }\n        }\n    }\n}\n", "//------------------------------------------------------------------------------\nimport type {\n    LivelinkCore,\n    RTID,\n    UUID,\n    ScriptDataObject,\n    Components,\n    ComponentName,\n    EntityResponse,\n    ComponentType,\n    ComponentsManifest,\n    ComponentsRecord,\n    Events,\n} from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { Entity } from \"./Entity\";\nimport { compute_rpn } from \"./Filters\";\nimport { EntityRegistry } from \"./EntityRegistry\";\nimport { ScriptEventReceived } from \"./ScriptEvents\";\n\n/**\n * Options for creating a new entity.\n *\n * @inline\n * @category Scene\n */\nexport type EntityCreationOptions = {\n    /**\n     * Whether to delete the entity when the client disconnects.\n     */\n    delete_on_client_disconnection?: boolean;\n\n    /**\n     * @deprecated\n     * Whether to broadcast the entity automatically.\n     */\n    auto_broadcast?: boolean;\n};\n\n/**\n * The scene class.\n *\n * It is the main entry point to interact with the entities in the scene.\n * It is responsible for creating, finding, and deleting entities.\n *\n * This class is not meant to be instantiated directly.\n * Instead, it is created by the {@link Livelink} instance and can be accessed through the\n * {@link Livelink.scene} property.\n *\n * @category Scene\n */\nexport class Scene {\n    /**\n     * The core instance.\n     */\n    #core: LivelinkCore;\n\n    /**\n     * @internal\n     * Registry of entities discovered until now.\n     */\n    public readonly _entity_registry = new EntityRegistry();\n\n    /**\n     * The pending entity requests.\n     * Used to avoid duplicate requests for the same entity.\n     */\n    #pending_entity_requests = new Map<RTID, Promise<Array<EntityResponse>>>();\n\n    /**\n     * @internal\n     */\n    constructor(core: LivelinkCore) {\n        this.#core = core;\n    }\n\n    /**\n     * Create a new entity.\n     *\n     * @param params\n     * @param params.name - The name of the entity.\n     * @param params.components - The components to add to the entity with their initial values.\n     * If no initial values are provided, the default values are used.\n     * @param params.options - Additional options for the entity creation.\n     *\n     * @returns A promise that resolves to the created entity.\n     *\n     * @example\n     * ```typescript\n     * const entity = await scene.newEntity({\n     *     name: \"My Entity\",\n     *     components: {\n     *         local_transform: {\n     *             position: [0, 2, 0],\n     *             // default values are used for scale and orientation\n     *         }\n     *     },\n     * });\n     * ```\n     */\n    async newEntity({\n        name,\n        components,\n        options,\n        parent = null,\n    }: {\n        name: string;\n        components: ComponentsManifest;\n        options?: EntityCreationOptions;\n        parent?: Entity | null;\n    }): Promise<Entity> {\n        const lineage: Partial<Components.Lineage> | undefined = parent ? { parentUUID: parent.id } : undefined;\n        const entity_cores = await this.#core.createEntities({\n            components: [{ debug_name: { value: name }, ...components, lineage }],\n            delete_on_client_disconnection: options?.delete_on_client_disconnection ?? false,\n            is_transient: true,\n        });\n        return new Entity({ scene: this, parent, components: entity_cores[0], options });\n    }\n\n    /**\n     * Create multiple entities at once.\n     * This method is more efficient than calling `newEntity` multiple times.\n     * It creates all entities in a single call to the core.\n     *\n     * @param params\n     * @param params.components_array - An array of objects with the name and components of each entity.\n     * @param params.options - Additional options for the entity creation.\n     *\n     * @returns A promise that resolves to an array of the created entities.\n     */\n    async newEntities({\n        components_array,\n        options,\n    }: {\n        components_array: Array<ComponentsManifest>;\n        options?: EntityCreationOptions;\n    }): Promise<Array<Entity>> {\n        const entity_cores = await this.#core.createEntities({\n            components: components_array,\n            delete_on_client_disconnection: options?.delete_on_client_disconnection ?? false,\n            is_transient: true,\n        });\n\n        //TODO: compute each entity's parent\n        return entity_cores.map(components => new Entity({ scene: this, parent: null, components, options }));\n    }\n\n    /**\n     * Find an entity by its UUID and linkage.\n     *\n     * @param params\n     * @param params.entity_uuid - The UUID of the entity to find.\n     * @param params.linkage - The linkage of the entity to find.\n     *\n     * @returns A promise that resolves to the found entity or null if not found.\n     */\n    async findEntity({\n        entity_uuid,\n        linkage = [],\n    }: {\n        entity_uuid: UUID;\n        linkage?: Array<UUID>;\n    }): Promise<Entity | null> {\n        const foundEntity = this._entity_registry\n            .find({ entity_euid: entity_uuid })\n            .find(\n                entity =>\n                    (entity.lineage?.value?.length ?? 0) === linkage.length &&\n                    (entity.lineage?.value ?? []).every((uuid, i) => uuid === linkage[i]),\n            );\n\n        if (foundEntity) {\n            return foundEntity;\n        }\n\n        const entity_reponses = await this.#core.findEntities({\n            query: { euid: entity_uuid, linkage },\n            options: { include_ancestors: true },\n        });\n\n        if (entity_reponses.length === 0) {\n            return null;\n        }\n\n        return this.#resolveEntityResponse(entity_reponses[0]);\n    }\n\n    /**\n     *\n     */\n    #resolveEntityResponses({ entity_responses }: { entity_responses: Array<EntityResponse> }): Array<Entity> {\n        return entity_responses.map(this.#resolveEntityResponse);\n    }\n\n    /**\n     *\n     */\n    #resolveEntityResponse = (entity_response: EntityResponse): Entity => {\n        const entity = this._entity_registry.get({ entity_rtid: entity_response.components.euid.rtid });\n        if (entity) {\n            return entity;\n        }\n\n        const parent: Entity | null = entity_response.ancestors\n            ? this.#resolveEntityAncestors(entity_response.ancestors)\n            : null;\n\n        return new Entity({ scene: this, parent, components: entity_response.components });\n    };\n    /**\n     *\n     */\n    #resolveEntityAncestors = (ancestors: EntityResponse[]): Entity | null => {\n        let current_parent: Entity | null = null;\n\n        for (const ancestor of ancestors) {\n            const entity = this._entity_registry.get({ entity_rtid: ancestor.components.euid.rtid });\n            if (entity) {\n                current_parent = entity;\n            } else {\n                current_parent = new Entity({\n                    scene: this,\n                    parent: current_parent,\n                    components: ancestor.components,\n                });\n            }\n        }\n\n        return current_parent;\n    };\n\n    /**\n     * Find entities by their UUID.\n     *\n     * This can return multiple entities if the entity is a child of a {@link Components.SceneRef}\n     * that is instanced multiple times.\n     *\n     * @param params\n     * @param params.entity_uuid - The UUID of the entity to find.\n     *\n     * @returns A promise that resolves to an array of entities with the given UUID.\n     */\n    async findEntities({ entity_uuid }: { entity_uuid: UUID }): Promise<Array<Entity>> {\n        const foundEntities = this._entity_registry.find({ entity_euid: entity_uuid });\n        if (foundEntities.length > 0) {\n            return foundEntities;\n        }\n\n        const entity_responses = await this.#core.findEntities({\n            query: { euid: entity_uuid },\n            options: { include_ancestors: true },\n        });\n        return this.#resolveEntityResponses({ entity_responses });\n    }\n\n    /**\n     * Delete a batch of entities.\n     *\n     * @param params\n     * @param params.entities - The entities to delete.\n     *\n     * @returns A promise that resolves when the entities are deleted.\n     */\n    async deleteEntities({ entities }: { entities: Array<Entity> }): Promise<void> {\n        await this.#core.deleteEntities({ entity_uuids: entities.map(e => e.id) });\n        for (const entity of entities) {\n            this._entity_registry.remove({ entity });\n        }\n    }\n\n    /**\n     * Highlight a batch of entities.\n     *\n     * @param params\n     * @param params.entities - The entities to highlight.\n     * @param params.keep_old_selection - Whether to keep the old selection or not.\n     *\n     * @returns A promise that resolves when the message is sent.\n     */\n    async highlightEntities({\n        entities,\n        keep_old_selection = false,\n    }: {\n        entities: Array<Entity>;\n        keep_old_selection?: boolean;\n    }): Promise<void> {\n        this.#core.highlightEntities({\n            highlightEntitiesMessage: {\n                entities: entities.map(e => e.rtid),\n                keep_old_selection,\n            },\n        });\n    }\n\n    /**\n     * Fire a script event.\n     *\n     * @param params\n     * @param params.event_map_id - The UUID of the event map.\n     * @param params.event_name - The name of the event.\n     * @param params.emitter_entity - The entity that emits the event.\n     * @param params.target_entities - The entities that are the target of the event. Leave empty for global events.\n     * @param params.data_object - The data object to pass with the event.\n     *\n     * @returns A promise that resolves when the message is sent.\n     *\n     * @experimental\n     */\n    fireEvent({\n        event_map_id,\n        event_name,\n        emitter_entity,\n        target_entities = [],\n        data_object = {},\n    }: {\n        event_map_id: UUID;\n        event_name: string;\n        emitter_entity?: Entity;\n        target_entities?: Array<Entity>;\n        data_object?: ScriptDataObject;\n    }): void {\n        this.#core.fireEvent({\n            event_map_id,\n            event_name,\n            emitter_entity: emitter_entity ? emitter_entity.rtid : 0n,\n            target_entities: target_entities.map(e => e.rtid),\n            data_object,\n        });\n    }\n\n    /**\n     * @experimental\n     */\n    setFilter({ name, value }: { name: string; value: string }): void {\n        const rpn = compute_rpn(value);\n        this.#core.setFilter({ name, rpn });\n    }\n\n    /**\n     * @experimental\n     */\n    toggleFilter({ name, enabled }: { name: string; enabled: boolean }): void {\n        this.#core.toggleFilter({ name, enabled });\n    }\n\n    /**\n     * @experimental\n     */\n    removeFilter({ name }: { name: string }): void {\n        this.#core.removeFilter({ name });\n    }\n\n    /**\n     *  @deprecated\n     */\n    async findEntitiesByNames({ entity_names }: { entity_names: Array<string> }): Promise<Array<Entity>> {\n        const entity_responses = await this.#core.findEntities({\n            query: { names: entity_names },\n            options: { include_ancestors: true },\n        });\n        return this.#resolveEntityResponses({ entity_responses });\n    }\n\n    /**\n     *  @deprecated\n     */\n    async findEntitiesWithComponents({\n        mandatory_components,\n        forbidden_components,\n    }: {\n        mandatory_components: Array<ComponentName>;\n        forbidden_components?: Array<ComponentName>;\n    }): Promise<Array<Entity>> {\n        const entity_responses = await this.#core.findEntities({\n            query: { mandatory_components, forbidden_components },\n            options: { include_ancestors: true },\n        });\n        return this.#resolveEntityResponses({ entity_responses });\n    }\n\n    /**\n     * @internal\n     *\n     * Get an entity by its RTID.\n     */\n    async _findEntity({ entity_rtid }: { entity_rtid: RTID }): Promise<Entity | null> {\n        if (entity_rtid === 0n) {\n            return null;\n        }\n\n        const entity = this._entity_registry.get({ entity_rtid });\n        if (entity) {\n            return entity;\n        }\n\n        let promise = this.#pending_entity_requests.get(entity_rtid);\n        if (!promise) {\n            promise = this.#core.findEntities({ query: { rtid: entity_rtid } });\n            this.#pending_entity_requests.set(entity_rtid, promise);\n        }\n\n        const entity_responses = await promise;\n        this.#pending_entity_requests.delete(entity_rtid);\n        if (entity_responses.length === 0) {\n            return null;\n        }\n\n        return this.#resolveEntityResponse(entity_responses[0]);\n    }\n\n    /**\n     * @internal\n     */\n    async _getChildren({ entity }: { entity: Entity }): Promise<Array<Entity>> {\n        const children_components = await this.#core.getChildren({ entity_rtid: entity.rtid });\n        return children_components.map(components => new Entity({ scene: this, parent: entity, components }));\n    }\n\n    /**\n     * @internal\n     */\n    _assignClientToScripts({\n        client_uuid,\n        entity_rtid,\n        script_uuid,\n    }: {\n        client_uuid: UUID;\n        entity_rtid: RTID;\n        script_uuid: UUID;\n    }): void {\n        this.#core.assignClientToScript({ client_uuid, script_uuid, entity_rtid });\n    }\n\n    /**\n     * @internal\n     */\n    async _setEntityVisibility({ entity_rtid, is_visible }: { entity_rtid: RTID; is_visible: boolean }): Promise<void> {\n        return this.#core.setEntityVisibility({ entity_rtid, is_visible });\n    }\n\n    /**\n     * @internal\n     */\n    _onEntityVisibilityChanged = ({ entity_rtid, is_visible }: Events.EntityVisibilityChangedEvent): void => {\n        const entity = this._entity_registry.get({ entity_rtid });\n        if (entity) {\n            entity._onVisibilityChanged({ is_visible });\n        }\n    };\n\n    /**\n     * @internal\n     */\n    _updateEntityFromEvent({\n        entity_euid,\n        updated_components,\n    }: {\n        entity_euid: UUID;\n        updated_components: Partial<ComponentsRecord>;\n    }): void {\n        const entities = this._entity_registry.find({ entity_euid });\n\n        if (entities.length === 0) {\n            console.log(\"Received an update for an undiscovered entity\", entity_euid);\n            return;\n        }\n\n        for (const entity of entities) {\n            entity._mergeComponents({\n                components: updated_components,\n                dispatch_event: true,\n                change_source: \"external\",\n            });\n        }\n    }\n\n    /**\n     * @internal\n     */\n    _onScriptEventReceived = ({\n        emitter_rtid,\n        event_name,\n        target_rtids,\n        data_object,\n    }: Events.ScriptEventTriggeredEvent): void => {\n        const emitter_entity = this._entity_registry.get({ entity_rtid: emitter_rtid });\n        if (emitter_entity) {\n            emitter_entity._onScriptEventEmitted({ scene: this, event_name, target_rtids, data_object });\n        }\n\n        const script_event_received_event = new ScriptEventReceived({ event_name, emitter_entity, data_object });\n\n        for (const entity_rtid of target_rtids) {\n            const target_entity = this._entity_registry.get({ entity_rtid });\n            if (target_entity) {\n                target_entity._onScriptEventReceived({ script_event_received_event });\n            }\n        }\n    };\n\n    /**\n     * @internal\n     */\n    _sanitizeComponentValue<_ComponentName extends ComponentName>({\n        component_name,\n        value,\n    }: {\n        component_name: _ComponentName;\n        value: Partial<ComponentType<_ComponentName>> | undefined;\n    }): ComponentType<_ComponentName> {\n        return this.#core.sanitizeComponentValue({ component_name, value });\n    }\n}\n", "//------------------------------------------------------------------------------\nimport type { Events, RTID, UUID } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { ClientInfo, CursorData } from \"./ClientInfo\";\nimport { Livelink } from \"../Livelink\";\nimport { Entity } from \"../scene/Entity\";\n\n/**\n * A client in a session.\n *\n * A client represents an instance of a 3dverse user viewing the session.\n *\n * A user can have multiple clients in the same session.\n *\n * Clients must not be instantiated but can be accessed through the {@link Session} object.\n *\n * @category Session\n */\nexport class Client {\n    /**\n     * The Livelink core object.\n     */\n    readonly #core: Livelink;\n\n    /**\n     * Information about the client.\n     */\n    readonly #client_info: ClientInfo;\n\n    /**\n     * The RTIDs of the cameras that the client is viewing.\n     */\n    #camera_rtids: Array<RTID> = [];\n\n    /**\n     * The 3d data under the client's mouse pointer.\n     */\n    #cursor_data: CursorData | null = null;\n\n    /**\n     * The unique identifier of the client.\n     */\n    get id(): UUID {\n        return this.#client_info.client_id;\n    }\n\n    /**\n     * The id of the user that the client is associated with.\n     * Note that the same user can have multiple clients in the same session.\n     */\n    get user_id(): UUID {\n        return this.#client_info.user_id;\n    }\n\n    /**\n     * The username of the user that the client is associated with.\n     */\n    get username(): string {\n        return this.#client_info.username;\n    }\n\n    /**\n     * @internal\n     * The 3d data under the client's mouse pointer.\n     */\n    get _cursor_data(): CursorData | null {\n        return this.#cursor_data;\n    }\n\n    /**\n     * @internal\n     */\n    constructor({\n        core,\n        client_info,\n        client_meta_data,\n    }: {\n        core: Livelink;\n        client_info: ClientInfo;\n        client_meta_data: Events.ClientMetaData;\n    }) {\n        this.#core = core;\n        this.#client_info = client_info;\n        this._updateFromClientMetaData({ client_meta_data });\n    }\n\n    /**\n     * Returns the camera entities that the client is using.\n     */\n    async getCameraEntities(): Promise<Array<Entity>> {\n        const entities = await Promise.all(\n            this.#camera_rtids.map(rtid => this.#core.scene._findEntity({ entity_rtid: rtid })),\n        );\n\n        return entities.filter(entity => entity != null) as Array<Entity>;\n    }\n\n    /**\n     * Returns the entity that the client's mouse pointer is currently hovering over.\n     */\n    async getHoveredEntity(): Promise<Entity | null> {\n        if (this.#cursor_data == null) {\n            return null;\n        }\n\n        return await this.#core.scene._findEntity({ entity_rtid: this.#cursor_data.hovered_entity_rtid });\n    }\n\n    /**\n     * @internal\n     */\n    _updateFromClientMetaData({ client_meta_data }: { client_meta_data: Events.ClientMetaData }): void {\n        this.#camera_rtids = client_meta_data.viewports.map(v => v.camera_rtid);\n\n        if (client_meta_data.hovered_entity_rtid != 0n) {\n            this.#cursor_data = {\n                hovered_entity_rtid: client_meta_data.hovered_entity_rtid,\n                hovered_ws_position: client_meta_data.ws_hovered_position,\n                hovered_ws_normal: client_meta_data.ws_hovered_normal,\n            };\n        } else {\n            this.#cursor_data = null;\n        }\n    }\n}\n", "import { Client } from \"./Client\";\nimport { Viewport } from \"../rendering/camera/Viewport\";\n\n/**\n * @deprecated\n *\n * @event\n * @noInheritDoc\n * @category Session\n */\nexport class TO_REMOVE__ViewportsAddedEvent extends Event {\n    /**\n     * The client that joined the session.\n     */\n    public readonly viewports: Array<Viewport>;\n\n    /**\n     * @internal\n     */\n    constructor({ viewports }: { viewports: Array<Viewport> }) {\n        super(\"TO_REMOVE__viewports-added\");\n        this.viewports = viewports;\n    }\n}\n\n/**\n * Event emitted when the session is disconnected.\n *\n * @event\n * @noInheritDoc\n * @category Session\n */\nexport class DisconnectedEvent extends Event {\n    /**\n     * The reason for the disconnection.\n     */\n    public readonly reason: string;\n\n    /**\n     * @internal\n     */\n    constructor({ reason }: { reason: string }) {\n        super(\"on-disconnected\");\n        this.reason = reason;\n    }\n}\n\n/**\n * Event emitted when the client is about to be disconnected due to inactivity.\n *\n * @event\n * @noInheritDoc\n * @category Session\n */\nexport class InactivityWarningEvent extends Event {\n    /**\n     * The number of seconds remaining before the client is disconnected.\n     */\n    public readonly seconds_remaining: number;\n    /**\n     * Resets the timer for the activity warning.\n     */\n    public readonly resetTimer: () => void;\n\n    /**\n     * @internal\n     */\n    constructor({ seconds_remaining, reset_timer }: { seconds_remaining: number; reset_timer: () => void }) {\n        super(\"on-inactivity-warning\");\n        this.seconds_remaining = seconds_remaining;\n        this.resetTimer = reset_timer;\n    }\n}\n\n/**\n * Event emitted when activity is detected after a period of inactivity.\n *\n * @event\n * @noInheritDoc\n * @category Session\n */\nexport class ActivityDetectedEvent extends Event {\n    /**\n     * @internal\n     */\n    constructor() {\n        super(\"on-activity-detected\");\n    }\n}\n\n/**\n * Event emitted when a client joins the session.\n *\n * @event\n * @noInheritDoc\n * @category Session\n */\nexport class ClientJoinedEvent extends Event {\n    /**\n     * The client that joined the session.\n     */\n    public readonly client: Client;\n\n    /**\n     * @internal\n     */\n    constructor({ client }: { client: Client }) {\n        super(\"on-client-joined\");\n        this.client = client;\n    }\n}\n\n/**\n * Event emitted when a client leaves the session.\n *\n * @event\n * @noInheritDoc\n * @category Session\n */\nexport class ClientLeftEvent extends Event {\n    /**\n     * The client that left the session.\n     */\n    public readonly client: Client;\n\n    /**\n     * @internal\n     */\n    constructor({ client }: { client: Client }) {\n        super(\"on-client-left\");\n        this.client = client;\n    }\n}\n\n/**\n * @event\n * @noInheritDoc\n * @category Session\n */\nexport type SessionEvents = {\n    \"on-inactivity-warning\": InactivityWarningEvent;\n    \"on-activity-detected\": ActivityDetectedEvent;\n    \"on-disconnected\": DisconnectedEvent;\n    \"on-client-joined\": ClientJoinedEvent;\n    \"on-client-left\": ClientLeftEvent;\n\n    /**\n     * @deprecated\n     */\n    \"TO_REMOVE__viewports-added\": TO_REMOVE__ViewportsAddedEvent;\n};\n", "//------------------------------------------------------------------------------\nimport type { Events, SessionInterface, UUID } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { Client } from \"./Client\";\nimport { Livelink } from \"../Livelink\";\nimport { ClientInfo } from \"./ClientInfo\";\nimport { SessionInfo } from \"./SessionInfo\";\nimport { TypedEventTarget } from \"../TypedEventTarget\";\nimport {\n    ActivityDetectedEvent,\n    ClientJoinedEvent,\n    ClientLeftEvent,\n    DisconnectedEvent,\n    InactivityWarningEvent,\n    SessionEvents,\n} from \"./SessionEvents\";\n\n/**\n * @internal\n *\n * A function that selects a session from a list of sessions.\n *\n * @param params\n * @param params.sessions - The list of sessions to select from.\n *\n * @returns The selected session or null if no session was selected.\n *\n * @inline\n */\nexport type SessionSelector = ({ sessions }: { sessions: Array<SessionInfo> }) => SessionInfo | null;\n\n/**\n * A session running a scene.\n *\n * A session is a running instance of a 3dverse server rendering a scene that can be joined by\n * multiple clients.\n *\n * A session can be transient or not.\n * A transient session is temporary and changes made to the entities in the scene are not saved.\n *\n * ### Usage\n * This class is not meant to be instantiated directly. Use the static methods to create or find\n * an existing session.\n *\n * A session can be created or joined:\n * - To create a new session, use the {@link Session.create} method.\n * - To find an existing session, use the {@link Session.find} method.\n * - Or if you know the session id, use the {@link Session.findById} method.\n *\n * ### Authentication\n * To create or find a session, you need a valid authentication token that has at least\n * read access to the scene the session will use.\n *\n * See: https://docs.3dverse.com/api/generate-user-token\n *\n * ### Events\n * - {@link ClientJoinedEvent} - Fired when a client joins the session.\n * - {@link ClientLeftEvent} - Fired when a client leaves the session.\n * - {@link InactivityWarningEvent} - Fired when the client is inactive for a certain amount of time.\n * - {@link ActivityDetectedEvent} - Fired when the client is active again.\n * - {@link DisconnectedEvent} - Fired when the session is disconnected.\n *\n * See: {@link SessionEvents} for more details.\n *\n * @category Session\n */\nexport class Session extends TypedEventTarget<SessionEvents> implements SessionInterface {\n    /**\n     * Create a new session.\n     *\n     * @param params\n     * @param params.scene_id - The unique identifier of the scene the session will launch.\n     * @param params.token - The authentication token. This token must have at least read access to the scene.\n     * @param params.is_transient - Whether the session is transient. Transient sessions are temporary and changes are not saved.\n     *\n     * @returns A promise that resolves to the created session.\n     *\n     * @throws Error if the session could not be created.\n     */\n    static async create({\n        scene_id,\n        token,\n        is_transient,\n    }: {\n        scene_id: UUID;\n        token: string;\n        is_transient?: boolean;\n    }): Promise<Session> {\n        const res = await fetch(`${Livelink._api_url}/sessions`, {\n            method: \"POST\",\n            body: JSON.stringify({ scene_id, is_transient }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                user_token: token,\n            },\n        });\n\n        if (!res.ok) {\n            throw new Error(\"Error when creating session\");\n        }\n\n        const session_info = (await res.json()) as { session_id: UUID };\n        return new Session({\n            token,\n            session_info: {\n                ...session_info,\n                scene_id,\n                is_transient_session: is_transient ?? false,\n            },\n            created: true,\n        });\n    }\n\n    /**\n     * Find an existing session running the specified scene.\n     *\n     * @param params\n     * @param params.scene_id - The unique identifier of the scene the session must be running.\n     * @param params.token - The authentication token. This token must have at least read access to the scene.\n     * @param params.session_selector - A callback that selects a session from a list of candidate sessions.\n     *\n     * @returns A promise that resolves to the found session or null if no session was found or\n     * if no session was selected by the session selector.\n     */\n    static async find({\n        scene_id,\n        token,\n        session_selector,\n    }: {\n        scene_id: UUID;\n        token: string;\n        session_selector: SessionSelector;\n    }): Promise<Session | null> {\n        const res = await fetch(`${Livelink._api_url}/sessions?filters[scene_id]=${scene_id}`, {\n            method: \"GET\",\n            headers: {\n                user_token: token,\n            },\n        });\n\n        const sessions = (await res.json()) as Array<SessionInfo>;\n        if (sessions.length === 0) {\n            return null;\n        }\n\n        const session_info = session_selector({ sessions });\n        if (!session_info) {\n            return null;\n        }\n\n        return new Session({ token, session_info, created: false });\n    }\n\n    /**\n     * Find an existing session by its unique identifier.\n     *\n     * @param params\n     * @param params.session_id - The unique identifier of the session to find.\n     * @param params.token - The authentication token. This token must have at least read access to the scene.\n     *\n     * @returns A promise that resolves to the found session or null if no session was found.\n     */\n    static async findById({ session_id, token }: { session_id: UUID; token: string }): Promise<Session | null> {\n        const res = await fetch(`${Livelink._api_url}/sessions/${session_id}`, {\n            method: \"GET\",\n            headers: {\n                user_token: token,\n            },\n        });\n\n        if (!res.ok) {\n            console.debug(`Could not find session with id ${session_id}.`);\n            return null;\n        }\n\n        const session_info = (await res.json()) as SessionInfo;\n        return new Session({ token, session_info, created: false });\n    }\n\n    /**\n     * Find the session tied to a guest token.\n     *\n     * @param params\n     * @param params.guest_token - The guest token generated by the [Generate Guest Token](https://docs.3dverse.com/api/generate-guest-token) endpoint.\n     */\n    static async findByGuestToken({ guest_token }: { guest_token: string }): Promise<Session | null> {\n        const res = await fetch(`${Livelink._api_url}/sessions`, {\n            method: \"GET\",\n            headers: { guest_token },\n        });\n\n        if (!res.ok) {\n            throw new Error(\"Could not find session as guest, guest token might be expired\");\n        }\n\n        const [session_info] = (await res.json()) as [SessionInfo];\n        return new Session({ token: guest_token, session_info, created: false, is_guest: true });\n    }\n\n    /**\n     * The information about the session.\n     */\n    public readonly info: SessionInfo;\n\n    /**\n     * Whether the session has been created or joined by the current client.\n     */\n    public readonly has_been_created: boolean;\n\n    /**\n     * The id of the client that is currently connected to the session.\n     */\n    public client_id: UUID | null = null;\n\n    /**\n     * The authentication token.\n     */\n    public readonly token: string;\n\n    /**\n     * Whether the authentication token is a guest token.\n     */\n    public readonly is_guest: boolean = false;\n\n    /**\n     * The address of the gateway the session is running on.\n     */\n    #gateway_url: string | null = null;\n\n    /**\n     * The session key used as an authentication method on the gateway.\n     */\n    #session_key: string | null = null;\n\n    /**\n     * A map of all connected clients\n     */\n    #clients: Map<UUID, Client> = new Map<UUID, Client>();\n\n    /**\n     * A map for clients pending identification\n     */\n    #clients_pending_identification = new Set<UUID>();\n\n    /**\n     * The unique identifier of the scene the session is running.\n     */\n    get scene_id(): UUID {\n        return this.info.scene_id;\n    }\n\n    /**\n     * The unique identifier of the session.\n     */\n    get session_id(): UUID {\n        return this.info.session_id;\n    }\n\n    /**\n     * The unique identifiers of all clients connected to the session.\n     */\n    get client_ids(): Array<UUID> {\n        return Array.from(this.#clients.keys());\n    }\n\n    /**\n     * All the clients connected to the session.\n     */\n    get clients(): Array<Client> {\n        return Array.from(this.#clients.values());\n    }\n\n    /**\n     * All the clients connected to the session except the current client.\n     */\n    get other_clients(): Array<Client> {\n        return Array.from(this.#clients.values()).filter(c => c.id !== this.client_id);\n    }\n\n    /**\n     * The current client connected to the session.\n     */\n    get current_client(): Client | null {\n        return this.client_id ? (this.#clients.get(this.client_id) ?? null) : null;\n    }\n\n    /**\n     * @internal\n     * The address of the gateway the session is running on.\n     */\n    get gateway_url(): string | null {\n        return this.#gateway_url;\n    }\n\n    /**\n     * @internal\n     * The session key used as an authentication method on the gateway.\n     */\n    get session_key(): string | null {\n        return this.#session_key;\n    }\n\n    /**\n     * Authentication headers to be used in requests to the API.\n     */\n    get #authentication_headers(): Record<string, string> {\n        return this.is_guest ? { guest_token: this.token } : { user_token: this.token };\n    }\n\n    /**\n     * Create a new session.\n     *\n     * @param params\n     * @param params.token - The authentication token. This token must have at least read access to the scene.\n     * @param params.session_info - The information about the session.\n     * @param params.created - Whether the session has been created or found by the current client.\n     */\n    private constructor({\n        token,\n        session_info,\n        created,\n        is_guest = false,\n    }: {\n        token: string;\n        session_info: SessionInfo;\n        created: boolean;\n        is_guest?: boolean;\n    }) {\n        super();\n\n        this.token = token;\n        this.info = session_info;\n        this.has_been_created = created;\n        this.is_guest = is_guest;\n    }\n\n    /**\n     * Whether the session is joinable.\n     */\n    isJoinable(): boolean {\n        return this.#gateway_url !== null && this.#session_key !== null;\n    }\n\n    /**\n     * @internal\n     * Get the session key to be used as an authentication method on the gateway.\n     */\n    async registerClient(): Promise<void> {\n        const res = await fetch(`${Livelink._api_url}/sessions/${this.session_id}/clients`, {\n            method: \"POST\",\n            headers: this.#authentication_headers,\n        });\n\n        const { session_token, endpoint_info } = (await res.json()) as {\n            session_token: string;\n            endpoint_info: { ip: string; port: number; ssl_port: number };\n        };\n\n        // Gateways that don't support secure connections set their SSL port to 0.\n        const protocol = endpoint_info.ssl_port ? \"wss\" : \"ws\";\n        const port = endpoint_info.ssl_port !== 0 ? endpoint_info.ssl_port : endpoint_info.port;\n        this.#gateway_url = `${protocol}://${endpoint_info.ip}:${port}`;\n        this.#session_key = session_token;\n    }\n\n    /**\n     * @internal\n     * Close the session.\n     */\n    async close(): Promise<void> {\n        if (this.info === null) {\n            throw new Error(\"Cannot close session as it has not been opened yet\");\n        }\n\n        await fetch(`${Livelink._api_url}/sessions/${this.session_id}`, {\n            method: \"DELETE\",\n            headers: this.#authentication_headers,\n        });\n    }\n\n    /**\n     * Get a client by its unique identifier.\n     *\n     * @param params\n     * @param params.client_id - The unique identifier of the client to look for.\n     *\n     * @returns The client or null if the client is not found.\n     */\n    getClient({ client_id }: { client_id: UUID }): Client | null {\n        return this.#clients.get(client_id) ?? null;\n    }\n\n    /**\n     * Evict a client from the session.\n     *\n     * The client will be disconnected.\n     *\n     * The token used to create the session must have manage access to the scene.\n     *\n     * Note that nothing prevents the client from reconnecting while the session is still running.\n     *\n     * @param params\n     * @param params.client - The client to evict, either a {@link Client} object or the unique identifier of the client.\n     *\n     * @returns A promise that resolves to true if the client was evicted, false otherwise.\n     */\n    async evictClient({ client }: { client: Client | UUID }): Promise<boolean> {\n        const client_id = client instanceof Client ? client.id : client;\n        const res = await fetch(`${Livelink._api_url}/sessions/${this.session_id}/clients/${client_id}`, {\n            method: \"DELETE\",\n            headers: this.#authentication_headers,\n        });\n\n        return res.ok;\n    }\n\n    /**\n     * @internal\n     */\n    _onDisconnected = (e: Events.DisconnectedEvent): void => {\n        this._dispatchEvent(new DisconnectedEvent({ reason: e.reason }));\n    };\n\n    /**\n     * @internal\n     */\n    _onInactivityWarning = (e: Events.InactivityWarningEvent): void => {\n        this._dispatchEvent(\n            new InactivityWarningEvent({ seconds_remaining: e.seconds_remaining, reset_timer: e.resetTimer }),\n        );\n    };\n\n    /**\n     * @internal\n     */\n    _onActivityDetected = (_: Events.ActivityDetectedEvent): void => {\n        this._dispatchEvent(new ActivityDetectedEvent());\n    };\n\n    /**\n     * @internal\n     */\n    _updateClients({ core, client_data }: { core: Livelink; client_data: Array<Events.ClientMetaData> }): void {\n        for (const client_meta_data of client_data) {\n            const client_id = client_meta_data.client_id;\n\n            if (this.#clients_pending_identification.has(client_id)) {\n                continue;\n            }\n\n            const client = this.#clients.get(client_id);\n            if (client) {\n                this.#handleExistingClient({ client, client_meta_data });\n            } else {\n                this.#handleNewClient({ core, client_meta_data });\n            }\n        }\n\n        this.#removeDisconnectedClients({ client_data });\n    }\n\n    /**\n     *\n     */\n    async #handleNewClient({\n        core,\n        client_meta_data,\n    }: {\n        core: Livelink;\n        client_meta_data: Events.ClientMetaData;\n    }): Promise<void> {\n        // If the client has no viewports, it means that it is not yet fully connected.\n        // Skip it for now, it will be handled when it would be fully connected.\n        if (client_meta_data.viewports.length === 0) {\n            return;\n        }\n\n        const client_id = client_meta_data.client_id;\n        this.#clients_pending_identification.add(client_id);\n        let client_info: ClientInfo | null = null;\n\n        try {\n            client_info = await this.#fetchClientInfo({ client_id: client_meta_data.client_id });\n        } catch (error) {\n            console.error(\"Could not get info for client\", client_id, error);\n            client_info = {\n                client_id,\n                client_type: \"unknown\",\n                user_id: \"\",\n                username: \"unknown user\",\n            };\n        }\n\n        console.debug(\"--- Client joined\", client_info);\n        const client = new Client({ core, client_info, client_meta_data });\n        this.#onClientJoined({ client });\n        this.#clients_pending_identification.delete(client_id);\n    }\n\n    /**\n     *\n     */\n    #handleExistingClient({\n        client,\n        client_meta_data,\n    }: {\n        client: Client;\n        client_meta_data: Events.ClientMetaData;\n    }): void {\n        client._updateFromClientMetaData({ client_meta_data });\n    }\n\n    /**\n     *\n     */\n    #removeDisconnectedClients({ client_data }: { client_data: Array<Events.ClientMetaData> }): void {\n        const client_ids = client_data.map(d => d.client_id);\n\n        for (const [client_id] of this.#clients) {\n            if (!client_ids.includes(client_id)) {\n                this.#onClientLeft({ client_id });\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    #onClientJoined({ client }: { client: Client }): void {\n        this.#clients.set(client.id, client);\n        if (client.id !== this.client_id) {\n            this._dispatchEvent(new ClientJoinedEvent({ client }));\n        }\n    }\n\n    /**\n     *\n     */\n    #onClientLeft({ client_id }: { client_id: UUID }): void {\n        const client = this.getClient({ client_id });\n        if (client) {\n            this.#clients.delete(client_id);\n            this._dispatchEvent(new ClientLeftEvent({ client }));\n        }\n    }\n\n    /**\n     *\n     */\n    async #fetchClientInfo({ client_id }: { client_id: UUID }): Promise<ClientInfo> {\n        const res = await fetch(`${Livelink._api_url}/sessions/${this.session_id}/clients/${client_id}`, {\n            method: \"GET\",\n            headers: this.#authentication_headers,\n        });\n\n        return (await res.json()) as ClientInfo;\n    }\n}\n", "import { Enums } from \"@3dverse/livelink.core\";\nimport { Livelink } from \"../Livelink\";\nimport { Viewport } from \"../rendering/camera/Viewport\";\n\n/**\n * @category Inputs\n */\nexport class Mouse {\n    /**\n     *\n     */\n    #instance: Livelink;\n\n    /**\n     *\n     */\n    #is_locked = false;\n\n    /**\n     *\n     */\n    #last_mouse_position = { x: 0, y: 0 };\n\n    /**\n     * Store various data for each viewport.\n     *  - dom_element: The DOM element of the viewport.\n     *  - ref_count: The number of times the mouse has been set up on the viewport.\n     *  - abort_controller: The abort controller to stop listening to events.\n     *    Used when the reference count reaches 0.\n     */\n    #viewport_map = new Map<\n        Viewport,\n        {\n            dom_element: HTMLElement;\n            abort_controller: AbortController;\n            ref_count: number;\n        }\n    >();\n\n    /**\n     * @internal\n     */\n    constructor(instance: Livelink) {\n        this.#instance = instance;\n        if (typeof document !== \"undefined\") {\n            document.addEventListener(\"pointerlockchange\", this.#onPointerLockChange);\n        }\n    }\n\n    /**\n     * Enables mouse input on the given viewport.\n     * Increases the reference count of the viewport usage.\n     * Each call to this method should be matched with a call to `release`.\n     *\n     * @param params\n     * @param params.viewport The viewport to enable mouse input on.\n     */\n    enableOnViewport({ viewport }: { viewport: Viewport }): void {\n        const viewport_data = this.#viewport_map.get(viewport);\n        if (viewport_data) {\n            viewport_data.ref_count++;\n            return;\n        }\n\n        const dom_element = viewport.dom_element;\n        const abort_controller = new AbortController();\n\n        dom_element.addEventListener(\"mousedown\", (event: MouseEvent) => this.#onMouseDown({ viewport, event }), {\n            signal: abort_controller.signal,\n        });\n        dom_element.addEventListener(\"mouseup\", (event: MouseEvent) => this.#onMouseUp({ viewport, event }), {\n            signal: abort_controller.signal,\n        });\n        dom_element.addEventListener(\"mousemove\", (event: MouseEvent) => this.#onMouseMove({ viewport, event }), {\n            signal: abort_controller.signal,\n        });\n\n        this.#viewport_map.set(viewport, {\n            dom_element,\n            abort_controller,\n            ref_count: 1,\n        });\n    }\n\n    /**\n     * Decreases the reference count of the viewport usage.\n     * Each call to this method should be matched with a call to `setup`.\n     * If the reference count reaches 0, the mouse input is disabled for the viewport.\n     *\n     * @param params\n     * @param params.viewport The viewport to disable mouse input on.\n     */\n    disableFromViewport({ viewport }: { viewport: Viewport }): void {\n        const viewport_data = this.#viewport_map.get(viewport);\n        if (!viewport_data) {\n            console.warn(\"Attempt to release mouse on a viewport that is not set up\", viewport);\n            return;\n        }\n\n        if (--viewport_data.ref_count > 0) {\n            return;\n        }\n\n        viewport_data.abort_controller.abort();\n        this.#viewport_map.delete(viewport);\n    }\n\n    /**\n     *\n     */\n    #onMouseDown = ({ viewport, event }: { viewport: Viewport; event: MouseEvent }): void => {\n        if (event.button > 2) {\n            console.warn(\"MouseInput: Unsupported mouse button\", event.button);\n            return;\n        }\n        event.stopPropagation();\n        const position = this.#getMousePosition(event);\n        const input_data = this.#getMouseData({ viewport, x: position.x, y: position.y });\n        this.#instance._sendInput({\n            input_state: {\n                input_operation: [\"lbutton_down\", \"mbutton_down\", \"rbutton_down\"][event.button] as Enums.InputOperation,\n                input_data,\n            },\n        });\n    };\n\n    /**\n     *\n     */\n    #onMouseUp = ({ viewport, event }: { viewport: Viewport; event: MouseEvent }): void => {\n        if (event.button > 2) {\n            console.warn(\"MouseInput: Unsupported mouse button\", event.button);\n            return;\n        }\n        event.stopPropagation();\n        const position = this.#getMousePosition(event);\n        const input_data = this.#getMouseData({ viewport, x: position.x, y: position.y });\n        this.#instance._sendInput({\n            input_state: {\n                input_operation: [\"lbutton_up\", \"mbutton_up\", \"rbutton_up\"][event.button] as Enums.InputOperation,\n                input_data,\n            },\n        });\n    };\n\n    /**\n     *\n     */\n    #onMouseMove = ({ viewport, event }: { viewport: Viewport; event: MouseEvent }): void => {\n        event.stopPropagation();\n\n        const position = this.#getMousePosition(event);\n        const input_data = this.#getMouseData({ viewport, x: position.x, y: position.y });\n        this.#instance._sendInput({ input_state: { input_operation: \"mouse_move\", input_data } });\n    };\n\n    /**\n     *\n     */\n    #getMousePosition(e: MouseEvent): { x: number; y: number } {\n        const event = e as MouseEvent;\n        if (this.#is_locked) {\n            this.#last_mouse_position.x += event.movementX;\n            this.#last_mouse_position.y += event.movementY;\n        } else {\n            this.#last_mouse_position.x = event.clientX;\n            this.#last_mouse_position.y = event.clientY;\n        }\n        return this.#last_mouse_position;\n    }\n\n    /**\n     *\n     */\n    #onPointerLockChange = (): void => {\n        const viewports = Array.from(this.#viewport_map.values());\n        this.#is_locked = viewports.some(viewport => document.pointerLockElement === viewport.dom_element);\n    };\n\n    /**\n     *\n     */\n    #getMouseData({\n        viewport,\n        x,\n        y,\n        bufferSize = 8,\n    }: {\n        viewport: Viewport;\n        x: number;\n        y: number;\n        bufferSize?: number;\n    }): Uint8Array {\n        const data = new ArrayBuffer(bufferSize);\n        const bufferWriter = new DataView(data);\n\n        const [posX, posY] = this.#instance._projectViewportPositionOnRemoteFrame({ viewport, position: [x, y] });\n\n        bufferWriter.setFloat32(0, posX, true);\n        bufferWriter.setFloat32(4, posY, true);\n\n        return new Uint8Array(data);\n    }\n}\n", "import { Livelink } from \"../Livelink\";\n\n/**\n * @category Inputs\n */\nexport class Keyboard {\n    /**\n     *\n     */\n    #instance: Livelink;\n\n    /**\n     * @internal\n     */\n    constructor(instance: Livelink) {\n        this.#instance = instance;\n    }\n\n    /**\n     *\n     */\n    enable(): void {\n        window.addEventListener(\"keydown\", this.#onKeyDown);\n        window.addEventListener(\"keyup\", this.#onKeyUp);\n        window.addEventListener(\"blur\", this.#resetInputs);\n    }\n\n    /**\n     *\n     */\n    disable(): void {\n        window.removeEventListener(\"keydown\", this.#onKeyDown);\n        window.removeEventListener(\"keyup\", this.#onKeyUp);\n        window.removeEventListener(\"blur\", this.#resetInputs);\n\n        this.#resetInputs();\n    }\n\n    /**\n     *\n     */\n    #onKeyDown = (event: KeyboardEvent): void => {\n        event.preventDefault();\n\n        const keyData = this.#getKeyData(event);\n        this.#instance._sendInput({\n            input_state: {\n                input_operation: \"on_key_down\",\n                input_data: keyData,\n            },\n        });\n    };\n\n    /**\n     *\n     */\n    #onKeyUp = (event: KeyboardEvent): void => {\n        event.preventDefault();\n\n        const keyData = this.#getKeyData(event);\n        this.#instance._sendInput({\n            input_state: {\n                input_operation: \"on_key_up\",\n                input_data: keyData,\n            },\n        });\n    };\n\n    /**\n     *\n     */\n    #resetInputs = (): void => {\n        this.#instance._sendInput({\n            input_state: {\n                input_operation: \"reset\",\n            },\n        });\n    };\n\n    /**\n     *\n     */\n    #getKeyData(event: KeyboardEvent): Uint8Array {\n        const keyCode = this.#getLayoutAgnosticKeyCode(event);\n        const KeyData = new Uint8Array(4);\n        KeyData[0] = keyCode & 0xff;\n        KeyData[1] = (keyCode >> 8) & 0xff;\n        KeyData[2] = (keyCode >> 16) & 0xff;\n        KeyData[3] = (keyCode >> 24) & 0xff;\n        return KeyData;\n    }\n\n    /**\n     *\n     */\n    #getLayoutAgnosticKeyCode(event: KeyboardEvent): number {\n        const { code, key } = event;\n\n        // If the code is not a key letter, then it's a special key.\n        if (!code?.startsWith(\"Key\")) {\n            return event.keyCode;\n        }\n\n        // The real key letter on the regular QWERTY english keyboard.\n        // This https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values\n        // is a guarantee that any code starting with \"Key\" is followed by a single english alphabetic character.\n        const keyFromCode = code[code.length - 1];\n        if (keyFromCode !== key) {\n            return keyFromCode.charCodeAt(0);\n        }\n        return event.keyCode;\n    }\n}\n", "/**\n *\n */\nexport class AudioPlayer {\n    /**\n     *\n     */\n    readonly #num_channels = 2 as const;\n    readonly #sample_rate = 44100 as const;\n    readonly #bit_depth = 32 as const;\n    readonly #global_volume = 1.0 as const;\n\n    /**\n     *\n     */\n    #audio_context: AudioContext;\n\n    /**\n     *\n     */\n    #next_start_time = 0;\n\n    /**\n     *\n     */\n    constructor() {\n        this.#audio_context = new AudioContext({\n            sampleRate: this.#sample_rate,\n            latencyHint: \"interactive\",\n        });\n\n        this.#next_start_time = this.#audio_context.currentTime;\n    }\n\n    /**\n     *\n     */\n    release(): void {\n        this.#audio_context.close();\n    }\n\n    /**\n     *\n     */\n    playAudioPacket({ packet }: { packet: DataView }): void {\n        const samples = new Float32Array(packet.buffer, packet.byteOffset);\n        const sample_count = packet.byteLength / ((this.#bit_depth / 8) * this.#num_channels);\n        this.#scheduleAudio({ samples, sample_count });\n    }\n\n    /**\n     *\n     */\n    #scheduleAudio({ samples, sample_count }: { samples: Float32Array; sample_count: number }): void {\n        const source = this.#audio_context.createBufferSource();\n        source.buffer = this.#getBuffer({ samples, sample_count });\n        source.connect(this.#audio_context.destination);\n\n        if (this.#next_start_time <= this.#audio_context.currentTime) {\n            // The first time the source will play, it will play a buffer later to allow for\n            // that maximum unexpected latency.\n            this.#next_start_time = 0.1 + this.#audio_context.currentTime + sample_count / this.#sample_rate;\n        }\n\n        source.start(this.#next_start_time);\n        this.#next_start_time += sample_count / this.#sample_rate;\n    }\n\n    /**\n     *\n     */\n    #getBuffer({ samples, sample_count }: { samples: Float32Array; sample_count: number }): AudioBuffer {\n        const buffer = this.#audio_context.createBuffer(this.#num_channels, sample_count, this.#sample_rate);\n        for (let channel = 0; channel < this.#num_channels; channel++) {\n            const channelData = buffer.getChannelData(channel);\n            for (let j = 0; j < sample_count; j++) {\n                channelData[j] = samples[channel * sample_count + j] * this.#global_volume;\n            }\n        }\n        return buffer;\n    }\n}\n", "import type { Livelink } from \"../Livelink\";\n\n/**\n *\n */\nconst XInputMaskMap = [\n    4, // A\n    8, // B\n    16, // X\n    32, // Y\n    1024, // LeftShoulder\n    2048, // RightShoulder\n\n    0, // LeftTrigger. Ignored\n    0, // RightTrigger. Ignored\n    2, // View\n    1, // Menu\n    4096, // LeftThumbstick\n    8192, // RightThumbstick\n\n    64, // DPadUp\n    128, // DPadDown\n    256, // DPadLeft\n    512, // DPadRight\n] as const;\n\n/**\n * The gamepad buttons.\n */\nexport const GamepadButton = {\n    A: 0,\n    B: 1,\n    X: 2,\n    Y: 3,\n    LeftShoulder: 4,\n    RightShoulder: 5,\n\n    LeftTrigger: 6, // Ignored\n    RightTrigger: 7, // Ignored\n    View: 8,\n    Menu: 9,\n    LeftThumbstick: 10,\n    RightThumbstick: 11,\n\n    DPadUp: 12,\n    DPadDown: 13,\n    DPadLeft: 14,\n    DPadRight: 15,\n} as const;\n\n/**\n *\n */\nexport type GamepadButtonType = (typeof GamepadButton)[keyof typeof GamepadButton];\n\n/**\n * The gamepad axes.\n */\nexport const GamepadAxis = {\n    LeftThumbstickX: 0,\n    LeftThumbstickY: 1,\n    RightThumbstickX: 2,\n    RightThumbstickY: 3,\n    LeftTrigger: 4,\n    RightTrigger: 5,\n} as const;\n\n/**\n *\n */\nexport type GamepadAxisType = (typeof GamepadAxis)[keyof typeof GamepadAxis];\n\n/**\n * The gamepad joysticks.\n */\nexport const GamepadJoystick = {\n    Left: [GamepadAxis.LeftThumbstickX, GamepadAxis.LeftThumbstickY],\n    Right: [GamepadAxis.RightThumbstickX, GamepadAxis.RightThumbstickY],\n} as const;\n\n/**\n *\n */\nexport type GamepadJoystickType = (typeof GamepadJoystick)[keyof typeof GamepadJoystick];\n\n/**\n * Represents a reading of the gamepad input, including the state of each buttons and axes.\n */\ntype GamepadReading = {\n    buttons: number;\n    axes: {\n        [axis in GamepadAxisType]: number;\n    };\n};\n\n/**\n * Compute the new reading for a button based on the current reading, wether the button is pressed or not, and the button's mask.\n *\n * @param params\n * @param params.currentReading - The current reading of the gamepad buttons.\n * @param params.button - The button to compute the reading for.\n * @param params.isPressed - A boolean indicating whether the button is pressed (true) or not (false).\n * @returns The new reading for the button.\n */\nconst computeButtonReading = ({\n    currentReading,\n    button,\n    isPressed,\n}: {\n    currentReading: number;\n    button: GamepadButtonType;\n    isPressed: boolean;\n}): number => {\n    const mask = XInputMaskMap[button];\n    return (currentReading & ~mask) | (-Number(isPressed) & mask);\n};\n\n/**\n * It serves as an interface between high level gamepad input representations and the server.\n *\n * @category Inputs\n */\nexport class GamepadInputRelay {\n    /**\n     * The Livelink instance associated with this gamepad input relay.\n     */\n    #instance: Livelink;\n\n    /**\n     * The index of the gamepad engine-side.\n     * (The engine currently only supports the gamepad with index 0).\n     */\n    #index: number;\n\n    /**\n     * The current reading of the gamepad input.\n     */\n    #reading: GamepadReading = {\n        buttons: 0,\n        axes: {\n            [GamepadAxis.LeftThumbstickX]: 0,\n            [GamepadAxis.LeftThumbstickY]: 0,\n            [GamepadAxis.RightThumbstickX]: 0,\n            [GamepadAxis.RightThumbstickY]: 0,\n            [GamepadAxis.LeftTrigger]: 0,\n            [GamepadAxis.RightTrigger]: 0,\n        },\n    };\n\n    /**\n     * @param params\n     * @param params.instance - The Livelink instance.\n     * @param params.index - The index of the gamepad, currently limited to 0 only.\n     * @internal\n     */\n    constructor({ instance, index }: { instance: Livelink; index: number }) {\n        this.#instance = instance;\n        this.#index = index;\n    }\n\n    /**\n     * Set the value of a single axis.\n     *\n     * @param params\n     * @param params.axis - The axis to set.\n     * @param params.value - The value to set. 0 means the axis is centered.\n     */\n    setAxis = ({ axis, value }: { axis: GamepadAxisType; value: number }): void => {\n        if (this.#reading.axes[axis] != value) {\n            this.#reading.axes[axis] = value;\n            this.#sendAxis({ axis });\n        }\n    };\n\n    /**\n     * Set the values of the two axes composing a joystick.\n     *\n     * @param params\n     * @param params.joystick - The joystick to set.\n     * @param params.value - The values to set for the joystick. The first number is the horizontal axis and the second number is the vertical axis. 0 means the joystick is centered.\n     */\n    setJoystick = ({ joystick, value }: { joystick: GamepadJoystickType; value: [number, number] }): void => {\n        this.setAxis({ axis: joystick[0], value: value[0] });\n        this.setAxis({ axis: joystick[1], value: value[1] });\n    };\n\n    /**\n     * Set the value of a single button.\n     *\n     * @param params\n     * @param params.button - The button to set.\n     * @param params.isPressed - A boolean indicating whether the button is pressed (true) or not (false).\n     */\n    setButton = ({ button, isPressed }: { button: GamepadButtonType; isPressed: boolean }): void => {\n        const buttonsReading = computeButtonReading({ currentReading: this.#reading.buttons, button, isPressed });\n        if (buttonsReading != this.#reading.buttons) {\n            this.#reading.buttons = buttonsReading;\n            this.#sendButtons();\n        }\n    };\n\n    /**\n     * Set the values of all buttons.\n     *\n     * @param params\n     * @param params.buttons - An array of buttons value, sorted following the indexes referenced by the GamepadButton enum.\n     */\n    setButtons = ({ buttons }: { buttons: boolean[] }): void => {\n        let buttonsReading = this.#reading.buttons;\n        for (let i = 0; i < buttons.length; i++) {\n            const button = buttons[i];\n            buttonsReading = computeButtonReading({\n                currentReading: buttonsReading,\n                button: i as GamepadButtonType,\n                isPressed: button,\n            });\n        }\n\n        if (this.#reading.buttons != buttonsReading) {\n            this.#reading.buttons = buttonsReading;\n            this.#sendButtons();\n        }\n    };\n\n    /**\n     * Reset all the input values to their default state.\n     */\n    resetInput = (): void => {\n        this.setAxis({ axis: GamepadAxis.LeftThumbstickX, value: 0 });\n        this.setAxis({ axis: GamepadAxis.LeftThumbstickY, value: 0 });\n        this.setAxis({ axis: GamepadAxis.RightThumbstickX, value: 0 });\n        this.setAxis({ axis: GamepadAxis.RightThumbstickY, value: 0 });\n        this.setAxis({ axis: GamepadAxis.LeftTrigger, value: 0 });\n        this.setAxis({ axis: GamepadAxis.RightTrigger, value: 0 });\n\n        this.#reading.buttons = 0;\n        this.#sendButtons();\n    };\n\n    /**\n     * Send the current state of a single axis to the Livelink instance.\n     *\n     * @param params\n     * @param params.axis - The axis to send.\n     */\n    #sendAxis({ axis }: { axis: GamepadAxisType }): void {\n        const buffer = new ArrayBuffer(6);\n        const bufferWriter = new DataView(buffer);\n\n        bufferWriter.setUint8(0, this.#index);\n        bufferWriter.setUint8(1, axis);\n        bufferWriter.setFloat32(2, this.#reading.axes[axis], true);\n\n        this.#instance._sendInput({\n            input_state: {\n                input_operation: \"gamepad_axis\",\n                input_data: new Uint8Array(buffer),\n            },\n        });\n    }\n\n    /**\n     * Send the current state of the gamepad buttons to the Livelink instance.\n     */\n    #sendButtons(): void {\n        const buffer = new ArrayBuffer(5);\n        const bufferWriter = new DataView(buffer);\n\n        bufferWriter.setUint8(0, this.#index);\n        bufferWriter.setUint16(1, this.#reading.buttons, true);\n\n        this.#instance._sendInput({\n            input_state: {\n                input_operation: \"gamepad_buttons\",\n                input_data: new Uint8Array(buffer),\n            },\n        });\n    }\n}\n", "import type { Livelink } from \"../Livelink\";\nimport { GamepadInputRelay, GamepadJoystick, GamepadAxis } from \"./GamepadInputRelay\";\n\n/**\n * Represent a physical gamepad input device.\n *\n * It scans the gamepad input and forwards changes to the engine.\n *\n * @category Inputs\n * @experimental\n */\nexport class PhysicalGamepad {\n    /**\n     *\n     */\n    readonly #input_scan_frequency: number = 1000 / 60;\n\n    /**\n     * The timeout reference for the input scan.\n     * This is used to periodically check the gamepad input.\n     */\n    #input_scan_timeout: ReturnType<typeof setTimeout> | null = null;\n\n    /**\n     * The input relay for the gamepad, which handles the formatting and sending of the gamepad input data.\n     */\n    #input_relay: GamepadInputRelay;\n\n    /**\n     * The physical index of the gamepad as returned by the browser.\n     */\n    #physical_index: number;\n\n    /**\n     * @param params\n     * @param params.instance - The Livelink instance.\n     * @param params.index - The index of the gamepad, currently limited to 0 only.\n     * @param params.physicalIndex - The physical index of the gamepad as returned by the browser.\n     * @internal\n     */\n    constructor({ instance, index, physicalIndex }: { instance: Livelink; index: number; physicalIndex: number }) {\n        this.#input_relay = new GamepadInputRelay({ instance, index });\n        this.#physical_index = physicalIndex;\n    }\n\n    /**\n     *\n     */\n    enable(): void {\n        window.addEventListener(\"focus\", this.#onWindowFocused);\n        if (window.document.hasFocus()) {\n            this.#setScanTimeout();\n        }\n    }\n\n    /**\n     *\n     */\n    disable(): void {\n        this.#tryClearScanTimeout();\n        this.#input_relay.resetInput();\n        window.removeEventListener(\"focus\", this.#onWindowFocused);\n    }\n\n    /**\n     *\n     */\n    #onWindowFocused = (): void => {\n        this.#setScanTimeout();\n    };\n\n    /**\n     *\n     */\n    #handleInput = (): void => {\n        const gamepad = navigator.getGamepads()[this.#physical_index];\n        if (!gamepad || !window.document.hasFocus()) {\n            this.#tryClearScanTimeout();\n            this.#input_relay.resetInput();\n            return;\n        }\n\n        const buttons = gamepad.buttons.map(button => {\n            return button.pressed;\n        });\n        this.#input_relay.setButtons({ buttons });\n        this.#input_relay.setJoystick({ joystick: GamepadJoystick.Left, value: [-gamepad.axes[0], gamepad.axes[1]] });\n        this.#input_relay.setJoystick({ joystick: GamepadJoystick.Right, value: [-gamepad.axes[2], gamepad.axes[3]] });\n        this.#input_relay.setAxis({ axis: GamepadAxis.LeftTrigger, value: gamepad.buttons[6].value });\n        this.#input_relay.setAxis({ axis: GamepadAxis.RightTrigger, value: gamepad.buttons[7].value });\n\n        this.#setScanTimeout();\n    };\n\n    /**\n     *\n     */\n    #setScanTimeout = (): void => {\n        this.#tryClearScanTimeout();\n        this.#input_scan_timeout = setTimeout(() => {\n            this.#handleInput();\n            this.#input_scan_timeout = null;\n        }, this.#input_scan_frequency);\n    };\n\n    /**\n     *\n     */\n    #tryClearScanTimeout = (): void => {\n        if (this.#input_scan_timeout) {\n            clearTimeout(this.#input_scan_timeout);\n            this.#input_scan_timeout = null;\n        }\n    };\n}\n", "import { PhysicalGamepad } from \"./PhysicalGamepad\";\nimport { Livelink } from \"../Livelink\";\nimport { GamepadInputRelay } from \"./GamepadInputRelay\";\n\n/**\n * Registry for managing gamepads in the Livelink instance.\n *\n * It handles the connection and disconnection of physical gamepads,\n * and provides a safe way to create virtual gamepads that don't conflict with physical gamepads.\n *\n * @category Inputs\n */\nexport class GamepadsRegistry {\n    /**\n     * The Livelink instance associated with this gamepads registry.\n     */\n    #instance: Livelink;\n\n    /**\n     * The array of physical gamepads.\n     */\n    #physical_gamepads: Array<PhysicalGamepad | null> = [];\n\n    /**\n     *\n     */\n    #last_gamepad_index: number;\n\n    /**\n     * @param params\n     * @param params.instance - The Livelink instance.\n     * @internal\n     */\n    constructor({ instance }: { instance: Livelink }) {\n        this.#instance = instance;\n        this.#last_gamepad_index = navigator.getGamepads().length - 1;\n    }\n\n    /**\n     *\n     */\n    enable(): void {\n        const gamepads = navigator.getGamepads();\n        this.#physical_gamepads = Array(gamepads.length).fill(null);\n\n        for (let i = 0; i < gamepads.length; i++) {\n            const gamepad = gamepads[i];\n            if (gamepad && gamepad.connected) {\n                this.#physical_gamepads[i] = new PhysicalGamepad({\n                    instance: this.#instance,\n                    index: 0, //Once multiple gamepads support is implemented engine-side index can be i instead of 0\n                    physicalIndex: i,\n                });\n                this.#physical_gamepads[i]!.enable();\n            }\n        }\n\n        window.addEventListener(\"gamepadconnected\", this.#onGamepadConnected);\n        window.addEventListener(\"gamepaddisconnected\", this.#onGamepadDisconnected);\n    }\n\n    /**\n     *\n     */\n    disable(): void {\n        window.removeEventListener(\"gamepadconnected\", this.#onGamepadConnected);\n        window.removeEventListener(\"gamepaddisconnected\", this.#onGamepadDisconnected);\n\n        for (const gamepad of this.#physical_gamepads) {\n            if (gamepad) {\n                gamepad.disable();\n            }\n        }\n        this.#physical_gamepads = [];\n    }\n\n    /**\n     * @experimental\n     */\n    createVirtualGamepad(): GamepadInputRelay {\n        this.#last_gamepad_index++;\n        const virtualGamepad = new GamepadInputRelay({\n            instance: this.#instance,\n            index: 0, //Once multiple gamepads support is implemented engine-side index can be this.#lastGamepadIndex instead of 0\n        });\n        return virtualGamepad;\n    }\n\n    /**\n     * Handles the gamepad connection event.\n     */\n    #onGamepadConnected = (event: GamepadEvent): void => {\n        const gamepad = event.gamepad;\n        const index = gamepad.index;\n        if (gamepad && gamepad.connected) {\n            this.#physical_gamepads[index] = new PhysicalGamepad({\n                instance: this.#instance,\n                index: 0,\n                physicalIndex: gamepad.index,\n            });\n            this.#physical_gamepads[index].enable();\n        }\n    };\n\n    /**\n     * Handles the gamepad disconnection event.\n     */\n    #onGamepadDisconnected = (event: GamepadEvent): void => {\n        const index = event.gamepad.index;\n        if (this.#physical_gamepads[index]) {\n            this.#physical_gamepads[index].disable();\n            this.#physical_gamepads[index] = null;\n        }\n    };\n}\n", "//------------------------------------------------------------------------------\nimport type {\n    ActivityWatcher,\n    Enums,\n    Commands,\n    Events,\n    LivelinkCore,\n    Queries,\n    UUID,\n    Vec2i,\n} from \"@3dverse/livelink.core\";\nimport { DynamicLoader } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { EncodedFrameConsumer } from \"./rendering/streaming/EncodedFrameConsumer\";\nimport { DecodedFrameConsumer } from \"./rendering/streaming/DecodedFrameConsumer\";\nimport { convertRawFrameMetaDataToFrameMetaData } from \"./rendering/streaming/FrameMetaData\";\nimport { RemoteFrameProxy } from \"./rendering/streaming/RemoteFrameProxy\";\nimport { Viewport } from \"./rendering/camera/Viewport\";\n\nimport { Scene } from \"./scene/Scene\";\nimport { Entity } from \"./scene/Entity\";\n\nimport { Session, SessionSelector } from \"./session/Session\";\nimport { SessionInfo } from \"./session/SessionInfo\";\nimport { TO_REMOVE__ViewportsAddedEvent } from \"./session/SessionEvents\";\n\nimport { Mouse } from \"./inputs/Mouse\";\nimport { Keyboard } from \"./inputs/Keyboard\";\nimport { AudioPlayer } from \"./audio/AudioPlayer\";\nimport { GamepadsRegistry } from \"./inputs/GamepadsRegistry\";\n\n/**\n * This class represents the Livelink connection between the client and the 3dverse server holding\n * the session.\n * It holds access to the actual socket connection as well as a client local representation of the\n * rendered scene.\n *\n * This class is not directly instantiable, you need to use the provided static\n * functions to create an instance:\n * - {@link Livelink.start}: to start a new session.\n * - {@link Livelink.join}: to join an exisiting session.\n * - {@link Livelink.join_or_start}: to try joining an existing session if one if found or fallback\n * to starting a new one otherwise.\n *\n * ### Connection lifecycle\n * The connection lifecycle is as follows:\n * - {@link Livelink.start}, {@link Livelink.join} or {@link Livelink.join_or_start} to create a new\n * Livelink instance.\n * - {@link Livelink.configureRemoteServer} to configure the remote server with the desired codec.\n * - {@link Livelink.addViewports} to add the viewports to the remote rendering surface so that the\n * server knows the size of the encoded frames to send.\n * - {@link Livelink.setEncodedFrameConsumer} to set the encoded frame consumer that will process the\n * encoded frames received from the server.\n * - {@link Livelink.startStreaming} to start streaming the remotely rendered frames.\n *\n * ### Input devices\n * Input devices can be accessed from the Livelink instance using the {@link Livelink.devices} property.\n * They can be activated and deactivated using the appropriate methods.\n * An active input device will automatically send its state as it changes to the server.\n *\n * ### Session management\n * Starting a new session:\n *\n * ```typescript\n * const instance = await Livelink.start({\n *     scene_id: \"00000000-0000-0000-0000-000000000000\",\n *     token: \"authentication-token\",\n * });\n * ```\n *\n * Joining an existing session:\n *\n * ```typescript\n * const session = await Session.find({\n *    scene_id: \"00000000-0000-0000-0000-000000000000\",\n *    token: \"authentication-token\",\n * });\n * const instance = await Livelink.join({session});\n * ```\n *\n * Joining an existing session or starting a new one if none is found:\n *\n * ```typescript\n * const instance = await Livelink.join_or_start({\n *     scene_id: \"00000000-0000-0000-0000-000000000000\",\n *     token: \"authentication-token\",\n * });\n * ```\n *\n * @category Main\n */\nexport class Livelink {\n    /**\n     * @internal\n     */\n    static _api_url = `https://${API_HOSTNAME}/app/v1`;\n\n    /**\n     * Start a new session on the specified scene.\n     *\n     * @param params\n     * @param params.scene_id The id of the scene to start\n     * @param params.token The public access token or the user token which must have at least read\n     * access to the scene\n     * @param params.is_transient  Whether the session should be transient or not.\n     *\n     * @returns A promise to a Livelink instance holding a session with the specified scene\n     *\n     * @throws If the session could not be started\n     */\n    static async start({\n        scene_id,\n        token,\n        is_transient,\n    }: {\n        scene_id: UUID;\n        token: string;\n        is_transient?: boolean;\n    }): Promise<Livelink> {\n        console.debug(`Starting new session on scene '${scene_id}'`);\n        const session = await Session.create({ scene_id, token, is_transient });\n        return await Livelink.join({ session });\n    }\n\n    /**\n     * Try to join an existing session on the specified scene, if none is found\n     * fallback to starting a new one.\n     *\n     * @param params\n     * @param params.scene_id The id of the scene to join\n     * @param params.token The public access token or the user token which must\n     * have at least read access to the scene\n     * @param params.session_selector A function to select the session to join\n     * among the list of available sessions. If no session is found, the function should return\n     * null to fallback to starting a new session.\n     * @param params.is_transient  Whether the session should be transient or not.\n     *\n     * @returns A promise to a Livelink instance holding a session with the\n     * specified scene\n     *\n     * @throws If the session could not be joined or started\n     */\n    static async join_or_start({\n        scene_id,\n        token,\n        session_selector = ({ sessions }: { sessions: Array<SessionInfo> }): SessionInfo => sessions[0],\n        is_transient,\n    }: {\n        scene_id: UUID;\n        token: string;\n        session_selector?: SessionSelector;\n        is_transient?: boolean;\n    }): Promise<Livelink> {\n        console.debug(`Looking for sessions on scene '${scene_id}'`);\n        const session = await Session.find({ scene_id, token, session_selector });\n\n        if (session === null) {\n            console.debug(\n                `There's no session currently running on scene '${scene_id}' and satisfiying the provided selector criteria`,\n            );\n            return await Livelink.start({ scene_id, token, is_transient });\n        }\n\n        try {\n            console.debug(\"Found session, joining...\", session);\n            return await Livelink.join({ session });\n        } catch {\n            console.error(`Failed to join session '${session.session_id}', trying again with another session.`);\n\n            return await Livelink.join_or_start({\n                scene_id,\n                token,\n                // Do not try to connect to the faulty session again.\n                session_selector: ({ sessions }: { sessions: Array<SessionInfo> }) => {\n                    sessions = sessions.filter(s => s.session_id !== session.session_id);\n                    return sessions.length === 0 ? null : session_selector({ sessions });\n                },\n            });\n        }\n    }\n\n    /**\n     * Join an existing session.\n     *\n     * @param params\n     * @param params.session The session to join\n     *\n     * @returns A promise to a Livelink instance holding the specified session\n     *\n     * @throws If the session could not be joined\n     */\n    static async join({ session }: { session: Session }): Promise<Livelink> {\n        await DynamicLoader.load();\n\n        console.debug(\"Joining session:\", session);\n        return new Livelink({ session }).#connect();\n    }\n\n    /**\n     * The session associated with this Livelink instance.\n     */\n    public readonly session: Session;\n\n    /**\n     * The scene the current session is running.\n     */\n    public readonly scene: Scene;\n\n    /**\n     * The core object managing the connection to the server.\n     */\n    #core: LivelinkCore;\n\n    /**\n     * The codec used by the renderer.\n     */\n    #codec: Enums.CodecType | null = null;\n\n    /**\n     * The rendering surface as seen by the renderer.\n     */\n    #remote_frame_proxy = new RemoteFrameProxy(this);\n\n    /**\n     * User provided frame consumer designed to receive the encoded frames sent by the renderer.\n     */\n    #encoded_frame_consumer: EncodedFrameConsumer | null = null;\n\n    /**\n     * The audio player used to play the audio stream received from the server.\n     */\n    #audio_player: AudioPlayer = new AudioPlayer();\n\n    /**\n     * Mouse input device.\n     */\n    #mouse: Mouse;\n\n    /**\n     * Keyboard input device.\n     */\n    #keyboard: Keyboard;\n\n    /**\n     * Gamepad input device.\n     */\n    #gamepads_registry: GamepadsRegistry;\n\n    /**\n     * Interval between updates sent to the renderer.\n     */\n    #update_interval: ReturnType<typeof setInterval> | null = null;\n\n    /**\n     * Interval between broadcasts sent to the editor.\n     */\n    #broadcast_interval: ReturnType<typeof setInterval> | null = null;\n\n    /**\n     * The default internal implementation of the {@link DecodedFrameConsumer} interface.\n     *\n     * If no custom decoded frame consumer is needed, this can be passed to instanciate {@link EncodedFrameConsumer}\n     * implementations.\n     */\n    get default_decoded_frame_consumer(): DecodedFrameConsumer {\n        return this.#remote_frame_proxy;\n    }\n\n    /**\n     * The activity watcher disconnects the session if no activity is detected for a certain amount\n     * of time.\n     */\n    get activity_watcher(): ActivityWatcher {\n        return this.#core.activity_watcher;\n    }\n\n    /**\n     * The latency of the connection in milliseconds.\n     */\n    get latency(): number {\n        return this.#core.latency;\n    }\n\n    /**\n     * The viewports used to render the scene for the current client.\n     */\n    get viewports(): Array<Viewport> {\n        return this.#remote_frame_proxy.viewports;\n    }\n\n    /**\n     * Constructs a new Livelink instance associated with the provided session.\n     *\n     * @param params\n     * @param params.session The session to associate with the Livelink instance\n     */\n    private constructor({ session }: { session: Session }) {\n        this.session = session;\n        this.#core = new DynamicLoader.Core();\n        this.scene = new Scene(this.#core);\n        this.#mouse = new Mouse(this);\n        this.#keyboard = new Keyboard(this);\n        this.#gamepads_registry = new GamepadsRegistry({ instance: this });\n    }\n\n    /**\n     * Disconnect from the server and release all local resources.\n     *\n     * Note that the session is not closed, it can be reconnected later.\n     */\n    async disconnect(): Promise<void> {\n        this.#uninstallEventListeners();\n\n        if (this.#update_interval) {\n            clearInterval(this.#update_interval);\n        }\n\n        if (this.#broadcast_interval) {\n            clearInterval(this.#broadcast_interval);\n        }\n\n        if (this.#encoded_frame_consumer !== null) {\n            this.#encoded_frame_consumer.release();\n        }\n\n        this.#remote_frame_proxy.release();\n        this.#audio_player.release();\n\n        await this.#core.disconnect();\n    }\n\n    /**\n     * Add viewports to the remote rendering surface.\n     *\n     * @param params\n     * @param params.viewports The viewports to add.\n     */\n    addViewports({ viewports }: { viewports: Array<Viewport> }): void {\n        this.#remote_frame_proxy.addViewports({ viewports });\n        this.session._dispatchEvent(new TO_REMOVE__ViewportsAddedEvent({ viewports }));\n    }\n\n    /**\n     * Remove viewports from the remote rendering surface.\n     *\n     * @param params\n     * @param params.viewport The viewport to remove.\n     */\n    removeViewport({ viewport }: { viewport: Viewport }): void {\n        this.#remote_frame_proxy.removeViewport({ viewport });\n    }\n\n    /**\n     * Configure the remote server with the desired codec.\n     *\n     * The viewports must have been added using {@link Livelink.addViewports} before calling this\n     * method.\n     *\n     * @param params\n     * @param params.codec The codec to use for encoding the frames.\n     *\n     * @returns A promise to the client configuration response.\n     */\n    async configureRemoteServer({\n        codec = \"h264\",\n    }: {\n        codec?: Enums.CodecType;\n    }): Promise<Commands.ClientConfigResponse> {\n        const client_config: Commands.ClientConfig = {\n            remote_canvas_size: this.#remote_frame_proxy._computeRemoteCanvasSize({ codec }),\n            encoder_config: { codec, profile: \"main\", frame_rate: 60, lossy: true },\n            supported_devices: { keyboard: true, mouse: true, gamepad: true, hololens: false, touchscreen: false },\n        };\n\n        console.debug(\"Initial surface size\", this.#remote_frame_proxy.dimensions);\n        const res = await this.#core.configureClient({ client_config });\n\n        this.#codec = res.codec;\n        return res;\n    }\n\n    /**\n     * Check if the client is configured.\n     */\n    isConfigured(): boolean {\n        return this.#codec !== null;\n    }\n\n    /**\n     * Set the encoded frame consumer.\n     */\n    async setEncodedFrameConsumer({\n        encoded_frame_consumer,\n    }: {\n        encoded_frame_consumer: EncodedFrameConsumer;\n    }): Promise<void> {\n        if (this.#codec === null) {\n            throw new Error(\"Client not configured.\");\n        }\n\n        this.#encoded_frame_consumer = await encoded_frame_consumer.configure({\n            codec: this.#codec,\n            frame_dimensions: this.#remote_frame_proxy.dimensions,\n        });\n    }\n\n    /**\n     * Start streaming the viewports from the server.\n     */\n    startStreaming(): void {\n        if (!this.isConfigured()) {\n            throw new Error(\"The Livelink instance is not configured yet\");\n        }\n\n        this.#remote_frame_proxy.init();\n        this.#core.resume();\n        this.#startUpdateLoop({});\n    }\n\n    /**\n     * Send a script event to the server to start the simulation.\n     */\n    startSimulation(): void {\n        this.#core.setSimulationState({ state: \"start_simulation\" });\n    }\n\n    /**\n     * Send a script event to the server to pause the simulation.\n     */\n    pauseSimulation(): void {\n        this.#core.setSimulationState({ state: \"pause_simulation\" });\n    }\n\n    /**\n     * Send a script event to the server to stop the simulation.\n     */\n    stopSimulation(): void {\n        this.#core.setSimulationState({ state: \"stop_simulation\" });\n    }\n\n    /**\n     * Send a partial skeleton pose targeting a specific animation controller.\n     *\n     * @param params\n     * @param params.controller The entity having the animation controller component.\n     * @param params.partial_pose The partial pose to send.\n     */\n    sendSkeletonPose({\n        controller,\n        partial_pose,\n    }: {\n        controller: Entity;\n        partial_pose: Commands.SkeletonPartialPose;\n    }): void {\n        this.#core.sendSkeletonPose({\n            controller_rtid: controller.rtid,\n            partial_pose,\n        });\n    }\n\n    /**\n     * @experimental\n     */\n    get devices(): Readonly<{ mouse: Mouse; keyboard: Keyboard; gamepads_registry: GamepadsRegistry }> {\n        return {\n            mouse: this.#mouse,\n            keyboard: this.#keyboard,\n            gamepads_registry: this.#gamepads_registry,\n        };\n    }\n\n    /**\n     * @experimental\n     */\n    async configureHeadlessClient(): Promise<Commands.ClientConfigResponse> {\n        const client_config: Commands.ClientConfig = {\n            remote_canvas_size: [256, 256],\n            encoder_config: {\n                codec: \"h264\",\n                profile: \"main\",\n                frame_rate: 30,\n                lossy: true,\n            },\n            supported_devices: {\n                keyboard: true,\n                mouse: false,\n                gamepad: false,\n                hololens: false,\n                touchscreen: false,\n            },\n        };\n\n        const res = await this.#core.configureClient({ client_config });\n        this.#codec = res.codec;\n        return res;\n    }\n\n    /**\n     * @internal\n     */\n    _sendInput({ input_state }: { input_state: Commands.InputStateData }): void {\n        this.#core.sendInputState({ input_state });\n    }\n\n    /**\n     * @internal\n     */\n    async _resize({ size }: { size: Vec2i }): Promise<void> {\n        const { size: remote_size } = await this.#core.resize({ size });\n        this.#encoded_frame_consumer?.resize({ frame_dimensions: remote_size });\n    }\n\n    /**\n     * @internal\n     */\n    _setViewports({ viewport_configs }: { viewport_configs: Array<Commands.ViewportConfig> }): void {\n        this.#core.setViewports({ viewport_configs });\n    }\n\n    /**\n     * @internal\n     */\n    async _castScreenSpaceRay({\n        screenSpaceRayQuery,\n    }: {\n        screenSpaceRayQuery: Queries.ScreenSpaceRayQuery;\n    }): Promise<Queries.ScreenSpaceRayResponse> {\n        return this.#core.castScreenSpaceRay({ screenSpaceRayQuery });\n    }\n\n    /**\n     * @internal\n     */\n    _refreshViewports(): void {\n        if (this.#TO_REMOVE__readyCallback) {\n            return;\n        }\n\n        if (this.#TO_REMOVE__refreshViewportTimeout !== null) {\n            clearTimeout(this.#TO_REMOVE__refreshViewportTimeout);\n        }\n\n        this.#TO_REMOVE__refreshViewportTimeout = setTimeout(() => {\n            this.#remote_frame_proxy.init();\n        }, 0);\n    }\n\n    /**\n     * @internal\n     */\n    _projectViewportPositionOnRemoteFrame({ viewport, position }: { viewport: Viewport; position: Vec2i }): Vec2i {\n        const frame_width = this.#remote_frame_proxy.width;\n        const frame_height = this.#remote_frame_proxy.height;\n\n        const relative_position_on_viewport = viewport._getScreenPosition({ position });\n\n        const rendering_surface_offset = [\n            viewport.rendering_surface.relative_rect.left * frame_width,\n            viewport.rendering_surface.relative_rect.top * frame_height,\n        ];\n\n        const viewport_offset_on_frame = [\n            rendering_surface_offset[0] + viewport.offset[0],\n            rendering_surface_offset[1] + viewport.offset[1],\n        ];\n\n        return [\n            (viewport_offset_on_frame[0] + relative_position_on_viewport[0] * viewport.width) / frame_width,\n            (viewport_offset_on_frame[1] + relative_position_on_viewport[1] * viewport.height) / frame_height,\n        ];\n    }\n\n    /**\n     * Connect to the server and initialize the Livelink instance.\n     */\n    async #connect(): Promise<Livelink> {\n        // Retrieve a session key\n        await this.session.registerClient();\n\n        await this.#core.connect({ session: this.session });\n        this.#installEventListeners();\n\n        return this;\n    }\n\n    /**\n     * Install event listeners on the core object.\n     */\n    #installEventListeners(): void {\n        this.#core.addEventListener(\"on-disconnected\", this.session._onDisconnected);\n        this.#core.addEventListener(\"on-inactivity-warning\", this.session._onInactivityWarning);\n        this.#core.addEventListener(\"on-activity-detected\", this.session._onActivityDetected);\n        this.#core.addEventListener(\"on-frame-received\", this.#onFrameReceived);\n        this.#core.addEventListener(\"on-audio-received\", this.#onAudioReceived);\n        this.#core.addEventListener(\"on-entities-updated\", this.#onEntitiesUpdated);\n        this.#core.addEventListener(\"on-entity-visibility-changed\", this.scene._onEntityVisibilityChanged);\n        this.#core.addEventListener(\"on-script-event-received\", this.scene._onScriptEventReceived);\n    }\n\n    /**\n     *\n     */\n    #uninstallEventListeners(): void {\n        this.#core.removeEventListener(\"on-disconnected\", this.session._onDisconnected);\n        this.#core.removeEventListener(\"on-inactivity-warning\", this.session._onInactivityWarning);\n        this.#core.removeEventListener(\"on-activity-detected\", this.session._onActivityDetected);\n        this.#core.removeEventListener(\"on-frame-received\", this.#onFrameReceived);\n        this.#core.removeEventListener(\"on-audio-received\", this.#onAudioReceived);\n        this.#core.removeEventListener(\"on-entities-updated\", this.#onEntitiesUpdated);\n        this.#core.removeEventListener(\"on-entity-visibility-changed\", this.scene._onEntityVisibilityChanged);\n        this.#core.removeEventListener(\"on-script-event-received\", this.scene._onScriptEventReceived);\n    }\n\n    /**\n     *\n     */\n    #onFrameReceived = ({ encoded_frame, meta_data: raw_frame_meta_data }: Events.FrameReceivedEvent): void => {\n        this.session._updateClients({ core: this, client_data: raw_frame_meta_data.clients });\n        const meta_data = convertRawFrameMetaDataToFrameMetaData({\n            raw_frame_meta_data,\n            client_id: this.session.client_id!,\n            entity_registry: this.scene._entity_registry,\n            viewports: this.viewports,\n        });\n\n        this.#encoded_frame_consumer!.consumeEncodedFrame({\n            encoded_frame: { video_stream: encoded_frame, meta_data },\n        });\n    };\n\n    /**\n     *\n     */\n    #onAudioReceived = ({ packet }: Events.AudioReceivedEvent): void => {\n        this.#audio_player.playAudioPacket({ packet });\n    };\n\n    /**\n     *\n     */\n    #onEntitiesUpdated = ({ updated_entities }: Events.EntitiesUpdatedEvent): void => {\n        for (const { entity_euid, updated_components } of updated_entities) {\n            this.scene._updateEntityFromEvent({ entity_euid, updated_components });\n        }\n    };\n\n    /**\n     *\n     */\n    #startUpdateLoop({\n        updatesPerSecond = 30,\n        broadcastsPerSecond = 1,\n    }: {\n        updatesPerSecond?: number;\n        broadcastsPerSecond?: number;\n    }): void {\n        this.#update_interval = setInterval(() => {\n            const update_commands = this.scene._entity_registry._getEntitiesToUpdate();\n            if (update_commands.length > 0) {\n                this.#core.updateEntities({ update_commands, persist: false });\n            }\n        }, 1000 / updatesPerSecond);\n\n        this.#broadcast_interval = setInterval(() => {\n            const update_commands = this.scene._entity_registry._getEntitiesToPersist();\n            if (update_commands.length > 0) {\n                this.#core.updateEntities({ update_commands, persist: true });\n            }\n        }, 1000 / broadcastsPerSecond);\n    }\n\n    //TEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMP\n    /**\n     * @deprecated\n     */\n    #TO_REMOVE__readyCallback: (() => void) | null = null;\n\n    /**\n     * @deprecated\n     */\n    #TO_REMOVE__refreshViewportTimeout: ReturnType<typeof setTimeout> | null = null;\n\n    /**\n     * @deprecated\n     */\n    TO_REMOVE__setReadyCallback(callback: () => void): void {\n        this.#TO_REMOVE__readyCallback = callback;\n    }\n\n    /**\n     * @deprecated\n     */\n    TO_REMOVE__startIfReady(): void {\n        if (!this.isConfigured()) {\n            return;\n        }\n\n        if (this.viewports.some(viewport => !viewport.TO_REMOVE__ready)) {\n            return;\n        }\n\n        if (this.#TO_REMOVE__readyCallback) {\n            this.#TO_REMOVE__readyCallback();\n            this.#TO_REMOVE__readyCallback = null;\n        }\n    }\n    //TEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMP\n}\n", "import { Vec3 } from \"@3dverse/livelink.core\";\nimport { Entity } from \"../../scene/Entity\";\n\n/**\n * @experimental\n *\n * The event that is fired when an entity is hovered.\n *\n * @event\n * @noInheritDoc\n * @category Camera\n */\nexport class EntityHoveredEvent extends Event {\n    /**\n     * The entity that is currently picked or hovered or null if no entity is picked or hovered.\n     */\n    public readonly hovered_entity: Entity | null;\n\n    /**\n     * The world space position of the entity that is currently picked or hovered or null if no entity is picked or hovered.\n     */\n    public readonly ws_position: Vec3 | null;\n\n    /**\n     * The world space normal of the entity that is currently picked or hovered or null if no entity is picked or hovered.\n     */\n    public readonly ws_normal: Vec3 | null;\n\n    /**\n     * @internal\n     */\n    constructor({\n        hovered_entity,\n        ws_position,\n        ws_normal,\n    }: {\n        hovered_entity: Entity | null;\n        ws_position: Vec3 | null;\n        ws_normal: Vec3 | null;\n    }) {\n        super(\"on-entity-hovered\");\n        this.hovered_entity = hovered_entity;\n        this.ws_position = ws_position;\n        this.ws_normal = ws_normal;\n    }\n}\n\n/**\n * The event that is fired when an entity is picked.\n *\n * @event\n * @noInheritDoc\n * @category Camera\n */\nexport class EntityPickedEvent extends Event {\n    /**\n     * The entity that is currently picked or hovered or null if no entity is picked or hovered.\n     */\n    public readonly picked_entity: Entity | null;\n\n    /**\n     * The world space position of the entity that is currently picked or hovered or null if no entity is picked or hovered.\n     */\n    public readonly ws_position: Vec3 | null;\n\n    /**\n     * The world space normal of the entity that is currently picked or hovered or null if no entity is picked or hovered.\n     */\n    public readonly ws_normal: Vec3 | null;\n\n    /**\n     * @internal\n     */\n    constructor({\n        picked_entity,\n        ws_position,\n        ws_normal,\n    }: {\n        picked_entity: Entity | null;\n        ws_position: Vec3 | null;\n        ws_normal: Vec3 | null;\n    }) {\n        super(\"on-entity-picked\");\n        this.picked_entity = picked_entity;\n        this.ws_position = ws_position;\n        this.ws_normal = ws_normal;\n    }\n}\n\n/**\n * @event\n * @category Camera\n */\nexport type ViewportEvents = {\n    \"on-entity-picked\": EntityPickedEvent;\n\n    /**\n     * @experimental\n     */\n    \"on-entity-hovered\": EntityHoveredEvent;\n};\n", "//------------------------------------------------------------------------------\nimport type { Enums, Vec2, Vec3 } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { vec3 } from \"gl-matrix\";\n\n//------------------------------------------------------------------------------\nimport { Livelink } from \"../../Livelink\";\nimport { Entity } from \"../../scene/Entity\";\nimport { TypedEventTarget } from \"../../TypedEventTarget\";\n\nimport { RelativeRect } from \"../surfaces/Rect\";\nimport { OverlayInterface } from \"../surfaces/OverlayInterface\";\nimport { RenderingSurfaceBase } from \"../surfaces/RenderingSurfaceBase\";\n\nimport { CameraProjection } from \"./CameraProjection\";\nimport { EntityHoveredEvent, EntityPickedEvent, ViewportEvents } from \"./ViewportEvents\";\n\n/**\n * A viewport is a rendering area on a {@link RenderingSurfaceBase} that is associated with a\n * {@link CameraProjection}.\n *\n * It can have overlays that are rendered on top of the viewport. See {@link OverlayInterface}.\n *\n * Viewports can overlap each other, in which case the one with the highest z-index is rendered on top.\n *\n * @category Camera\n */\nexport class Viewport extends TypedEventTarget<ViewportEvents> {\n    //TEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMP\n    /**\n     * @internal\n     * @deprecated\n     */\n    #TO_REMOVE__markViewportAsReady(): void {\n        this.TO_REMOVE__ready = true;\n        this.#core.TO_REMOVE__startIfReady();\n    }\n    /**\n     * @internal\n     * @deprecated\n     */\n    TO_REMOVE__ready: boolean = false;\n    //TEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMPTEMP\n\n    /**\n     * The Livelink core used to send commands.\n     */\n    readonly #core: Livelink;\n\n    /**\n     * The rendering surface on which the viewport is displayed.\n     */\n    readonly #rendering_surface: RenderingSurfaceBase;\n\n    /**\n     * Overlays that are rendered on top of the viewport.\n     */\n    readonly #overlays: Array<OverlayInterface> = [];\n\n    /**\n     * The DOM element used for picking.\n     */\n    readonly #dom_element: HTMLElement | null = null;\n\n    /**\n     * The camera projection used to render the scene.\n     */\n    #camera_projection: CameraProjection | null = null;\n\n    /**\n     * The z-index of the viewport.\n     */\n    #z_index: number = 0;\n\n    /**\n     * The relative position and size of the viewport in relation to the rendering surface.\n     */\n    #relative_rect: RelativeRect;\n\n    /**\n     * The index of the render target that is rendered on the viewport.\n     * -1 means the default render target.\n     */\n    #render_target_index: number = -1;\n\n    /**\n     *  Whether picking is enabled on the viewport.\n     */\n    #picking_enabled: boolean = false;\n\n    /**\n     *  Whether hovering is enabled on the viewport.\n     */\n    #hovering_enabled: boolean = false;\n\n    /**\n     * Whether the attached camera is controlled by the current client.\n     */\n    is_camera_controlled_by_current_client: boolean = false;\n\n    /**\n     * The rendering surface on which the viewport is displayed.\n     */\n    get rendering_surface(): RenderingSurfaceBase {\n        return this.#rendering_surface;\n    }\n\n    /**\n     * The camera projection used to render the scene.\n     */\n    get camera_projection(): CameraProjection | null {\n        return this.#camera_projection;\n    }\n\n    /**\n     * The width of the viewport in pixels.\n     */\n    get width(): number {\n        return this.#relative_rect.width * this.rendering_surface.width;\n    }\n\n    /**\n     * The height of the viewport in pixels.\n     */\n    get height(): number {\n        return this.#relative_rect.height * this.rendering_surface.height;\n    }\n\n    /**\n     * The offset of the viewport in pixels.\n     */\n    get offset(): Vec2 {\n        return [\n            this.#relative_rect.left * this.rendering_surface.width,\n            this.#relative_rect.top * this.rendering_surface.height,\n        ];\n    }\n\n    /**\n     * The aspect ratio of the viewport.\n     */\n    get aspect_ratio(): number {\n        return this.height > 0 ? this.width / this.height : 1;\n    }\n\n    /**\n     * The z-index of the viewport.\n     */\n    get z_index(): number {\n        return this.#z_index;\n    }\n\n    /**\n     * The index of the render target that is rendered on the viewport.\n     */\n    get render_target_index(): number {\n        return this.#render_target_index;\n    }\n\n    /**\n     * The relative position and size of the viewport in relation to the rendering surface.\n     */\n    get relative_rect(): RelativeRect {\n        return this.#relative_rect;\n    }\n\n    /**\n     * DOM element attached to the viewport.\n     */\n    get dom_element(): HTMLElement {\n        if (!this.#dom_element) {\n            throw new Error(\"No DOM element set on viewport\");\n        }\n\n        return this.#dom_element;\n    }\n\n    /**\n     * The DOM elements of the overlays attached to the viewport.\n     */\n    get overlay_dom_elements(): Array<HTMLElement> {\n        return this.#overlays.map((overlay) => overlay.container).filter(Boolean) as Array<HTMLElement>;\n    }\n\n    /**\n     * Sets the z-index of the viewport.\n     */\n    set z_index(z_index: number) {\n        this.#z_index = z_index;\n        this.#core._refreshViewports();\n    }\n\n    /**\n     * Sets the relative position and size of the viewport in relation to the rendering surface.\n     */\n    set relative_rect(rect: RelativeRect) {\n        this.#relative_rect = rect;\n        this.#core._refreshViewports();\n    }\n\n    /**\n     * Sets the camera projection used to render the scene.\n     */\n    set camera_projection(camera_projection: CameraProjection) {\n        this.#camera_projection = camera_projection;\n        this.#core._refreshViewports();\n        this.#TO_REMOVE__markViewportAsReady();\n    }\n\n    /**\n     * The index of the render target that is rendered on the viewport.\n     *\n     * -1 means the default render target as defined by the render graph assigned to the camera the viewport is using.\n     */\n    set render_target_index(render_target_index: number) {\n        this.#render_target_index = render_target_index;\n        this.#core._refreshViewports();\n    }\n\n    /**\n     * Creates a new viewport.\n     *\n     * @param params\n     * @param params.core - The Livelink core used to send commands.\n     * @param params.rendering_surface - The rendering surface on which the viewport is displayed.\n     * @param params.options - The options for the viewport.\n     * @param params.options.rect - The relative position and size of the viewport in relation to the rendering surface.\n     * @param params.options.render_target_index - The index of the render target that is rendered on the viewport.\n     * @param params.options.z_index - The z-index of the viewport.\n     * @param params.options.dom_element - The DOM element used for picking.\n     */\n    constructor({\n        core,\n        rendering_surface,\n        options,\n    }: {\n        core: Livelink;\n        rendering_surface: RenderingSurfaceBase;\n        options?: { rect?: RelativeRect; render_target_index?: number; z_index?: number; dom_element?: HTMLElement };\n    }) {\n        super();\n        this.#core = core;\n        this.#rendering_surface = rendering_surface;\n        this.#relative_rect = new RelativeRect(options?.rect ?? { left: 0, top: 0, width: 1, height: 1 });\n        this.#render_target_index = options?.render_target_index ?? -1;\n        this.#z_index = options?.z_index ?? 0;\n        this.#dom_element = options?.dom_element ?? null;\n    }\n\n    /**\n     * Returns whether the viewport is valid.\n     *\n     * A viewport is valid if a camera projection is set on it.\n     */\n    isValid(): boolean {\n        return this.#camera_projection !== null;\n    }\n\n    /**\n     * Releases the resources used by the viewport.\n     */\n    release(): void {\n        this.deactivatePicking();\n        this.deactivateHovering();\n    }\n\n    /**\n     * Activates picking on the viewport.\n     *\n     * If picking is activated, the viewport will emit an `on-entity-picked` event when it is clicked.\n     */\n    activatePicking(): void {\n        if (this.#picking_enabled) {\n            return;\n        }\n\n        this.dom_element.addEventListener(\"click\", this.#onClick);\n        this.#core.devices.mouse.enableOnViewport({ viewport: this });\n\n        this.#picking_enabled = true;\n    }\n\n    /**\n     * Deactivates picking on the viewport.\n     *\n     * If picking is deactivated, the viewport will no longer emit an {@link EntityPickedEvent} event when it is clicked.\n     */\n    deactivatePicking(): void {\n        if (!this.#picking_enabled) {\n            return;\n        }\n\n        this.dom_element.removeEventListener(\"click\", this.#onClick);\n        this.#core.devices.mouse.disableFromViewport({ viewport: this });\n\n        this.#picking_enabled = false;\n    }\n\n    /**\n     * @experimental\n     *\n     * Activates entity hovering on the viewport.\n     *\n     * If hovering is activated, the viewport will emit an {@link EntityHoveredEvent} event when it is hovered.\n     */\n    activateHovering(): void {\n        if (this.#hovering_enabled) {\n            return;\n        }\n\n        this.dom_element.addEventListener(\"pointermove\", this.#onPointerMove);\n        this.#core.devices.mouse.enableOnViewport({ viewport: this });\n\n        this.#hovering_enabled = true;\n    }\n\n    /**\n     * @experimental\n     *\n     * Deactivates entity hovering on the viewport.\n     *\n     * If hovering is deactivated, the viewport will no longer emit an `on-entity-hovered` event when it is hovered.\n     */\n    deactivateHovering(): void {\n        if (!this.#hovering_enabled) {\n            return;\n        }\n\n        this.dom_element.removeEventListener(\"pointermove\", this.#onPointerMove);\n        this.#core.devices.mouse.disableFromViewport({ viewport: this });\n\n        this.#hovering_enabled = false;\n    }\n\n    /**\n     * Casts a screen space ray and returns the **first** entity and world space position and normal that the ray\n     * intersects.\n     * If no entity is intersected, null is returned.\n     *\n     * Note that transparent objects will be picked if they are in front of opaque objects even if their\n     * opacity is set to 0.\n     *\n     * Do **not** use this method for picking objects using the mouse cursor.\n     * Instead activate picking on the viewport using {@link activatePicking} and listen for the\n     * `on-entity-picked` event.\n     *\n     * @param params\n     * @param params.screen_position - The screen space position to cast the ray from.\n     * @param params.mode - The highlight mode to use.\n     *\n     * @returns The entity and world space position and normal that the ray intersects, or null if no entity is\n     * intersected.\n     */\n    async castScreenSpaceRay({\n        screen_position,\n        mode = \"None\",\n    }: {\n        screen_position: Vec2;\n        mode: Enums.HighlightMode;\n    }): Promise<{ entity: Entity; world_position: Vec3; world_normal: Vec3 } | null> {\n        if (!this.#camera_projection) {\n            return null;\n        }\n\n        const res = await this.#core._castScreenSpaceRay({\n            screenSpaceRayQuery: {\n                camera_rtid: this.#camera_projection.camera_entity.rtid,\n                pos: screen_position,\n                mode,\n            },\n        });\n\n        if (res.entity_rtid === null) {\n            return null;\n        }\n\n        const entity = await this.#core.scene._findEntity({ entity_rtid: res.entity_rtid });\n        if (entity === null) {\n            return null;\n        }\n\n        return { entity, world_position: res.position, world_normal: res.normal };\n    }\n\n    /**\n     * Projects a world space position to screen space.\n     *\n     * The position is projected using the camera projection set on the viewport.\n     *\n     * @param params\n     * @param params.world_position - The position in world space to project.\n     * @param params.out_screen_position - The output position in screen space.\n     *\n     * @returns The position in screen space.\n     */\n    projectWorldToScreen({\n        world_position,\n        out_screen_position = vec3.create() as Vec3,\n    }: {\n        world_position: Vec3;\n        out_screen_position?: Vec3;\n    }): Vec3 {\n        if (!this.#camera_projection) {\n            throw new Error(\"No camera set on viewport\");\n        }\n\n        const clip_position = this.#camera_projection.projectWorldToClip({\n            world_position,\n            out_clip_position: out_screen_position,\n        });\n\n        const screen_position = clip_position;\n        screen_position[0] = (clip_position[0] + 1) * this.width * 0.5;\n        screen_position[1] = (-clip_position[1] + 1) * this.height * 0.5;\n\n        return screen_position;\n    }\n\n    /**\n     * Adds an overlay to the viewport.\n     *\n     * @param params\n     * @param params.overlay - The overlay to add. Must not have been added to the viewport before.\n     */\n    addOverlay({ overlay }: { overlay: OverlayInterface }): void {\n        if (this.#overlays.includes(overlay)) {\n            console.warn(\"Attempting to add an overlay that is already present\", overlay);\n            return;\n        }\n        this.#overlays.push(overlay);\n        this.rendering_surface.redrawLastFrame();\n    }\n\n    /**\n     * Removes an overlay from the viewport.\n     *\n     * The overlay is released and should not be used after this method is called.\n     *\n     * @param params\n     * @param params.overlay - The overlay to remove. Must have been added to the viewport before.\n     */\n    removeOverlay({ overlay }: { overlay: OverlayInterface }): void {\n        overlay.release();\n\n        const index = this.#overlays.indexOf(overlay);\n        if (index === -1) {\n            console.warn(\"Attempting to remove an overlay that is not present\", overlay);\n            return;\n        }\n\n        this.#overlays.splice(index, 1);\n        this.rendering_surface.redrawLastFrame();\n    }\n\n    /**\n     * @internal\n     */\n    _drawOverlays(): OffscreenCanvas | null {\n        let blendedFrame: OffscreenCanvas | null = null;\n        for (const overlay of this.#overlays) {\n            const overlayFrame = overlay.draw({ output_canvas: blendedFrame });\n\n            if (!blendedFrame) {\n                blendedFrame = overlayFrame;\n            }\n        }\n\n        return blendedFrame;\n    }\n\n    /**\n     * @internal\n     */\n    _onResize(): void {\n        this.camera_projection?.updateProjectionMatrix();\n        for (const overlay of this.#overlays) {\n            overlay.resize({ width: this.width, height: this.height });\n        }\n    }\n\n    /**\n     * Return the screen position from a mouse event.\n     *\n     * @param params\n     * @param params.event - The mouse event.\n     *\n     * @returns The screen position as a Vec2.\n     * (0, 0) is the top-left corner of the viewport, (1, 1) is the bottom-right corner.\n     */\n    getScreenPositionFromEvent({ event }: { event: MouseEvent }): Vec2 {\n        return this._getScreenPosition({ position: [event.clientX, event.clientY] });\n    }\n\n    /**\n     * @internal\n     */\n    _getScreenPosition({ position }: { position: Vec2 }): Vec2 {\n        const bounding_rect = this.dom_element.getBoundingClientRect();\n\n        const posX = (position[0] - bounding_rect.left) / bounding_rect.width;\n        const posY = (position[1] - bounding_rect.top) / bounding_rect.height;\n\n        return [posX, posY];\n    }\n\n    /**\n     *\n     */\n    #onClick = async (e: MouseEvent): Promise<void> => {\n        e.stopPropagation();\n\n        let data = null;\n\n        const cursorData = this.#core.session.current_client?._cursor_data;\n        if (cursorData) {\n            const entity = await this.#core.scene._findEntity({ entity_rtid: cursorData.hovered_entity_rtid });\n            if (entity) {\n                data = {\n                    entity,\n                    ws_position: cursorData.hovered_ws_position,\n                    ws_normal: cursorData.hovered_ws_normal,\n                };\n            }\n        }\n        this._dispatchEvent(\n            new EntityPickedEvent({\n                picked_entity: data?.entity ?? null,\n                ws_position: data?.ws_position ?? null,\n                ws_normal: data?.ws_normal ?? null,\n            }),\n        );\n    };\n\n    /**\n     *\n     */\n    #onPointerMove = async (): Promise<void> => {\n        let data = null;\n\n        const cursorData = this.#core.session.current_client?._cursor_data;\n        if (cursorData) {\n            const entity = await this.#core.scene._findEntity({ entity_rtid: cursorData.hovered_entity_rtid });\n            if (entity) {\n                data = {\n                    entity,\n                    ws_position: cursorData.hovered_ws_position,\n                    ws_normal: cursorData.hovered_ws_normal,\n                };\n            }\n        }\n\n        this._dispatchEvent(\n            new EntityHoveredEvent({\n                hovered_entity: data?.entity ?? null,\n                ws_position: data?.ws_position ?? null,\n                ws_normal: data?.ws_normal ?? null,\n            }),\n        );\n    };\n}\n", "const REVISION = '144dev';\r\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\r\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\r\nconst CullFaceNone = 0;\r\nconst CullFaceBack = 1;\r\nconst CullFaceFront = 2;\r\nconst CullFaceFrontBack = 3;\r\nconst BasicShadowMap = 0;\r\nconst PCFShadowMap = 1;\r\nconst PCFSoftShadowMap = 2;\r\nconst VSMShadowMap = 3;\r\nconst FrontSide = 0;\r\nconst BackSide = 1;\r\nconst DoubleSide = 2;\r\nconst NoBlending = 0;\r\nconst NormalBlending = 1;\r\nconst AdditiveBlending = 2;\r\nconst SubtractiveBlending = 3;\r\nconst MultiplyBlending = 4;\r\nconst CustomBlending = 5;\r\nconst AddEquation = 100;\r\nconst SubtractEquation = 101;\r\nconst ReverseSubtractEquation = 102;\r\nconst MinEquation = 103;\r\nconst MaxEquation = 104;\r\nconst ZeroFactor = 200;\r\nconst OneFactor = 201;\r\nconst SrcColorFactor = 202;\r\nconst OneMinusSrcColorFactor = 203;\r\nconst SrcAlphaFactor = 204;\r\nconst OneMinusSrcAlphaFactor = 205;\r\nconst DstAlphaFactor = 206;\r\nconst OneMinusDstAlphaFactor = 207;\r\nconst DstColorFactor = 208;\r\nconst OneMinusDstColorFactor = 209;\r\nconst SrcAlphaSaturateFactor = 210;\r\nconst NeverDepth = 0;\r\nconst AlwaysDepth = 1;\r\nconst LessDepth = 2;\r\nconst LessEqualDepth = 3;\r\nconst EqualDepth = 4;\r\nconst GreaterEqualDepth = 5;\r\nconst GreaterDepth = 6;\r\nconst NotEqualDepth = 7;\r\nconst MultiplyOperation = 0;\r\nconst MixOperation = 1;\r\nconst AddOperation = 2;\r\nconst NoToneMapping = 0;\r\nconst LinearToneMapping = 1;\r\nconst ReinhardToneMapping = 2;\r\nconst CineonToneMapping = 3;\r\nconst ACESFilmicToneMapping = 4;\r\nconst CustomToneMapping = 5;\r\n\r\nconst UVMapping = 300;\r\nconst CubeReflectionMapping = 301;\r\nconst CubeRefractionMapping = 302;\r\nconst EquirectangularReflectionMapping = 303;\r\nconst EquirectangularRefractionMapping = 304;\r\nconst CubeUVReflectionMapping = 306;\r\nconst RepeatWrapping = 1000;\r\nconst ClampToEdgeWrapping = 1001;\r\nconst MirroredRepeatWrapping = 1002;\r\nconst NearestFilter = 1003;\r\nconst NearestMipmapNearestFilter = 1004;\r\nconst NearestMipMapNearestFilter = 1004;\r\nconst NearestMipmapLinearFilter = 1005;\r\nconst NearestMipMapLinearFilter = 1005;\r\nconst LinearFilter = 1006;\r\nconst LinearMipmapNearestFilter = 1007;\r\nconst LinearMipMapNearestFilter = 1007;\r\nconst LinearMipmapLinearFilter = 1008;\r\nconst LinearMipMapLinearFilter = 1008;\r\nconst UnsignedByteType = 1009;\r\nconst ByteType = 1010;\r\nconst ShortType = 1011;\r\nconst UnsignedShortType = 1012;\r\nconst IntType = 1013;\r\nconst UnsignedIntType = 1014;\r\nconst FloatType = 1015;\r\nconst HalfFloatType = 1016;\r\nconst UnsignedShort4444Type = 1017;\r\nconst UnsignedShort5551Type = 1018;\r\nconst UnsignedInt248Type = 1020;\r\nconst AlphaFormat = 1021;\r\nconst RGBFormat = 1022; // @deprecated since r137\r\nconst RGBAFormat = 1023;\r\nconst LuminanceFormat = 1024;\r\nconst LuminanceAlphaFormat = 1025;\r\nconst DepthFormat = 1026;\r\nconst DepthStencilFormat = 1027;\r\nconst RedFormat = 1028;\r\nconst RedIntegerFormat = 1029;\r\nconst RGFormat = 1030;\r\nconst RGIntegerFormat = 1031;\r\nconst RGBAIntegerFormat = 1033;\r\n\r\nconst RGB_S3TC_DXT1_Format = 33776;\r\nconst RGBA_S3TC_DXT1_Format = 33777;\r\nconst RGBA_S3TC_DXT3_Format = 33778;\r\nconst RGBA_S3TC_DXT5_Format = 33779;\r\nconst RGB_PVRTC_4BPPV1_Format = 35840;\r\nconst RGB_PVRTC_2BPPV1_Format = 35841;\r\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\r\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\r\nconst RGB_ETC1_Format = 36196;\r\nconst RGB_ETC2_Format = 37492;\r\nconst RGBA_ETC2_EAC_Format = 37496;\r\nconst RGBA_ASTC_4x4_Format = 37808;\r\nconst RGBA_ASTC_5x4_Format = 37809;\r\nconst RGBA_ASTC_5x5_Format = 37810;\r\nconst RGBA_ASTC_6x5_Format = 37811;\r\nconst RGBA_ASTC_6x6_Format = 37812;\r\nconst RGBA_ASTC_8x5_Format = 37813;\r\nconst RGBA_ASTC_8x6_Format = 37814;\r\nconst RGBA_ASTC_8x8_Format = 37815;\r\nconst RGBA_ASTC_10x5_Format = 37816;\r\nconst RGBA_ASTC_10x6_Format = 37817;\r\nconst RGBA_ASTC_10x8_Format = 37818;\r\nconst RGBA_ASTC_10x10_Format = 37819;\r\nconst RGBA_ASTC_12x10_Format = 37820;\r\nconst RGBA_ASTC_12x12_Format = 37821;\r\nconst RGBA_BPTC_Format = 36492;\r\nconst LoopOnce = 2200;\r\nconst LoopRepeat = 2201;\r\nconst LoopPingPong = 2202;\r\nconst InterpolateDiscrete = 2300;\r\nconst InterpolateLinear = 2301;\r\nconst InterpolateSmooth = 2302;\r\nconst ZeroCurvatureEnding = 2400;\r\nconst ZeroSlopeEnding = 2401;\r\nconst WrapAroundEnding = 2402;\r\nconst NormalAnimationBlendMode = 2500;\r\nconst AdditiveAnimationBlendMode = 2501;\r\nconst TrianglesDrawMode = 0;\r\nconst TriangleStripDrawMode = 1;\r\nconst TriangleFanDrawMode = 2;\r\nconst LinearEncoding = 3000;\r\nconst sRGBEncoding = 3001;\r\nconst BasicDepthPacking = 3200;\r\nconst RGBADepthPacking = 3201;\r\nconst TangentSpaceNormalMap = 0;\r\nconst ObjectSpaceNormalMap = 1;\r\n\r\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\r\nconst NoColorSpace = '';\r\nconst SRGBColorSpace = 'srgb';\r\nconst LinearSRGBColorSpace = 'srgb-linear';\r\n\r\nconst ZeroStencilOp = 0;\r\nconst KeepStencilOp = 7680;\r\nconst ReplaceStencilOp = 7681;\r\nconst IncrementStencilOp = 7682;\r\nconst DecrementStencilOp = 7683;\r\nconst IncrementWrapStencilOp = 34055;\r\nconst DecrementWrapStencilOp = 34056;\r\nconst InvertStencilOp = 5386;\r\n\r\nconst NeverStencilFunc = 512;\r\nconst LessStencilFunc = 513;\r\nconst EqualStencilFunc = 514;\r\nconst LessEqualStencilFunc = 515;\r\nconst GreaterStencilFunc = 516;\r\nconst NotEqualStencilFunc = 517;\r\nconst GreaterEqualStencilFunc = 518;\r\nconst AlwaysStencilFunc = 519;\r\n\r\nconst StaticDrawUsage = 35044;\r\nconst DynamicDrawUsage = 35048;\r\nconst StreamDrawUsage = 35040;\r\nconst StaticReadUsage = 35045;\r\nconst DynamicReadUsage = 35049;\r\nconst StreamReadUsage = 35041;\r\nconst StaticCopyUsage = 35046;\r\nconst DynamicCopyUsage = 35050;\r\nconst StreamCopyUsage = 35042;\r\n\r\nconst GLSL1 = '100';\r\nconst GLSL3 = '300 es';\r\n\r\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nclass Vector2 {\r\n\r\n\tconstructor( x = 0, y = 0 ) {\r\n\r\n\t\tVector2.prototype.isVector2 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t}\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.x;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.x = value;\r\n\r\n\t}\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.y;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.y = value;\r\n\r\n\t}\r\n\r\n\tset( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t}\r\n\r\n\tcross( v ) {\r\n\r\n\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tangle() {\r\n\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t}\r\n\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t// fromBufferAttribute( attribute, index ) {\r\n\r\n\t// \tthis.x = attribute.getX( index );\r\n\t// \tthis.y = attribute.getY( index );\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\trotateAround( center, angle ) {\r\n\r\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tconst x = this.x - center.x;\r\n\t\tconst y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\r\n\t}\r\n\r\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\r\n\r\nlet _seed = 1234567;\r\n\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\nfunction generateUUID() {\r\n\r\n\tconst d0 = Math.random() * 0xffffffff | 0;\r\n\tconst d1 = Math.random() * 0xffffffff | 0;\r\n\tconst d2 = Math.random() * 0xffffffff | 0;\r\n\tconst d3 = Math.random() * 0xffffffff | 0;\r\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\r\n\r\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\r\n\treturn uuid.toLowerCase();\r\n\r\n}\r\n\r\nfunction clamp( value, min, max ) {\r\n\r\n\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n}\r\n\r\n// compute euclidean modulo of m % n\r\n// https://en.wikipedia.org/wiki/Modulo_operation\r\nfunction euclideanModulo( n, m ) {\r\n\r\n\treturn ( ( n % m ) + m ) % m;\r\n\r\n}\r\n\r\n// Linear mapping from range <a1, a2> to range <b1, b2>\r\nfunction mapLinear( x, a1, a2, b1, b2 ) {\r\n\r\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n}\r\n\r\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\nfunction inverseLerp( x, y, value ) {\r\n\r\n\tif ( x !== y ) {\r\n\r\n\t\treturn ( value - x ) / ( y - x );\r\n\r\n\t} else {\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Linear_interpolation\r\nfunction lerp( x, y, t ) {\r\n\r\n\treturn ( 1 - t ) * x + t * y;\r\n\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nfunction damp( x, y, lambda, dt ) {\r\n\r\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\r\n\r\n}\r\n\r\n// https://www.desmos.com/calculator/vcsjnyz7x4\r\nfunction pingpong( x, length = 1 ) {\r\n\r\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\r\n\r\n}\r\n\r\n// http://en.wikipedia.org/wiki/Smoothstep\r\nfunction smoothstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * ( 3 - 2 * x );\r\n\r\n}\r\n\r\nfunction smootherstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n}\r\n\r\n// Random integer from <low, high> interval\r\nfunction randInt( low, high ) {\r\n\r\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n}\r\n\r\n// Random float from <low, high> interval\r\nfunction randFloat( low, high ) {\r\n\r\n\treturn low + Math.random() * ( high - low );\r\n\r\n}\r\n\r\n// Random float from <-range/2, range/2> interval\r\nfunction randFloatSpread( range ) {\r\n\r\n\treturn range * ( 0.5 - Math.random() );\r\n\r\n}\r\n\r\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\r\nfunction seededRandom( s ) {\r\n\r\n\tif ( s !== undefined ) _seed = s;\r\n\r\n\t// Mulberry32 generator\r\n\r\n\tlet t = _seed += 0x6D2B79F5;\r\n\r\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\r\n\r\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\r\n\r\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\r\n\r\n}\r\n\r\nfunction degToRad( degrees ) {\r\n\r\n\treturn degrees * DEG2RAD;\r\n\r\n}\r\n\r\nfunction radToDeg( radians ) {\r\n\r\n\treturn radians * RAD2DEG;\r\n\r\n}\r\n\r\nfunction isPowerOfTwo( value ) {\r\n\r\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n}\r\n\r\nfunction ceilPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\nfunction floorPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\r\n\r\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n\r\n\t// rotations are applied to the axes in the order specified by 'order'\r\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n\t// angles are in radians\r\n\r\n\tconst cos = Math.cos;\r\n\tconst sin = Math.sin;\r\n\r\n\tconst c2 = cos( b / 2 );\r\n\tconst s2 = sin( b / 2 );\r\n\r\n\tconst c13 = cos( ( a + c ) / 2 );\r\n\tconst s13 = sin( ( a + c ) / 2 );\r\n\r\n\tconst c1_3 = cos( ( a - c ) / 2 );\r\n\tconst s1_3 = sin( ( a - c ) / 2 );\r\n\r\n\tconst c3_1 = cos( ( c - a ) / 2 );\r\n\tconst s3_1 = sin( ( c - a ) / 2 );\r\n\r\n\tswitch ( order ) {\r\n\r\n\t\tcase 'XYX':\r\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YZY':\r\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZXZ':\r\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'XZX':\r\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YXY':\r\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZYZ':\r\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction denormalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn value / 65535.0;\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn value / 255.0;\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction normalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn Math.round( value * 65535.0 );\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn Math.round( value * 255.0 );\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.round( value * 32767.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.round( value * 127.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\n\nvar MathUtils$1 = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n});\n\nclass Quaternion {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\tthis.isQuaternion = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t}\r\n\r\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\r\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tif ( t === 0 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x1;\r\n\t\t\tdst[ dstOffset + 1 ] = y1;\r\n\t\t\tdst[ dstOffset + 2 ] = z1;\r\n\t\t\tdst[ dstOffset + 3 ] = w1;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\tlet s = 1 - t;\r\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst tDir = t * dir;\r\n\r\n\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[ dstOffset ] = x0;\r\n\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t}\r\n\r\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\r\n\r\n\t\tconst x0 = src0[ srcOffset0 ];\r\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\r\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\r\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tconst x1 = src1[ srcOffset1 ];\r\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\r\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\r\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n\r\n\t\treturn dst;\r\n\r\n\t}\r\n\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget w() {\r\n\r\n\t\treturn this._w;\r\n\r\n\t}\r\n\r\n\tset w( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n\tcopy( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromEuler( euler, update ) {\r\n\r\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tconst cos = Math.cos;\r\n\t\tconst sin = Math.sin;\r\n\r\n\t\tconst c1 = cos( x / 2 );\r\n\t\tconst c2 = cos( y / 2 );\r\n\t\tconst c3 = cos( z / 2 );\r\n\r\n\t\tconst s1 = sin( x / 2 );\r\n\t\tconst s2 = sin( y / 2 );\r\n\t\tconst s3 = sin( z / 2 );\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromAxisAngle( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tconst te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromUnitVectors( vFrom, vTo ) {\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tlet r = vFrom.dot( vTo ) + 1;\r\n\r\n\t\tif ( r < Number.EPSILON ) {\r\n\r\n\t\t\t// vFrom and vTo point in opposite directions\r\n\r\n\t\t\tr = 0;\r\n\r\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\tthis._x = - vFrom.y;\r\n\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = - vFrom.z;\r\n\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\r\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\tangleTo( q ) {\r\n\r\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t}\r\n\r\n\trotateTowards( q, step ) {\r\n\r\n\t\tconst angle = this.angleTo( q );\r\n\r\n\t\tif ( angle === 0 ) return this;\r\n\r\n\t\tconst t = Math.min( 1, step / angle );\r\n\r\n\t\tthis.slerp( q, t );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\treturn this.set( 0, 0, 0, 1 );\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\t// quaternion is assumed to have unit length\r\n\r\n\t\treturn this.conjugate();\r\n\r\n\t}\r\n\r\n\tconjugate() {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\tlet l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t}\r\n\r\n\tpremultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t}\r\n\r\n\tmultiplyQuaternions( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tslerp( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\tconst s = 1 - t;\r\n\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\tthis.normalize();\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tslerpQuaternions( qa, qb, t ) {\r\n\r\n\t\treturn this.copy( qa ).slerp( qb, t );\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\r\n\t\t// Note, this source uses w, x, y, z ordering,\r\n\t\t// so we swap the order below.\r\n\r\n\t\tconst u1 = Math.random();\r\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\r\n\t\tconst sqrtu1 = Math.sqrt( u1 );\r\n\r\n\t\tconst u2 = 2 * Math.PI * Math.random();\r\n\r\n\t\tconst u3 = 2 * Math.PI * Math.random();\r\n\r\n\t\treturn this.set(\r\n\t\t\tsqrt1u1 * Math.cos( u2 ),\r\n\t\t\tsqrtu1 * Math.sin( u3 ),\r\n\t\t\tsqrtu1 * Math.cos( u3 ),\r\n\t\t\tsqrt1u1 * Math.sin( u2 ),\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tequals( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t// fromBufferAttribute( attribute, index ) {\r\n\r\n\t// \tthis._x = attribute.getX( index );\r\n\t// \tthis._y = attribute.getY( index );\r\n\t// \tthis._z = attribute.getZ( index );\r\n\t// \tthis._w = attribute.getW( index );\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._w;\r\n\r\n\t}\r\n\r\n}\n\nclass Vector3 {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0 ) {\r\n\r\n\t\tVector3.prototype.isVector3 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t}\r\n\r\n\tset( x, y, z ) {\r\n\r\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyEuler( euler ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion$1.setFromEuler( euler ) );\r\n\r\n\t}\r\n\r\n\tapplyAxisAngle( axis, angle ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion$1.setFromAxisAngle( axis, angle ) );\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\treturn this.applyMatrix3( m ).normalize();\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tconst ix = qw * x + qy * z - qz * y;\r\n\t\tconst iy = qw * y + qz * x - qx * z;\r\n\t\tconst iz = qw * z + qx * y - qy * x;\r\n\t\tconst iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// project( camera ) {\r\n\r\n\t// \treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n\r\n\t// }\r\n\r\n\t// unproject( camera ) {\r\n\r\n\t// \treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\r\n\r\n\t// }\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\t// TODO lengthSquared?\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcross( v ) {\r\n\r\n\t\treturn this.crossVectors( this, v );\r\n\r\n\t}\r\n\r\n\tcrossVectors( a, b ) {\r\n\r\n\t\tconst ax = a.x, ay = a.y, az = a.z;\r\n\t\tconst bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprojectOnVector( v ) {\r\n\r\n\t\tconst denominator = v.lengthSq();\r\n\r\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\r\n\r\n\t\tconst scalar = v.dot( this ) / denominator;\r\n\r\n\t\treturn this.copy( v ).multiplyScalar( scalar );\r\n\r\n\t}\r\n\r\n\tprojectOnPlane( planeNormal ) {\r\n\r\n\t\t_vector$3.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\treturn this.sub( _vector$3 );\r\n\r\n\t}\r\n\r\n\treflect( normal ) {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\treturn this.sub( _vector$3.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t}\r\n\r\n\tangleTo( v ) {\r\n\r\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n\r\n\t\tif ( denominator === 0 ) return Math.PI / 2;\r\n\r\n\t\tconst theta = this.dot( v ) / denominator;\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t}\r\n\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t}\r\n\r\n\tsetFromSpherical( s ) {\r\n\r\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n\r\n\t}\r\n\r\n\tsetFromSphericalCoords( radius, phi, theta ) {\r\n\r\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\r\n\t\tthis.y = Math.cos( phi ) * radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCylindrical( c ) {\r\n\r\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n\r\n\t}\r\n\r\n\tsetFromCylindricalCoords( radius, theta, y ) {\r\n\r\n\t\tthis.x = radius * Math.sin( theta );\r\n\t\tthis.y = y;\r\n\t\tthis.z = radius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixPosition( m ) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 12 ];\r\n\t\tthis.y = e[ 13 ];\r\n\t\tthis.z = e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixScale( m ) {\r\n\r\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixColumn( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t}\r\n\r\n\tsetFromMatrix3Column( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 3 );\r\n\r\n\t}\r\n\r\n\tsetFromEuler( e ) {\r\n\r\n\t\tthis.x = e._x;\r\n\t\tthis.y = e._y;\r\n\t\tthis.z = e._z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t// fromBufferAttribute( attribute, index ) {\r\n\r\n\t// \tthis.x = attribute.getX( index );\r\n\t// \tthis.y = attribute.getY( index );\r\n\t// \tthis.z = attribute.getZ( index );\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandomDirection() {\r\n\r\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\r\n\r\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\r\n\t\tconst t = Math.random() * Math.PI * 2;\r\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\r\n\r\n\t\tthis.x = f * Math.cos( t );\r\n\t\tthis.y = f * Math.sin( t );\r\n\t\tthis.z = u;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$3 = /*@__PURE__*/ new Vector3();\r\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\n\nconst _vector$2 = /*@__PURE__*/ new Vector2();\r\n\r\nclass Box2 {\r\n\r\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\r\n\r\n\t\tthis.isBox2 = true;\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector$2.copy( size ).multiplyScalar( 0.5 );\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t}\r\n\r\n\tgetCenter( target = new Vector2() ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tgetSize( target = new Vector2() ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\r\n\r\n\t}\r\n\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\r\n\t}\r\n\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 4 splitting planes to rule out intersections\r\n\r\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\tconst clampedPoint = _vector$2.copy( point ).clamp( this.min, this.max );\r\n\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t}\r\n\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n}\n\nclass Box3 {\r\n\r\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\r\n\r\n\t\tthis.isBox3 = true;\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromArray( array ) {\r\n\r\n\t\tlet minX = + Infinity;\r\n\t\tlet minY = + Infinity;\r\n\t\tlet minZ = + Infinity;\r\n\r\n\t\tlet maxX = - Infinity;\r\n\t\tlet maxY = - Infinity;\r\n\t\tlet maxZ = - Infinity;\r\n\r\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\tconst x = array[ i ];\r\n\t\t\tconst y = array[ i + 1 ];\r\n\t\t\tconst z = array[ i + 2 ];\r\n\r\n\t\t\tif ( x < minX ) minX = x;\r\n\t\t\tif ( y < minY ) minY = y;\r\n\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t}\r\n\r\n\t\tthis.min.set( minX, minY, minZ );\r\n\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// setFromBufferAttribute( attribute ) {\r\n\r\n\t// \tlet minX = + Infinity;\r\n\t// \tlet minY = + Infinity;\r\n\t// \tlet minZ = + Infinity;\r\n\r\n\t// \tlet maxX = - Infinity;\r\n\t// \tlet maxY = - Infinity;\r\n\t// \tlet maxZ = - Infinity;\r\n\r\n\t// \tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\r\n\r\n\t// \t\tconst x = attribute.getX( i );\r\n\t// \t\tconst y = attribute.getY( i );\r\n\t// \t\tconst z = attribute.getZ( i );\r\n\r\n\t// \t\tif ( x < minX ) minX = x;\r\n\t// \t\tif ( y < minY ) minY = y;\r\n\t// \t\tif ( z < minZ ) minZ = z;\r\n\r\n\t// \t\tif ( x > maxX ) maxX = x;\r\n\t// \t\tif ( y > maxY ) maxY = y;\r\n\t// \t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t// \t}\r\n\r\n\t// \tthis.min.set( minX, minY, minZ );\r\n\t// \tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromObject( object, precise = false ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\treturn this.expandByObject( object, precise );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t}\r\n\r\n\tgetCenter( target = new Vector3() ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tgetSize( target = new Vector3() ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// expandByObject( object, precise = false ) {\r\n\r\n\t// \t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t// \t// accounting for both the object's, and children's, world transforms\r\n\r\n\t// \tobject.updateWorldMatrix( false, false );\r\n\r\n\t// \tconst geometry = object.geometry;\r\n\r\n\t// \tif ( geometry !== undefined ) {\r\n\r\n\t// \t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\r\n\r\n\t// \t\t\tconst position = geometry.attributes.position;\r\n\t// \t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\r\n\r\n\t// \t\t\t\t_vector.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\r\n\t// \t\t\t\tthis.expandByPoint( _vector );\r\n\r\n\t// \t\t\t}\r\n\r\n\t// \t\t} else {\r\n\r\n\t// \t\t\tif ( geometry.boundingBox === null ) {\r\n\r\n\t// \t\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t// \t\t\t}\r\n\r\n\t// \t\t\t_box.copy( geometry.boundingBox );\r\n\t// \t\t\t_box.applyMatrix4( object.matrixWorld );\r\n\r\n\t// \t\t\tthis.union( _box );\r\n\r\n\t// \t\t}\r\n\r\n\t// \t}\r\n\r\n\t// \tconst children = object.children;\r\n\r\n\t// \tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t// \t\tthis.expandByObject( children[ i ], precise );\r\n\r\n\t// \t}\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\r\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\r\n\r\n\t}\r\n\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\tthis.clampPoint( sphere.center, _vector$1 );\r\n\r\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\treturn _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\tlet min, max;\r\n\r\n\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\r\n\r\n\t}\r\n\r\n\tintersectsTriangle( triangle ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// compute box center and extents\r\n\t\tthis.getCenter( _center );\r\n\t\t_extents.subVectors( this.max, _center );\r\n\r\n\t\t// translate triangle to aabb origin\r\n\t\t_v0$1.subVectors( triangle.a, _center );\r\n\t\t_v1$3.subVectors( triangle.b, _center );\r\n\t\t_v2$1.subVectors( triangle.c, _center );\r\n\r\n\t\t// compute edge vectors for triangle\r\n\t\t_f0.subVectors( _v1$3, _v0$1 );\r\n\t\t_f1.subVectors( _v2$1, _v1$3 );\r\n\t\t_f2.subVectors( _v0$1, _v2$1 );\r\n\r\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\tlet axes = [\r\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\r\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\r\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\r\n\t\t];\r\n\t\tif ( ! satForAxes( axes, _v0$1, _v1$3, _v2$1, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// test 3 face normals from the aabb\r\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\tif ( ! satForAxes( axes, _v0$1, _v1$3, _v2$1, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// finally testing the face normal of the triangle\r\n\t\t// use already existing triangle edge vectors here\r\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\r\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\r\n\r\n\t\treturn satForAxes( axes, _v0$1, _v1$3, _v2$1, _extents );\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\tconst clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );\r\n\r\n\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t}\r\n\r\n\tgetBoundingSphere( target ) {\r\n\r\n\t\tthis.getCenter( target.center );\r\n\r\n\t\ttarget.radius = this.getSize( _vector$1 ).length() * 0.5;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\t// transform of empty box is an empty box.\r\n\t\tif ( this.isEmpty() ) return this;\r\n\r\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n\r\n\t\tthis.setFromPoints( _points );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _points = [\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3()\r\n];\r\n\r\nconst _vector$1 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _box$1 = /*@__PURE__*/ new Box3();\r\n\r\n// triangle centered vertices\r\n\r\nconst _v0$1 = /*@__PURE__*/ new Vector3();\r\nconst _v1$3 = /*@__PURE__*/ new Vector3();\r\nconst _v2$1 = /*@__PURE__*/ new Vector3();\r\n\r\n// triangle edge vectors\r\n\r\nconst _f0 = /*@__PURE__*/ new Vector3();\r\nconst _f1 = /*@__PURE__*/ new Vector3();\r\nconst _f2 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _center = /*@__PURE__*/ new Vector3();\r\nconst _extents = /*@__PURE__*/ new Vector3();\r\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\r\nconst _testAxis = /*@__PURE__*/ new Vector3();\r\n\r\nfunction satForAxes( axes, v0, v1, v2, extents ) {\r\n\r\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n\r\n\t\t_testAxis.fromArray( axes, i );\r\n\t\t// project the aabb onto the separating axis\r\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\r\n\t\t// project all 3 vertices of the triangle onto the separating axis\r\n\t\tconst p0 = v0.dot( _testAxis );\r\n\t\tconst p1 = v1.dot( _testAxis );\r\n\t\tconst p2 = v2.dot( _testAxis );\r\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n\r\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t// the axis is separating and we can exit\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\n\nfunction SRGBToLinear( c ) {\r\n\r\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n}\r\n\r\nfunction LinearToSRGB( c ) {\r\n\r\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n}\r\n\r\n// JavaScript RGB-to-RGB transforms, defined as\r\n// FN[InputColorSpace][OutputColorSpace] callback functions.\r\nconst FN = {\r\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\r\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\r\n};\r\n\r\nconst ColorManagement = {\r\n\r\n\tlegacyMode: true,\r\n\r\n\tget workingColorSpace() {\r\n\r\n\t\treturn LinearSRGBColorSpace;\r\n\r\n\t},\r\n\r\n\tset workingColorSpace( colorSpace ) {\r\n\r\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\r\n\r\n\t},\r\n\r\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\r\n\r\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\r\n\r\n\t\t\treturn color;\r\n\r\n\t\t}\r\n\r\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\r\n\r\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\r\n\r\n\t\t\tcolor.r = fn( color.r );\r\n\t\t\tcolor.g = fn( color.g );\r\n\t\t\tcolor.b = fn( color.b );\r\n\r\n\t\t\treturn color;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( 'Unsupported color space conversion.' );\r\n\r\n\t},\r\n\r\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\r\n\r\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\r\n\r\n\t},\r\n\r\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\r\n\r\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\r\n\r\n\t},\r\n\r\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\nconst _rgb = { r: 0, g: 0, b: 0 };\r\nconst _hslA = { h: 0, s: 0, l: 0 };\r\nconst _hslB = { h: 0, s: 0, l: 0 };\r\n\r\nfunction hue2rgb( p, q, t ) {\r\n\r\n\tif ( t < 0 ) t += 1;\r\n\tif ( t > 1 ) t -= 1;\r\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\tif ( t < 1 / 2 ) return q;\r\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\treturn p;\r\n\r\n}\r\n\r\nfunction toComponents( source, target ) {\r\n\r\n\ttarget.r = source.r;\r\n\ttarget.g = source.g;\r\n\ttarget.b = source.b;\r\n\r\n\treturn target;\r\n\r\n}\r\n\r\nclass Color {\r\n\r\n\tconstructor( r, g, b ) {\r\n\r\n\t\tthis.isColor = true;\r\n\r\n\t\tthis.r = 1;\r\n\t\tthis.g = 1;\r\n\t\tthis.b = 1;\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\t\t\treturn this.set( r );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.setRGB( r, g, b );\r\n\r\n\t}\r\n\r\n\tset( value ) {\r\n\r\n\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\th = euclideanModulo( h, 1 );\r\n\t\ts = clamp( s, 0, 1 );\r\n\t\tl = clamp( l, 0, 1 );\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tconst q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tlet m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tlet color;\r\n\t\t\tconst name = m[ 1 ];\r\n\t\t\tconst components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\r\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tconst hex = m[ 1 ];\r\n\t\t\tconst size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\treturn this.setColorName( style, colorSpace );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\t// color keywords\r\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\r\n\r\n\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t// red\r\n\t\t\tthis.setHex( hex, colorSpace );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// unknown color\r\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n\tcopy( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopySRGBToLinear( color ) {\r\n\r\n\t\tthis.r = SRGBToLinear( color.r );\r\n\t\tthis.g = SRGBToLinear( color.g );\r\n\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyLinearToSRGB( color ) {\r\n\r\n\t\tthis.r = LinearToSRGB( color.r );\r\n\t\tthis.g = LinearToSRGB( color.g );\r\n\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertSRGBToLinear() {\r\n\r\n\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertLinearToSRGB() {\r\n\r\n\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetHex( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\r\n\r\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\r\n\r\n\t}\r\n\r\n\tgetHexString( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\r\n\r\n\t}\r\n\r\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\r\n\r\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\r\n\r\n\t\tconst max = Math.max( r, g, b );\r\n\t\tconst min = Math.min( r, g, b );\r\n\r\n\t\tlet hue, saturation;\r\n\t\tconst lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.h = hue;\r\n\t\ttarget.s = saturation;\r\n\t\ttarget.l = lightness;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\r\n\r\n\t\ttarget.r = _rgb.r;\r\n\t\ttarget.g = _rgb.g;\r\n\t\ttarget.b = _rgb.b;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetStyle( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\r\n\r\n\t\tif ( colorSpace !== SRGBColorSpace ) {\r\n\r\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\r\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\r\n\r\n\t\t}\r\n\r\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\r\n\r\n\t}\r\n\r\n\toffsetHSL( h, s, l ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\r\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\r\n\r\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddColors( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( color ) {\r\n\r\n\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerp( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpColors( color1, color2, alpha ) {\r\n\r\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\r\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\r\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpHSL( color, alpha ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\t\tcolor.getHSL( _hslB );\r\n\r\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\r\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\r\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\r\n\r\n\t\tthis.setHSL( h, s, l );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t// fromBufferAttribute( attribute, index ) {\r\n\r\n\t// \tthis.r = attribute.getX( index );\r\n\t// \tthis.g = attribute.getY( index );\r\n\t// \tthis.b = attribute.getZ( index );\r\n\r\n\t// \tif ( attribute.normalized === true ) {\r\n\r\n\t// \t\t// assuming Uint8Array\r\n\r\n\t// \t\tthis.r /= 255;\r\n\t// \t\tthis.g /= 255;\r\n\t// \t\tthis.b /= 255;\r\n\r\n\t// \t}\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.getHex();\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.r;\r\n\t\tyield this.g;\r\n\t\tyield this.b;\r\n\r\n\t}\r\n\r\n}\r\n\r\nColor.NAMES = _colorKeywords;\n\n/**\r\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n */\r\n\r\nclass Cylindrical {\r\n\r\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\r\n\r\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\r\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\t\tthis.y = y; // height above the x-z plane\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( radius, theta, y ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.theta = theta;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tthis.radius = other.radius;\r\n\t\tthis.theta = other.theta;\r\n\t\tthis.y = other.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t}\r\n\r\n\tsetFromCartesianCoords( x, y, z ) {\r\n\r\n\t\tthis.radius = Math.sqrt( x * x + z * z );\r\n\t\tthis.theta = Math.atan2( x, z );\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\n\nclass Matrix4 {\r\n\r\n\tconstructor() {\r\n\r\n\t\tMatrix4.prototype.isMatrix4 = true;\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyPosition( m ) {\r\n\r\n\t\tconst te = this.elements, me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrix3( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractRotation( m ) {\r\n\r\n\t\t// this method does not support reflection matrices\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tconst scaleX = 1 / _v1$2.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst scaleY = 1 / _v1$2.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst scaleZ = 1 / _v1$2.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromEuler( euler ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\r\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\r\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\r\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// bottom row\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// last column\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromQuaternion( q ) {\r\n\r\n\t\treturn this.compose( _zero, q, _one );\r\n\r\n\t}\r\n\r\n\tlookAt( eye, target, up ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\t_z.subVectors( eye, target );\r\n\r\n\t\tif ( _z.lengthSq() === 0 ) {\r\n\r\n\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t_z.z = 1;\r\n\r\n\t\t}\r\n\r\n\t\t_z.normalize();\r\n\t\t_x.crossVectors( up, _z );\r\n\r\n\t\tif ( _x.lengthSq() === 0 ) {\r\n\r\n\t\t\t// up and z are parallel\r\n\r\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t_z.x += 0.0001;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_z.z += 0.0001;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_z.normalize();\r\n\t\t\t_x.crossVectors( up, _z );\r\n\r\n\t\t}\r\n\r\n\t\t_x.normalize();\r\n\t\t_y.crossVectors( _z, _x );\r\n\r\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\r\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\r\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n\ttranspose() {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tlet tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetPosition( x, y, z ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tte[ 12 ] = x.x;\r\n\t\t\tte[ 13 ] = x.y;\r\n\t\t\tte[ 14 ] = x.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tte[ 12 ] = x;\r\n\t\t\tte[ 13 ] = y;\r\n\t\t\tte[ 14 ] = z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\r\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\r\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\r\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 4 ] = t12 * detInv;\r\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 8 ] = t13 * detInv;\r\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\tte[ 12 ] = t14 * detInv;\r\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( v ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMaxScaleOnAxis() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t}\r\n\r\n\tmakeTranslation( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationX( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s, c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationY( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationZ( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts, c, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationAxis( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tconst c = Math.cos( angle );\r\n\t\tconst s = Math.sin( angle );\r\n\t\tconst t = 1 - c;\r\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\r\n\t\tconst tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeScale( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, yx, zx, 0,\r\n\t\t\txy, 1, zy, 0,\r\n\t\t\txz, yz, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\tte[ 1 ] = ( xy + wz ) * sx;\r\n\t\tte[ 2 ] = ( xz - wy ) * sx;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = ( xy - wz ) * sy;\r\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\tte[ 6 ] = ( yz + wx ) * sy;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = ( xz + wy ) * sz;\r\n\t\tte[ 9 ] = ( yz - wx ) * sz;\r\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = position.x;\r\n\t\tte[ 13 ] = position.y;\r\n\t\tte[ 14 ] = position.z;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdecompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tlet sx = _v1$2.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\tconst sy = _v1$2.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\tconst sz = _v1$2.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t// if determine is negative, we need to invert one scale\r\n\t\tconst det = this.determinant();\r\n\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\tposition.x = te[ 12 ];\r\n\t\tposition.y = te[ 13 ];\r\n\t\tposition.z = te[ 14 ];\r\n\r\n\t\t// scale the rotation part\r\n\t\t_m1.copy( this );\r\n\r\n\t\tconst invSX = 1 / sx;\r\n\t\tconst invSY = 1 / sy;\r\n\t\tconst invSZ = 1 / sz;\r\n\r\n\t\t_m1.elements[ 0 ] *= invSX;\r\n\t\t_m1.elements[ 1 ] *= invSX;\r\n\t\t_m1.elements[ 2 ] *= invSX;\r\n\r\n\t\t_m1.elements[ 4 ] *= invSY;\r\n\t\t_m1.elements[ 5 ] *= invSY;\r\n\t\t_m1.elements[ 6 ] *= invSY;\r\n\r\n\t\t_m1.elements[ 8 ] *= invSZ;\r\n\t\t_m1.elements[ 9 ] *= invSZ;\r\n\t\t_m1.elements[ 10 ] *= invSZ;\r\n\r\n\t\tquaternion.setFromRotationMatrix( _m1 );\r\n\r\n\t\tscale.x = sx;\r\n\t\tscale.y = sy;\r\n\t\tscale.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakePerspective( left, right, top, bottom, near, far ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = 2 * near / ( right - left );\r\n\t\tconst y = 2 * near / ( top - bottom );\r\n\r\n\t\tconst a = ( right + left ) / ( right - left );\r\n\t\tconst b = ( top + bottom ) / ( top - bottom );\r\n\t\tconst c = - ( far + near ) / ( far - near );\r\n\t\tconst d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst w = 1.0 / ( right - left );\r\n\t\tconst h = 1.0 / ( top - bottom );\r\n\t\tconst p = 1.0 / ( far - near );\r\n\r\n\t\tconst x = ( right + left ) * w;\r\n\t\tconst y = ( top + bottom ) * h;\r\n\t\tconst z = ( far + near ) * p;\r\n\r\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v1$2 = /*@__PURE__*/ new Vector3();\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\r\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\r\nconst _x = /*@__PURE__*/ new Vector3();\r\nconst _y = /*@__PURE__*/ new Vector3();\r\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\r\nconst _quaternion = /*@__PURE__*/ new Quaternion();\r\n\r\nclass Euler {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\r\n\r\n\t\tthis.isEuler = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t}\r\n\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget order() {\r\n\r\n\t\treturn this._order;\r\n\r\n\t}\r\n\r\n\tset order( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tset( x, y, z, order = this._order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n\tcopy( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tconst te = m.elements;\r\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update === true ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromQuaternion( q, order, update ) {\r\n\r\n\t\t_matrix.makeRotationFromQuaternion( q );\r\n\r\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v, order = this._order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order );\r\n\r\n\t}\r\n\r\n\treorder( newOrder ) {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\t_quaternion.setFromEuler( this );\r\n\r\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\r\n\r\n\t}\r\n\r\n\tequals( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t}\r\n\r\n\tfromArray( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._order;\r\n\r\n\t}\r\n\r\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\r\n\r\n\ttoVector3() {\r\n\r\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nEuler.DefaultOrder = 'XYZ';\r\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n */\r\n\r\nclass Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tthis.parameterPositions = parameterPositions;\r\n\t\tthis._cachedIndex = 0;\r\n\r\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\tthis.sampleValues = sampleValues;\r\n\t\tthis.valueSize = sampleSize;\r\n\r\n\t\tthis.settings = null;\r\n\t\tthis.DefaultSettings_ = {};\r\n\r\n\t}\r\n\r\n\tevaluate( t ) {\r\n\r\n\t\tconst pp = this.parameterPositions;\r\n\t\tlet i1 = this._cachedIndex,\r\n\t\t\tt1 = pp[ i1 ],\r\n\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\tvalidate_interval: {\r\n\r\n\t\t\tseek: {\r\n\r\n\t\t\t\tlet right;\r\n\r\n\t\t\t\tlinear_scan: {\r\n\r\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t//-\r\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\r\n\r\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\r\n\r\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t// binary search\r\n\r\n\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt1 = pp[ i1 ];\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\treturn this.copySampleValue_( 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // seek\r\n\r\n\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t} // validate_interval\r\n\r\n\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t}\r\n\r\n\tgetSettings_() {\r\n\r\n\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t}\r\n\r\n\tcopySampleValue_( index ) {\r\n\r\n\t\t// copies a sample value to the result buffer\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = index * stride;\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t// Template methods for derived classes:\r\n\r\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\r\n\r\n\t\tthrow new Error( 'call to abstract method' );\r\n\t\t// implementations shall return this.resultBuffer\r\n\r\n\t}\r\n\r\n\tintervalChanged_( /* i1, t0, t1 */ ) {\r\n\r\n\t\t// empty\r\n\r\n\t}\r\n\r\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\r\nconst _startEnd = /*@__PURE__*/ new Vector3();\r\n\r\nclass Line3 {\r\n\r\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\r\n\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\r\n\t}\r\n\r\n\tset( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tdelta( target ) {\r\n\r\n\t\treturn target.subVectors( this.end, this.start );\r\n\r\n\t}\r\n\r\n\tdistanceSq() {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t}\r\n\r\n\tdistance() {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t}\r\n\r\n\tat( t, target ) {\r\n\r\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t}\r\n\r\n\tclosestPointToPointParameter( point, clampToLine ) {\r\n\r\n\t\t_startP.subVectors( point, this.start );\r\n\t\t_startEnd.subVectors( this.end, this.start );\r\n\r\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\r\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\r\n\r\n\t\tlet t = startEnd_startP / startEnd2;\r\n\r\n\t\tif ( clampToLine ) {\r\n\r\n\t\t\tt = clamp( t, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( point, clampToLine, target ) {\r\n\r\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\n\nclass Matrix3 {\r\n\r\n\tconstructor() {\r\n\r\n\t\tMatrix3.prototype.isMatrix3 = true;\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrix3Column( this, 0 );\r\n\t\tyAxis.setFromMatrix3Column( this, 1 );\r\n\t\tzAxis.setFromMatrix3Column( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrix4( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\r\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\r\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\r\n\r\n\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\tte[ 3 ] = t12 * detInv;\r\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\tte[ 6 ] = t13 * detInv;\r\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranspose() {\r\n\r\n\t\tlet tmp;\r\n\t\tconst m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetNormalMatrix( matrix4 ) {\r\n\r\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\r\n\r\n\t}\r\n\r\n\ttransposeIntoArray( r ) {\r\n\r\n\t\tconst m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\t\tconst c = Math.cos( rotation );\r\n\t\tconst s = Math.sin( rotation );\r\n\r\n\t\tthis.set(\r\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tscale( sx, sy ) {\r\n\r\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotate( theta ) {\r\n\r\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( tx, ty ) {\r\n\r\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// for 2D Transforms\r\n\r\n\tmakeTranslation( x, y ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, x,\r\n\t\t\t0, 1, y,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotation( theta ) {\r\n\r\n\t\t// counterclockwise\r\n\r\n\t\tconst c = Math.cos( theta );\r\n\t\tconst s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0,\r\n\t\t\ts, c, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeScale( x, y ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0,\r\n\t\t\t0, y, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\r\nconst _vector2 = /*@__PURE__*/ new Vector3();\r\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\r\n\r\nclass Plane {\r\n\r\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\r\n\r\n\t\tthis.isPlane = true;\r\n\r\n\t\t// normal is assumed to be normalized\r\n\r\n\t\tthis.normal = normal;\r\n\t\tthis.constant = constant;\r\n\r\n\t}\r\n\r\n\tset( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponents( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCoplanarPoints( a, b, c ) {\r\n\r\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t}\r\n\r\n\tdistanceToSphere( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t}\r\n\r\n\tprojectPoint( point, target ) {\r\n\r\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\r\n\r\n\t}\r\n\r\n\tintersectLine( line, target ) {\r\n\r\n\t\tconst direction = line.delta( _vector1 );\r\n\r\n\t\tconst denominator = this.normal.dot( direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\treturn target.copy( line.start );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t}\r\n\r\n\tintersectsLine( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tconst startSign = this.distanceToPoint( line.start );\r\n\t\tconst endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\tcoplanarPoint( target ) {\r\n\r\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\r\n\r\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\r\n\r\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.constant -= offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\r\nconst _segCenter = /*@__PURE__*/ new Vector3();\r\nconst _segDir = /*@__PURE__*/ new Vector3();\r\nconst _diff = /*@__PURE__*/ new Vector3();\r\n\r\nconst _edge1 = /*@__PURE__*/ new Vector3();\r\nconst _edge2 = /*@__PURE__*/ new Vector3();\r\nconst _normal = /*@__PURE__*/ new Vector3();\r\n\r\nclass Ray {\r\n\r\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\r\n\r\n\t\tthis.origin = origin;\r\n\t\tthis.direction = direction;\r\n\r\n\t}\r\n\r\n\tset( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tat( t, target = new Vector3()) {\r\n\r\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t}\r\n\r\n\tlookAt( v ) {\r\n\r\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trecast( t ) {\r\n\r\n\t\tthis.origin.copy( this.at( t, _vector ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( point, target = new Vector3() ) {\r\n\r\n\t\ttarget.subVectors( point, this.origin );\r\n\r\n\t\tconst directionDistance = target.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn target.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t}\r\n\r\n\tdistanceSqToPoint( point ) {\r\n\r\n\t\tconst directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t// point behind the ray\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t}\r\n\r\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\treturn _vector.distanceToSquared( point );\r\n\r\n\t}\r\n\r\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t// It returns the min distance between the ray and the segment\r\n\t\t// defined by v0 and v1\r\n\t\t// It can also set two optional targets :\r\n\t\t// - The closest point on the ray\r\n\t\t// - The closest point on the segment\r\n\r\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t_diff.copy( this.origin ).sub( _segCenter );\r\n\r\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\tconst a01 = - this.direction.dot( _segDir );\r\n\t\tconst b0 = _diff.dot( this.direction );\r\n\t\tconst b1 = - _diff.dot( _segDir );\r\n\t\tconst c = _diff.lengthSq();\r\n\t\tconst det = Math.abs( 1 - a01 * a01 );\r\n\t\tlet s0, s1, sqrDist, extDet;\r\n\r\n\t\tif ( det > 0 ) {\r\n\r\n\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\textDet = segExtent * det;\r\n\r\n\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\tconst invDet = 1 / det;\r\n\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\r\n\r\n\t\t}\r\n\r\n\t\treturn sqrDist;\r\n\r\n\t}\r\n\r\n\tintersectSphere( sphere, target = new Vector3()) {\r\n\r\n\t\t_vector.subVectors( sphere.center, this.origin );\r\n\t\tconst tca = _vector.dot( this.direction );\r\n\t\tconst d2 = _vector.dot( _vector ) - tca * tca;\r\n\t\tconst radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\tconst thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\tconst t0 = tca - thc;\r\n\r\n\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\tconst t1 = tca + thc;\r\n\r\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t// test to see if t0 is behind the ray:\r\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\tif ( t0 < 0 ) return this.at( t1, target );\r\n\r\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\treturn this.at( t0, target );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\tdistanceToPlane( plane ) {\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t : null;\r\n\r\n\t}\r\n\r\n\tintersectPlane( plane, target ) {\r\n\r\n\t\tconst t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, target );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tintersectBox( box, target ) {\r\n\r\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tconst invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tconst origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn this.intersectBox( box, _vector ) !== null;\r\n\r\n\t}\r\n\r\n\tintersectTriangle( a, b, c, backfaceCulling, target) {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t_edge1.subVectors( b, a );\r\n\t\t_edge2.subVectors( c, a );\r\n\t\t_normal.crossVectors( _edge1, _edge2 );\r\n\r\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\tlet DdN = this.direction.dot( _normal );\r\n\t\tlet sign;\r\n\r\n\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\tsign = 1;\r\n\r\n\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\tsign = - 1;\r\n\t\t\tDdN = - DdN;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t_diff.subVectors( this.origin, a );\r\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\r\n\r\n\t\t// b1 < 0, no intersection\r\n\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\r\n\r\n\t\t// b2 < 0, no intersection\r\n\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// b1+b2 > 1, no intersection\r\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Line intersects triangle, check if ray does.\r\n\t\tconst QdN = - sign * _diff.dot( _normal );\r\n\r\n\t\t// t < 0, no intersection\r\n\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Ray intersects triangle.\r\n\t\treturn this.at( QdN / DdN, target );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix4 ) {\r\n\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.transformDirection( matrix4 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\n\nconst _box = /*@__PURE__*/ new Box3();\r\nconst _v1$1 = /*@__PURE__*/ new Vector3();\r\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\r\nconst _toPoint = /*@__PURE__*/ new Vector3();\r\n\r\nclass Sphere {\r\n\r\n\tconstructor( center = new Vector3(), radius = - 1 ) {\r\n\r\n\t\tthis.center = center;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tset( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points, optionalCenter ) {\r\n\r\n\t\tconst center = this.center;\r\n\r\n\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_box.setFromPoints( points ).getCenter( center );\r\n\r\n\t\t}\r\n\r\n\t\tlet maxRadiusSq = 0;\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\treturn ( this.radius < 0 );\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.center.set( 0, 0, 0 );\r\n\t\tthis.radius = - 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tconst radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsSphere( this );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\ttarget.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\ttarget.sub( this.center ).normalize();\r\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetBoundingBox( target ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\t// Empty sphere produces empty bounding box\r\n\t\t\ttarget.makeEmpty();\r\n\t\t\treturn target;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.set( this.center, this.center );\r\n\t\ttarget.expandByScalar( this.radius );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n    if ( this.isEmpty() ) {\r\n\t\t\tthis.center.copy( point );\r\n\t\t\tthis.radius = 0;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\r\n\r\n\t\t_toPoint.subVectors( point, this.center );\r\n\r\n\t\tconst lengthSq = _toPoint.lengthSq();\r\n\r\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tconst length = Math.sqrt( lengthSq );\r\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\r\n\r\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\r\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\r\n\t\t\t// the whole missing distance were just added to radius.\r\n\r\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\r\n\t\t\tthis.radius += missingRadiusHalf;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( sphere ) {\r\n\r\n    // handle empty sphere cases\r\n\t\tif ( sphere.isEmpty() ) {\r\n\t\t\treturn;\r\n\t\t} else if ( this.isEmpty() ) {\r\n\t\t\tthis.copy( sphere );\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\r\n\r\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\r\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\r\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\r\n\r\n\t\t if ( this.center.equals( sphere.center ) === true ) {\r\n\r\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\tthis.expandByPoint( _v1$1.copy( sphere.center ).add( _toFarthestPoint ) );\r\n\t\tthis.expandByPoint( _v1$1.copy( sphere.center ).sub( _toFarthestPoint ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\n\n/**\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n * The azimuthal angle (theta) is measured from the positive z-axis.\r\n */\r\n\r\nclass Spherical {\r\n\r\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi; // polar angle\r\n\t\tthis.theta = theta; // azimuthal angle\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi;\r\n\t\tthis.theta = theta;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tthis.radius = other.radius;\r\n\t\tthis.phi = other.phi;\r\n\t\tthis.theta = other.theta;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// restrict phi to be between EPS and PI-EPS\r\n\tmakeSafe() {\r\n\r\n\t\tconst EPS = 0.000001;\r\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t}\r\n\r\n\tsetFromCartesianCoords( x, y, z ) {\r\n\r\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\tthis.theta = 0;\r\n\t\t\tthis.phi = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _v2 = /*@__PURE__*/ new Vector3();\r\nconst _v3 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _vab = /*@__PURE__*/ new Vector3();\r\nconst _vac = /*@__PURE__*/ new Vector3();\r\nconst _vbc = /*@__PURE__*/ new Vector3();\r\nconst _vap = /*@__PURE__*/ new Vector3();\r\nconst _vbp = /*@__PURE__*/ new Vector3();\r\nconst _vcp = /*@__PURE__*/ new Vector3();\r\n\r\nclass Triangle {\r\n\r\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\r\n\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\r\n\t}\r\n\r\n\tstatic getNormal( a, b, c, target ) {\r\n\r\n\t\ttarget.subVectors( c, b );\r\n\t\t_v0.subVectors( a, b );\r\n\t\ttarget.cross( _v0 );\r\n\r\n\t\tconst targetLengthSq = target.lengthSq();\r\n\t\tif ( targetLengthSq > 0 ) {\r\n\r\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.set( 0, 0, 0 );\r\n\r\n\t}\r\n\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tstatic getBarycoord( point, a, b, c, target ) {\r\n\r\n\t\t_v0.subVectors( c, a );\r\n\t\t_v1.subVectors( b, a );\r\n\t\t_v2.subVectors( point, a );\r\n\r\n\t\tconst dot00 = _v0.dot( _v0 );\r\n\t\tconst dot01 = _v0.dot( _v1 );\r\n\t\tconst dot02 = _v0.dot( _v2 );\r\n\t\tconst dot11 = _v1.dot( _v1 );\r\n\t\tconst dot12 = _v1.dot( _v2 );\r\n\r\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn target.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tconst invDenom = 1 / denom;\r\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn target.set( 1 - u - v, v, u );\r\n\r\n\t}\r\n\r\n\tstatic containsPoint( point, a, b, c ) {\r\n\r\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\r\n\r\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\r\n\r\n\t}\r\n\r\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\r\n\r\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\r\n\r\n\t\ttarget.set( 0, 0 );\r\n\t\ttarget.addScaledVector( uv1, _v3.x );\r\n\t\ttarget.addScaledVector( uv2, _v3.y );\r\n\t\ttarget.addScaledVector( uv3, _v3.z );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tstatic isFrontFacing( a, b, c, direction ) {\r\n\r\n\t\t_v0.subVectors( c, b );\r\n\t\t_v1.subVectors( a, b );\r\n\r\n\t\t// strictly front facing\r\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\r\n\r\n\t}\r\n\r\n\tset( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// setFromAttributeAndIndices( attribute, i0, i1, i2 ) {\r\n\r\n\t// \tthis.a.fromBufferAttribute( attribute, i0 );\r\n\t// \tthis.b.fromBufferAttribute( attribute, i1 );\r\n\t// \tthis.c.fromBufferAttribute( attribute, i2 );\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetArea() {\r\n\r\n\t\t_v0.subVectors( this.c, this.b );\r\n\t\t_v1.subVectors( this.a, this.b );\r\n\r\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\r\n\r\n\t}\r\n\r\n\tgetMidpoint( target ) {\r\n\r\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t}\r\n\r\n\tgetNormal( target ) {\r\n\r\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\tgetPlane( target ) {\r\n\r\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\tgetBarycoord( point, target ) {\r\n\r\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\tgetUV( point, uv1, uv2, uv3, target ) {\r\n\r\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\tisFrontFacing( direction ) {\r\n\r\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsTriangle( this );\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( p, target ) {\r\n\r\n\t\tconst a = this.a, b = this.b, c = this.c;\r\n\t\tlet v, w;\r\n\r\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t_vab.subVectors( b, a );\r\n\t\t_vac.subVectors( c, a );\r\n\t\t_vap.subVectors( p, a );\r\n\t\tconst d1 = _vab.dot( _vap );\r\n\t\tconst d2 = _vac.dot( _vap );\r\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\r\n\r\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\treturn target.copy( a );\r\n\r\n\t\t}\r\n\r\n\t\t_vbp.subVectors( p, b );\r\n\t\tconst d3 = _vab.dot( _vbp );\r\n\t\tconst d4 = _vac.dot( _vbp );\r\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\r\n\r\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\treturn target.copy( b );\r\n\r\n\t\t}\r\n\r\n\t\tconst vc = d1 * d4 - d3 * d2;\r\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n\r\n\t\t\tv = d1 / ( d1 - d3 );\r\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\r\n\r\n\t\t}\r\n\r\n\t\t_vcp.subVectors( p, c );\r\n\t\tconst d5 = _vab.dot( _vcp );\r\n\t\tconst d6 = _vac.dot( _vcp );\r\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\r\n\r\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\treturn target.copy( c );\r\n\r\n\t\t}\r\n\r\n\t\tconst vb = d5 * d2 - d1 * d6;\r\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n\r\n\t\t\tw = d2 / ( d2 - d6 );\r\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\r\n\r\n\t\t}\r\n\r\n\t\tconst va = d3 * d6 - d5 * d4;\r\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n\r\n\t\t\t_vbc.subVectors( c, b );\r\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\r\n\r\n\t\t}\r\n\r\n\t\t// face region\r\n\t\tconst denom = 1 / ( va + vb + vc );\r\n\t\t// u = va * denom\r\n\t\tv = vb * denom;\r\n\t\tw = vc * denom;\r\n\r\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\r\n\r\n\t}\r\n\r\n\tequals( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n}\n\nclass Vector4 {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\tVector4.prototype.isVector4 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t}\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.z;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.z = value;\r\n\r\n\t}\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.w;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.w = value;\r\n\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetW( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\t\tthis.w *= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromQuaternion( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\tthis.x = 1;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = q.x / s;\r\n\t\t\tthis.y = q.y / s;\r\n\t\t\tthis.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tlet angle, x, y, z; // variables for result\r\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tconst xx = ( m11 + 1 ) / 2;\r\n\t\t\tconst yy = ( m22 + 1 ) / 2;\r\n\t\t\tconst zz = ( m33 + 1 ) / 2;\r\n\t\t\tconst xy = ( m12 + m21 ) / 4;\r\n\t\t\tconst xz = ( m13 + m31 ) / 4;\r\n\t\t\tconst yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\r\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t// fromBufferAttribute( attribute, index ) {\r\n\r\n\t// \tthis.x = attribute.getX( index );\r\n\t// \tthis.y = attribute.getY( index );\r\n\t// \tthis.z = attribute.getZ( index );\r\n\t// \tthis.w = attribute.getW( index );\r\n\r\n\t// \treturn this;\r\n\r\n\t// }\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\t\tthis.w = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\t\tyield this.w;\r\n\r\n\t}\r\n\r\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, BackSide, BasicDepthPacking, BasicShadowMap, Box2, Box3, ByteType, CineonToneMapping, ClampToEdgeWrapping, Color, ColorManagement, CubeReflectionMapping, CubeRefractionMapping, CubeUVReflectionMapping, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, CustomBlending, CustomToneMapping, Cylindrical, DecrementStencilOp, DecrementWrapStencilOp, DepthFormat, DepthStencilFormat, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, FloatType, FrontSide, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, HalfFloatType, IncrementStencilOp, IncrementWrapStencilOp, IntType, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Line3, LinearEncoding, LinearFilter, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToSRGB, LinearToneMapping, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, MathUtils$1 as MathUtils, Matrix3, Matrix4, MaxEquation, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, ObjectSpaceNormalMap, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, PCFShadowMap, PCFSoftShadowMap, Plane, Quaternion, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, Ray, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, SRGBColorSpace, SRGBToLinear, ShortType, Sphere, Spherical, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, UVMapping, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n", "import * as THREE from 'threejs-math';\nimport { Vector3 } from 'threejs-math';\n\n// see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#value\nconst MOUSE_BUTTON = {\n    LEFT: 1,\n    RIGHT: 2,\n    MIDDLE: 4,\n};\nconst ACTION = Object.freeze({\n    NONE: 0b0,\n    ROTATE: 0b1,\n    TRUCK: 0b10,\n    SCREEN_PAN: 0b100,\n    OFFSET: 0b1000,\n    DOLLY: 0b10000,\n    ZOOM: 0b100000,\n    TOUCH_ROTATE: 0b1000000,\n    TOUCH_TRUCK: 0b10000000,\n    TOUCH_SCREEN_PAN: 0b100000000,\n    TOUCH_OFFSET: 0b1000000000,\n    TOUCH_DOLLY: 0b10000000000,\n    TOUCH_ZOOM: 0b100000000000,\n    TOUCH_DOLLY_TRUCK: 0b1000000000000,\n    TOUCH_DOLLY_SCREEN_PAN: 0b10000000000000,\n    TOUCH_DOLLY_OFFSET: 0b100000000000000,\n    TOUCH_DOLLY_ROTATE: 0b1000000000000000,\n    TOUCH_ZOOM_TRUCK: 0b10000000000000000,\n    TOUCH_ZOOM_OFFSET: 0b100000000000000000,\n    TOUCH_ZOOM_SCREEN_PAN: 0b1000000000000000000,\n    TOUCH_ZOOM_ROTATE: 0b10000000000000000000,\n});\nconst DOLLY_DIRECTION = {\n    NONE: 0,\n    IN: 1,\n    OUT: -1,\n};\n\nconst PI_2 = Math.PI * 2;\nconst PI_HALF = Math.PI / 2;\n\nconst EPSILON = 1e-5;\nconst DEG2RAD = Math.PI / 180;\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction approxZero(number, error = EPSILON) {\n    return Math.abs(number) < error;\n}\nfunction approxEquals(a, b, error = EPSILON) {\n    return approxZero(a - b, error);\n}\nfunction roundToStep(value, step) {\n    return Math.round(value / step) * step;\n}\nfunction infinityToMaxNumber(value) {\n    if (isFinite(value))\n        return value;\n    if (value < 0)\n        return -Number.MAX_VALUE;\n    return Number.MAX_VALUE;\n}\nfunction maxNumberToInfinity(value) {\n    if (Math.abs(value) < Number.MAX_VALUE)\n        return value;\n    return value * Infinity;\n}\nfunction unproject(vec, camera) {\n    return vec.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n}\n// https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Mathf.cs#L308\nfunction smoothDamp(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let change = current - target;\n    const originalTo = target;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    change = clamp(change, -maxChange, maxChange);\n    target = current - change;\n    const temp = (currentVelocityRef.value + omega * change) * deltaTime;\n    currentVelocityRef.value = (currentVelocityRef.value - omega * temp) * exp;\n    let output = target + (change + temp) * exp;\n    // Prevent overshooting\n    if (originalTo - current > 0.0 === output > originalTo) {\n        output = originalTo;\n        currentVelocityRef.value = (output - originalTo) / deltaTime;\n    }\n    return output;\n}\n// https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Vector3.cs#L97\nfunction smoothDampVec3(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime, out) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let targetX = target.x;\n    let targetY = target.y;\n    let targetZ = target.z;\n    let changeX = current.x - targetX;\n    let changeY = current.y - targetY;\n    let changeZ = current.z - targetZ;\n    const originalToX = targetX;\n    const originalToY = targetY;\n    const originalToZ = targetZ;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    const maxChangeSq = maxChange * maxChange;\n    const magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\n    if (magnitudeSq > maxChangeSq) {\n        const magnitude = Math.sqrt(magnitudeSq);\n        changeX = changeX / magnitude * maxChange;\n        changeY = changeY / magnitude * maxChange;\n        changeZ = changeZ / magnitude * maxChange;\n    }\n    targetX = current.x - changeX;\n    targetY = current.y - changeY;\n    targetZ = current.z - changeZ;\n    const tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;\n    const tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;\n    const tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;\n    currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;\n    currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;\n    currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;\n    out.x = targetX + (changeX + tempX) * exp;\n    out.y = targetY + (changeY + tempY) * exp;\n    out.z = targetZ + (changeZ + tempZ) * exp;\n    // Prevent overshooting\n    const origMinusCurrentX = originalToX - current.x;\n    const origMinusCurrentY = originalToY - current.y;\n    const origMinusCurrentZ = originalToZ - current.z;\n    const outMinusOrigX = out.x - originalToX;\n    const outMinusOrigY = out.y - originalToY;\n    const outMinusOrigZ = out.z - originalToZ;\n    if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {\n        out.x = originalToX;\n        out.y = originalToY;\n        out.z = originalToZ;\n        currentVelocityRef.x = (out.x - originalToX) / deltaTime;\n        currentVelocityRef.y = (out.y - originalToY) / deltaTime;\n        currentVelocityRef.z = (out.z - originalToZ) / deltaTime;\n    }\n    return out;\n}\n\nfunction extractClientCoordFromEvent(pointers, out) {\n    out.set(0, 0);\n    pointers.forEach((pointer) => {\n        out.x += pointer.clientX;\n        out.y += pointer.clientY;\n    });\n    out.x /= pointers.length;\n    out.y /= pointers.length;\n}\n\nlet _m1 = new THREE.Matrix4();\nlet _position = new THREE.Vector3();\n/**\n *\n */\nclass Camera {\n    position;\n    quaternion;\n    up;\n    scale = new THREE.Vector3(1, 1, 1);\n    /**\n     * Local transform matrix\n     */\n    matrix = new THREE.Matrix4();\n    /**\n     * Global transform matrix\n     */\n    matrixWorld = new THREE.Matrix4();\n    /**\n     * This is the inverse of matrixWorld. MatrixWorld contains the Matrix which has the world transform of the Camera.\n     */\n    matrixWorldInverse = new THREE.Matrix4();\n    /**\n     * This is the matrix which contains the projection.\n     */\n    projectionMatrix = new THREE.Matrix4();\n    /**\n     * The inverse of projectionMatrix.\n     */\n    projectionMatrixInverse = new THREE.Matrix4();\n    /**\n     * Gets or sets the zoom factor of the camera.\n     */\n    zoom = 1;\n    /**\n     * When this is set, it calculates the matrixWorld in that frame and resets this property to false\n     */\n    matrixWorldNeedsUpdate = true;\n    /**\n     * When this is set, it calculates the matrix of position, (rotation or quaternion) and scale every frame and also recalculates the matrixWorld property.\n     */\n    matrixAutoUpdate = true;\n    /**\n     * If set, then the renderer checks every frame if the object and its children need matrix updates.\n     * When it isn't, then you have to maintain all matrices in the object and its children yourself.\n     */\n    matrixWorldAutoUpdate = true;\n    /**\n     *\n     */\n    constructor(localTransform) {\n        this.position = new THREE.Vector3().fromArray(localTransform.position);\n        this.quaternion = new THREE.Quaternion().fromArray(localTransform.orientation);\n        this.up = new THREE.Vector3(0, 1, 0);\n    }\n    /**\n     *\n     */\n    updateMatrix() {\n        this.matrix.compose(this.position, this.quaternion, this.scale);\n        this.matrixWorldNeedsUpdate = true;\n    }\n    /**\n     *\n     */\n    updateMatrixWorld(force = false) {\n        if (this.matrixAutoUpdate)\n            this.updateMatrix();\n        if (this.matrixWorldNeedsUpdate || force) {\n            if (this.matrixWorldAutoUpdate === true) {\n                this.matrixWorld.copy(this.matrix);\n            }\n            this.matrixWorldNeedsUpdate = false;\n        }\n        this.matrixWorldInverse.copy(this.matrixWorld).invert();\n    }\n    /**\n     *\n     */\n    lookAt(target) {\n        //const parent = this.parent;\n        this.updateMatrixWorld();\n        _position.setFromMatrixPosition(this.matrixWorld);\n        _m1.lookAt(_position, target, this.up);\n        this.quaternion.setFromRotationMatrix(_m1);\n        /*if ( parent ) {\n\n            _m1.extractRotation( parent.matrixWorld );\n            _q1.setFromRotationMatrix( _m1 );\n            this.quaternion.premultiply( _q1.invert() );\n\n        }*/\n    }\n}\n/**\n *\n */\nclass PerspectiveCamera extends Camera {\n    lens;\n    /**\n     *\n     */\n    constructor(localTransform, lens, aspectRatio) {\n        super(localTransform);\n        this.lens = lens;\n        this.updateProjectionMatrix(aspectRatio);\n    }\n    /**\n     *\n     */\n    updateProjectionMatrix(aspectRatio) {\n        const near = this.lens.nearPlane;\n        let top = near * Math.tan(DEG2RAD * 0.5 * this.lens.fovy) / this.zoom;\n        let height = 2 * top;\n        let width = aspectRatio * height;\n        let left = -0.5 * width;\n        this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.lens.farPlane);\n        this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    }\n}\nclass OrthographicCamera extends Camera {\n    lens;\n    left = 0;\n    right = 0;\n    top = 0;\n    bottom = 0;\n    /**\n     *\n     */\n    constructor(localTransform, lens, aspectRatio) {\n        super(localTransform);\n        this.lens = lens;\n        this.updateProjectionMatrix(aspectRatio);\n    }\n    /**\n     *\n     */\n    /**\n     *\n     */\n    updateProjectionMatrix(aspectRatio) {\n        this.left = -aspectRatio * this.lens.zoomFactor[0];\n        this.right = aspectRatio * this.lens.zoomFactor[0];\n        this.top = this.lens.zoomFactor[1];\n        this.bottom = -this.lens.zoomFactor[1];\n        const dx = (this.right - this.left) / (2 * this.zoom);\n        const dy = (this.top - this.bottom) / (2 * this.zoom);\n        const cx = (this.right + this.left) / 2;\n        const cy = (this.top + this.bottom) / 2;\n        let _left = cx - dx;\n        let _right = cx + dx;\n        let _top = cy + dy;\n        let _bottom = cy - dy;\n        this.projectionMatrix.makeOrthographic(_left, _right, _top, _bottom, this.lens.zNear, this.lens.zFar);\n        this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    }\n}\n/**\n *\n */\nfunction isPerspectiveCamera(camera) {\n    return camera instanceof PerspectiveCamera;\n}\n/**\n *\n */\nfunction isOrthographicCamera(camera) {\n    return camera instanceof OrthographicCamera;\n}\n\nfunction notSupportedInOrthographicCamera(camera, message) {\n    if (isOrthographicCamera(camera)) {\n        console.warn(`${message} is not supported in OrthographicCamera`);\n        return true;\n    }\n    return false;\n}\n\nlet EventDispatcher$1 = class EventDispatcher {\n    _listeners = {};\n    /**\n     * Adds the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        const listeners = this._listeners;\n        if (listeners[type] === undefined)\n            listeners[type] = [];\n        if (listeners[type].indexOf(listener) === -1)\n            listeners[type].push(listener);\n    }\n    /**\n     * Presence of the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    hasEventListener(type, listener) {\n        const listeners = this._listeners;\n        return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    }\n    /**\n     * Removes the specified event listener\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[type];\n        if (listenerArray !== undefined) {\n            const index = listenerArray.indexOf(listener);\n            if (index !== -1)\n                listenerArray.splice(index, 1);\n        }\n    }\n    /**\n     * Removes all event listeners\n     * @param type event name\n     * @category Methods\n     */\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = {};\n            return;\n        }\n        if (Array.isArray(this._listeners[type]))\n            this._listeners[type].length = 0;\n    }\n    /**\n     * Fire an event type.\n     * @param event DispatcherEvent\n     * @category Methods\n     */\n    dispatchEvent(event) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[event.type];\n        if (listenerArray !== undefined) {\n            event.target = this;\n            const array = listenerArray.slice(0);\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i].call(this, event);\n            }\n        }\n    }\n};\n\nconst VERSION = '0.4.10'; // will be replaced with `version` in package.json during the build process.\nconst TOUCH_DOLLY_FACTOR = 1 / 8;\nconst isMac = /Mac/.test(globalThis?.navigator?.platform);\nconst _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\nconst _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\nconst _v2 = new THREE.Vector2();\nconst _v3A = new THREE.Vector3();\nconst _v3B = new THREE.Vector3();\nconst _v3C = new THREE.Vector3();\nconst _cameraDirection = new THREE.Vector3();\nconst _xColumn = new THREE.Vector3();\nconst _yColumn = new THREE.Vector3();\nconst _zColumn = new THREE.Vector3();\nconst _deltaTarget = new THREE.Vector3();\nconst _deltaOffset = new THREE.Vector3();\nconst _sphericalA = new THREE.Spherical();\nconst _sphericalB = new THREE.Spherical();\nconst _box3B = new THREE.Box3();\nconst _quaternionA = new THREE.Quaternion();\nconst _quaternionB = new THREE.Quaternion();\nclass CameraControls extends EventDispatcher$1 {\n    /**\n     * list all ACTIONs\n     * @category Statics\n     */\n    static get ACTION() {\n        return ACTION;\n    }\n    /**\n     * Minimum vertical angle in radians.\n     * The angle has to be between `0` and `.maxPolarAngle` inclusive.\n     * The default value is `0`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.maxPolarAngle = 0;\n     * ```\n     * @category Properties\n     */\n    minPolarAngle = 0; // radians\n    /**\n     * Maximum vertical angle in radians.\n     * The angle has to be between `.maxPolarAngle` and `Math.PI` inclusive.\n     * The default value is `Math.PI`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.maxPolarAngle = Math.PI;\n     * ```\n     * @category Properties\n     */\n    maxPolarAngle = Math.PI; // radians\n    /**\n     * Minimum horizontal angle in radians.\n     * The angle has to be less than `.maxAzimuthAngle`.\n     * The default value is `- Infinity`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.minAzimuthAngle = - Infinity;\n     * ```\n     * @category Properties\n     */\n    minAzimuthAngle = -Infinity; // radians\n    /**\n     * Maximum horizontal angle in radians.\n     * The angle has to be greater than `.minAzimuthAngle`.\n     * The default value is `Infinity`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.maxAzimuthAngle = Infinity;\n     * ```\n     * @category Properties\n     */\n    maxAzimuthAngle = Infinity; // radians\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    /**\n     * Minimum distance for dolly. The value must be higher than `0`. Default is `Number.EPSILON`.\n     * PerspectiveCamera only.\n     * @category Properties\n     */\n    minDistance = Number.EPSILON;\n    /**\n     * Maximum distance for dolly. The value must be higher than `minDistance`. Default is `Infinity`.\n     * PerspectiveCamera only.\n     * @category Properties\n     */\n    maxDistance = Infinity;\n    /**\n     * `true` to enable Infinity Dolly for wheel and pinch. Use this with `minDistance` and `maxDistance`\n     * If the Dolly distance is less (or over) than the `minDistance` (or `maxDistance`), `infinityDolly` will keep the distance and pushes the target position instead.\n     * @category Properties\n     */\n    infinityDolly = false;\n    /**\n     * Minimum camera zoom.\n     * @category Properties\n     */\n    minZoom = 0.01;\n    /**\n     * Maximum camera zoom.\n     * @category Properties\n     */\n    maxZoom = Infinity;\n    /**\n     * Approximate time in seconds to reach the target. A smaller value will reach the target faster.\n     * @category Properties\n     */\n    smoothTime = 0.25;\n    /**\n     * the smoothTime while dragging\n     * @category Properties\n     */\n    draggingSmoothTime = 0.125;\n    /**\n     * Max transition speed in unit-per-seconds\n     * @category Properties\n     */\n    maxSpeed = Infinity;\n    /**\n     * Speed of azimuth (horizontal) rotation.\n     * @category Properties\n     */\n    azimuthRotateSpeed = 1.0;\n    /**\n     * Speed of polar (vertical) rotation.\n     * @category Properties\n     */\n    polarRotateSpeed = 1.0;\n    /**\n     * Speed of mouse-wheel dollying.\n     * @category Properties\n     */\n    dollySpeed = 1.0;\n    /**\n     * `true` to invert direction when dollying or zooming via drag\n     * @category Properties\n     */\n    dollyDragInverted = false;\n    /**\n     * Speed of drag for truck and pedestal.\n     * @category Properties\n     */\n    truckSpeed = 2.0;\n    /**\n     * Scale of the truck speed with target distance.\n     * @category Properties\n     */\n    scaleTruckSpeed = true;\n    /**\n     * `true` to enable Dolly-in to the mouse cursor coords.\n     * @category Properties\n     */\n    dollyToCursor = false;\n    /**\n     * @category Properties\n     */\n    dragToOffset = false;\n    /**\n     * Friction ratio of the boundary.\n     * @category Properties\n     */\n    boundaryFriction = 0.0;\n    /**\n     * Controls how soon the `rest` event fires as the camera slows.\n     * @category Properties\n     */\n    restThreshold = 0.01;\n    // button configs\n    /**\n     * User's mouse input config.\n     *\n     * | button to assign      | behavior |\n     * | --------------------- | -------- |\n     * | `mouseButtons.left`   | `CameraControls.ACTION.ROTATE`* \\| `CameraControls.ACTION.TRUCK` \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY` \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\n     * | `mouseButtons.right`  | `CameraControls.ACTION.ROTATE` \\| `CameraControls.ACTION.TRUCK`* \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY` \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\n     * | `mouseButtons.wheel` \u00B9 | `CameraControls.ACTION.ROTATE` \\| `CameraControls.ACTION.TRUCK` \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY` \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\n     * | `mouseButtons.middle` \u00B2 | `CameraControls.ACTION.ROTATE` \\| `CameraControls.ACTION.TRUCK` \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY`* \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\n     *\n     * 1. Mouse wheel event for scroll \"up/down\" on mac \"up/down/left/right\"\n     * 2. Mouse click on wheel event \"button\"\n     * - \\* is the default.\n     * - The default of `mouseButtons.wheel` is:\n     *   - `DOLLY` for Perspective camera.\n     *   - `ZOOM` for Orthographic camera, and can't set `DOLLY`.\n     * @category Properties\n     */\n    mouseButtons;\n    /**\n     * User's touch input config.\n     *\n     * | fingers to assign     | behavior |\n     * | --------------------- | -------- |\n     * | `touches.one` | `CameraControls.ACTION.TOUCH_ROTATE`* \\| `CameraControls.ACTION.TOUCH_TRUCK` \\| `CameraControls.ACTION.TOUCH_OFFSET` \\| `CameraControls.ACTION.DOLLY` | `CameraControls.ACTION.ZOOM` | `CameraControls.ACTION.NONE` |\n     * | `touches.two` | `ACTION.TOUCH_DOLLY_TRUCK` \\| `ACTION.TOUCH_DOLLY_OFFSET` \\| `ACTION.TOUCH_DOLLY_ROTATE` \\| `ACTION.TOUCH_ZOOM_TRUCK` \\| `ACTION.TOUCH_ZOOM_OFFSET` \\| `ACTION.TOUCH_ZOOM_ROTATE` \\| `ACTION.TOUCH_DOLLY` \\| `ACTION.TOUCH_ZOOM` \\| `CameraControls.ACTION.TOUCH_ROTATE` \\| `CameraControls.ACTION.TOUCH_TRUCK` \\| `CameraControls.ACTION.TOUCH_OFFSET` \\| `CameraControls.ACTION.NONE` |\n     * | `touches.three` | `ACTION.TOUCH_DOLLY_TRUCK` \\| `ACTION.TOUCH_DOLLY_OFFSET` \\| `ACTION.TOUCH_DOLLY_ROTATE` \\| `ACTION.TOUCH_ZOOM_TRUCK` \\| `ACTION.TOUCH_ZOOM_OFFSET` \\| `ACTION.TOUCH_ZOOM_ROTATE` \\| `CameraControls.ACTION.TOUCH_ROTATE` \\| `CameraControls.ACTION.TOUCH_TRUCK` \\| `CameraControls.ACTION.TOUCH_OFFSET` \\| `CameraControls.ACTION.NONE` |\n     *\n     * - \\* is the default.\n     * - The default of `touches.two` and `touches.three` is:\n     *   - `TOUCH_DOLLY_TRUCK` for Perspective camera.\n     *   - `TOUCH_ZOOM_TRUCK` for Orthographic camera, and can't set `TOUCH_DOLLY_TRUCK` and `TOUCH_DOLLY`.\n     * @category Properties\n     */\n    touches;\n    /**\n     * Force cancel user dragging.\n     * @category Methods\n     */\n    // cancel will be overwritten in the constructor.\n    cancel = () => { };\n    /**\n     * Still an experimental feature.\n     * This could change at any time.\n     * @category Methods\n     */\n    lockPointer;\n    /**\n     * Still an experimental feature.\n     * This could change at any time.\n     * @category Methods\n     */\n    unlockPointer;\n    _enabled = true;\n    _camera;\n    _yAxisUpSpace;\n    _yAxisUpSpaceInverse;\n    _state = ACTION.NONE;\n    _aspectRatio;\n    _domElement;\n    _viewport = null;\n    // the location of focus, where the object orbits around\n    _target;\n    _targetEnd;\n    _focalOffset;\n    _focalOffsetEnd;\n    // rotation and dolly distance\n    _spherical;\n    _sphericalEnd;\n    _lastDistance;\n    _zoom;\n    _zoomEnd;\n    _lastZoom;\n    // reset\n    _cameraUp0;\n    _target0;\n    _position0;\n    _zoom0;\n    _focalOffset0;\n    _dollyControlCoord;\n    _changedDolly = 0;\n    _changedZoom = 0;\n    // collisionTest uses nearPlane. ( PerspectiveCamera only )\n    _nearPlaneCorners;\n    _hasRested = true;\n    _boundary;\n    _boundaryEnclosesCamera = false;\n    _needsUpdate = true;\n    _updatedLastTime = false;\n    _elementRect = new DOMRect();\n    _isDragging = false;\n    _dragNeedsUpdate = true;\n    _activePointers = [];\n    _lockedPointer = null;\n    _interactiveArea = new DOMRect(0, 0, 1, 1);\n    // Use draggingSmoothTime over smoothTime while true.\n    // set automatically true on user-dragging start.\n    // set automatically false on programmable methods call.\n    _isUserControllingRotate = false;\n    _isUserControllingDolly = false;\n    _isUserControllingTruck = false;\n    _isUserControllingOffset = false;\n    _isUserControllingZoom = false;\n    _lastDollyDirection = DOLLY_DIRECTION.NONE;\n    // velocities for smoothDamp\n    _thetaVelocity = { value: 0 };\n    _phiVelocity = { value: 0 };\n    _radiusVelocity = { value: 0 };\n    _targetVelocity = new THREE.Vector3();\n    _focalOffsetVelocity = new THREE.Vector3();\n    _zoomVelocity = { value: 0 };\n    _livelink_viewport;\n    /**\n     * Creates a `CameraControls` instance.\n     *\n     * Note:\n     * You **must install** three.js before using camera-controls. see [#install](#install)\n     * Not doing so will lead to runtime errors (`undefined` references to THREE).\n     *\n     * e.g.\n     * ```\n     * CameraControls.install( { THREE } );\n     * const cameraControls = new CameraControls( camera, domElement );\n     * ```\n     *\n     * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n     * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n     * @category Constructor\n     */\n    constructor(localTransform, lens, viewport) {\n        super();\n        const isPerspective = 'fovy' in lens;\n        this._aspectRatio = viewport.aspect_ratio;\n        this._livelink_viewport = viewport;\n        this._camera = isPerspective ? new PerspectiveCamera(localTransform, lens, this._aspectRatio) : new OrthographicCamera(localTransform, lens, this._aspectRatio);\n        this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();\n        this._state = ACTION.NONE;\n        // the location\n        this._target = new THREE.Vector3();\n        this._targetEnd = this._target.clone();\n        this._focalOffset = new THREE.Vector3();\n        this._focalOffsetEnd = this._focalOffset.clone();\n        // rotation\n        this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));\n        this._sphericalEnd = this._spherical.clone();\n        this._lastDistance = this._spherical.radius;\n        this._zoom = this._camera.zoom;\n        this._zoomEnd = this._zoom;\n        this._lastZoom = this._zoom;\n        // collisionTest uses nearPlane.s\n        this._nearPlaneCorners = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n        ];\n        this._updateNearPlaneCorners();\n        // Target cannot move outside of this box\n        this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));\n        // reset\n        this._cameraUp0 = this._camera.up.clone();\n        this._target0 = this._target.clone();\n        this._position0 = this._camera.position.clone();\n        this._zoom0 = this._zoom;\n        this._focalOffset0 = this._focalOffset.clone();\n        this._dollyControlCoord = new THREE.Vector2();\n        // configs\n        this.mouseButtons = {\n            left: ACTION.ROTATE,\n            middle: ACTION.DOLLY,\n            right: ACTION.TRUCK,\n            wheel: isPerspectiveCamera(this._camera) ? ACTION.DOLLY :\n                isOrthographicCamera(this._camera) ? ACTION.ZOOM :\n                    ACTION.NONE,\n        };\n        this.touches = {\n            one: ACTION.TOUCH_ROTATE,\n            two: isPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK :\n                isOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK :\n                    ACTION.NONE,\n            three: ACTION.TOUCH_TRUCK,\n        };\n        const dragStartPosition = new THREE.Vector2();\n        const lastDragPosition = new THREE.Vector2();\n        const dollyStart = new THREE.Vector2();\n        const onPointerDown = (event) => {\n            if (!this._enabled || !this._domElement)\n                return;\n            if (event.target !== this._domElement && this._livelink_viewport.overlay_dom_elements.every(el => !el.contains(event.target)))\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            // Don't call `event.preventDefault()` on the pointerdown event\n            // to keep receiving pointermove evens outside dragging iframe\n            // https://taye.me/blog/tips/2015/11/16/mouse-drag-outside-iframe/\n            const mouseButton = event.pointerType !== 'mouse' ? null :\n                (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                    (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\n                        (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\n                            null;\n            if (mouseButton !== null) {\n                const zombiePointer = this._findPointerByMouseButton(mouseButton);\n                zombiePointer && this._disposePointer(zombiePointer);\n            }\n            if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer)\n                return;\n            const pointer = {\n                pointerId: event.pointerId,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton,\n            };\n            this._activePointers.push(pointer);\n            event.stopPropagation();\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            this._isDragging = true;\n            startDragging(event);\n        };\n        const onPointerMove = (event) => {\n            if (event.cancelable)\n                event.preventDefault();\n            const pointerId = event.pointerId;\n            const pointer = this._lockedPointer || this._findPointerById(pointerId);\n            if (!pointer)\n                return;\n            pointer.clientX = event.clientX;\n            pointer.clientY = event.clientY;\n            pointer.deltaX = event.movementX;\n            pointer.deltaY = event.movementY;\n            this._state = 0;\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if ((!this._isDragging && this._lockedPointer) ||\n                    this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            dragging();\n        };\n        const onPointerUp = (event) => {\n            const pointer = this._findPointerById(event.pointerId);\n            if (pointer && pointer === this._lockedPointer)\n                return;\n            pointer && this._disposePointer(pointer);\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 0:\n                        this._state = ACTION.NONE;\n                        break;\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                this._state = ACTION.NONE;\n            }\n            endDragging();\n        };\n        let lastScrollTimeStamp = -1;\n        const onMouseWheel = (event) => {\n            if (!this._domElement)\n                return;\n            if (!this._enabled || this.mouseButtons.wheel === ACTION.NONE)\n                return;\n            if (event.target !== this._domElement && this._livelink_viewport.overlay_dom_elements.every(el => !el.contains(event.target)))\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            if (this.dollyToCursor ||\n                this.mouseButtons.wheel === ACTION.ROTATE ||\n                this.mouseButtons.wheel === ACTION.TRUCK) {\n                const now = performance.now();\n                // only need to fire this at scroll start.\n                if (lastScrollTimeStamp - now < 1000)\n                    this._getClientRect(this._elementRect);\n                lastScrollTimeStamp = now;\n            }\n            // Ref: https://github.com/cedricpinson/osgjs/blob/00e5a7e9d9206c06fdde0436e1d62ab7cb5ce853/sources/osgViewer/input/source/InputSourceMouse.js#L89-L103\n            const deltaYFactor = isMac ? -1 : -3;\n            const delta = (event.deltaMode === 1) ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n            const x = this.dollyToCursor ? (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n            const y = this.dollyToCursor ? (event.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n            switch (this.mouseButtons.wheel) {\n                case ACTION.ROTATE: {\n                    this._rotateInternal(event.deltaX, event.deltaY);\n                    this._isUserControllingRotate = true;\n                    break;\n                }\n                case ACTION.TRUCK: {\n                    this._truckInternal(event.deltaX, -event.deltaY, false, false);\n                    this._isUserControllingTruck = true;\n                    break;\n                }\n                case ACTION.SCREEN_PAN: {\n                    this._truckInternal(event.deltaX, -event.deltaY, false, true);\n                    this._isUserControllingTruck = true;\n                    break;\n                }\n                case ACTION.OFFSET: {\n                    this._truckInternal(event.deltaX, event.deltaY, true, false);\n                    this._isUserControllingOffset = true;\n                    break;\n                }\n                case ACTION.DOLLY: {\n                    this._dollyInternal(-delta, x, y);\n                    this._isUserControllingDolly = true;\n                    break;\n                }\n                case ACTION.ZOOM: {\n                    this._zoomInternal(-delta, x, y);\n                    this._isUserControllingZoom = true;\n                    break;\n                }\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const onContextMenu = (event) => {\n            if (!this._domElement || !this._enabled)\n                return;\n            // contextmenu event is fired right after pointerdown\n            // remove attached handlers and active pointer, if interrupted by contextmenu.\n            if (this.mouseButtons.right === CameraControls.ACTION.NONE) {\n                const pointerId = event instanceof PointerEvent ? event.pointerId : 0;\n                const pointer = this._findPointerById(pointerId);\n                pointer && this._disposePointer(pointer);\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        };\n        const startDragging = (event) => {\n            if (!this._enabled)\n                return;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            this._getClientRect(this._elementRect);\n            dragStartPosition.copy(_v2);\n            lastDragPosition.copy(_v2);\n            const isMultiTouch = this._activePointers.length >= 2;\n            if (isMultiTouch) {\n                // 2 finger pinch\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                dollyStart.set(0, distance);\n                // center coords of 2 finger truck\n                const x = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;\n                const y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\n                lastDragPosition.set(x, y);\n            }\n            this._state = 0;\n            if (!event) {\n                if (this._lockedPointer)\n                    this._state = this._state | this.mouseButtons.left;\n            }\n            else if ('pointerType' in event && event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            // stop current movement on drag start\n            // - rotate\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._sphericalEnd.theta = this._spherical.theta;\n                this._sphericalEnd.phi = this._spherical.phi;\n                this._thetaVelocity.value = 0;\n                this._phiVelocity.value = 0;\n            }\n            // - truck and screen-pan\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.SCREEN_PAN) === ACTION.SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_SCREEN_PAN) === ACTION.TOUCH_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN) {\n                this._targetEnd.copy(this._target);\n                this._targetVelocity.set(0, 0, 0);\n            }\n            // - dolly\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {\n                this._sphericalEnd.radius = this._spherical.radius;\n                this._radiusVelocity.value = 0;\n            }\n            // - zoom\n            if ((this._state & ACTION.ZOOM) === ACTION.ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._zoomEnd = this._zoom;\n                this._zoomVelocity.value = 0;\n            }\n            // - offset\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._focalOffsetEnd.copy(this._focalOffset);\n                this._focalOffsetVelocity.set(0, 0, 0);\n            }\n            this.dispatchEvent({ type: 'controlstart' });\n        };\n        const dragging = () => {\n            if (!this._enabled || !this._dragNeedsUpdate)\n                return;\n            this._dragNeedsUpdate = false;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            // When pointer lock is enabled clientX, clientY, screenX, and screenY remain 0.\n            // If pointer lock is enabled, use the Delta directory, and assume active-pointer is not multiple.\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            const lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;\n            const deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2.x;\n            const deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2.y;\n            lastDragPosition.copy(_v2);\n            // rotate\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._rotateInternal(deltaX, deltaY);\n                this._isUserControllingRotate = true;\n            }\n            // mouse dolly or zoom\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.ZOOM) === ACTION.ZOOM) {\n                const dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                const dollyDirection = this.dollyDragInverted ? -1 : 1;\n                if ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {\n                    this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            // touch dolly or zoom\n            if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                const dollyDelta = dollyStart.y - distance;\n                dollyStart.set(0, distance);\n                const dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                    (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                    (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                    (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                    (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {\n                    this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            // truck\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._truckInternal(deltaX, deltaY, false, false);\n                this._isUserControllingTruck = true;\n            }\n            // screen-pan\n            if ((this._state & ACTION.SCREEN_PAN) === ACTION.SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_SCREEN_PAN) === ACTION.TOUCH_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN) {\n                this._truckInternal(deltaX, deltaY, false, true);\n                this._isUserControllingTruck = true;\n            }\n            // offset\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._truckInternal(deltaX, deltaY, true, false);\n                this._isUserControllingOffset = true;\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const endDragging = () => {\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            lastDragPosition.copy(_v2);\n            this._dragNeedsUpdate = false;\n            if (this._activePointers.length === 0 ||\n                (this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer)) {\n                this._isDragging = false;\n            }\n            if (this._activePointers.length === 0 && this._domElement) {\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                this.dispatchEvent({ type: 'controlend' });\n            }\n        };\n        this.lockPointer = () => {\n            if (!this._enabled || !this._domElement)\n                return;\n            this.cancel();\n            // Element.requestPointerLock is allowed to happen without any pointer active - create a faux one for compatibility with controls\n            this._lockedPointer = {\n                pointerId: -1,\n                clientX: 0,\n                clientY: 0,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton: null,\n            };\n            this._activePointers.push(this._lockedPointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.requestPointerLock();\n            this._domElement.ownerDocument.addEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.addEventListener('pointerlockerror', onPointerLockError);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            startDragging();\n        };\n        this.unlockPointer = () => {\n            if (this._lockedPointer !== null) {\n                this._disposePointer(this._lockedPointer);\n                this._lockedPointer = null;\n            }\n            this._domElement?.ownerDocument.exitPointerLock();\n            this._domElement?.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement?.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n            this.cancel();\n        };\n        const onPointerLockChange = () => {\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            if (!isPointerLockActive)\n                this.unlockPointer();\n        };\n        const onPointerLockError = () => {\n            this.unlockPointer();\n        };\n        this._addAllEventListeners = (domElement) => {\n            this._domElement = domElement;\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n            this._domElement.addEventListener('pointerdown', onPointerDown);\n            this._domElement.addEventListener('pointercancel', onPointerUp);\n            this._domElement.addEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.addEventListener('contextmenu', onContextMenu);\n        };\n        this._removeAllEventListeners = () => {\n            if (!this._domElement)\n                return;\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n            this._domElement.removeEventListener('pointerdown', onPointerDown);\n            this._domElement.removeEventListener('pointercancel', onPointerUp);\n            // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener#matching_event_listeners_for_removal\n            // > it's probably wise to use the same values used for the call to `addEventListener()` when calling `removeEventListener()`\n            // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n            // eslint-disable-next-line no-undef\n            this._domElement.removeEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.removeEventListener('contextmenu', onContextMenu);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n        };\n        this.cancel = () => {\n            if (this._state === ACTION.NONE)\n                return;\n            this._state = ACTION.NONE;\n            this._activePointers.length = 0;\n            endDragging();\n        };\n        this.connect(viewport.dom_element);\n        this.update(0);\n    }\n    /**\n     * Camera local position.\n     */\n    get position() {\n        return this._camera.position;\n    }\n    /**\n     * Camera local orientation.\n     */\n    get orientation() {\n        return this._camera.quaternion;\n    }\n    /**\n     * Camera forward vector.\n     */\n    get direction() {\n        return this._getCameraDirection(new THREE.Vector3()).normalize();\n    }\n    /**\n     * Updates the camera local position and local orientation.\n     */\n    updateTransform(position, orientation) {\n        this._camera.position.fromArray(position);\n        this._camera.quaternion.fromArray(orientation);\n        this.applyCameraUp();\n        this._needsUpdate = true;\n    }\n    /**\n     *\n     */\n    set aspectRatio(aspectRatio) {\n        this._aspectRatio = aspectRatio;\n        this._camera.updateProjectionMatrix(this._aspectRatio);\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether or not the controls are enabled.\n     * `false` to disable user dragging/touch-move, but all methods works.\n     * @category Properties\n     */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        if (!this._domElement)\n            return;\n        if (enabled) {\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n        }\n        else {\n            this.cancel();\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n        }\n    }\n    /**\n     * Returns `true` if the controls are active updating.\n     * readonly value.\n     * @category Properties\n     */\n    get active() {\n        return !this._hasRested;\n    }\n    /**\n     * Getter for the current `ACTION`.\n     * readonly value.\n     * @category Properties\n     */\n    get currentAction() {\n        return this._state;\n    }\n    /**\n     * get/set Current distance.\n     * @category Properties\n     */\n    get distance() {\n        return this._spherical.radius;\n    }\n    set distance(distance) {\n        if (this._spherical.radius === distance &&\n            this._sphericalEnd.radius === distance)\n            return;\n        this._spherical.radius = distance;\n        this._sphericalEnd.radius = distance;\n        this._needsUpdate = true;\n    }\n    // horizontal angle\n    /**\n     * get/set the azimuth angle (horizontal) in radians.\n     * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n     * @category Properties\n     */\n    get azimuthAngle() {\n        return this._spherical.theta;\n    }\n    set azimuthAngle(azimuthAngle) {\n        if (this._spherical.theta === azimuthAngle &&\n            this._sphericalEnd.theta === azimuthAngle)\n            return;\n        this._spherical.theta = azimuthAngle;\n        this._sphericalEnd.theta = azimuthAngle;\n        this._needsUpdate = true;\n    }\n    // vertical angle\n    /**\n     * get/set the polar angle (vertical) in radians.\n     * @category Properties\n     */\n    get polarAngle() {\n        return this._spherical.phi;\n    }\n    set polarAngle(polarAngle) {\n        if (this._spherical.phi === polarAngle &&\n            this._sphericalEnd.phi === polarAngle)\n            return;\n        this._spherical.phi = polarAngle;\n        this._sphericalEnd.phi = polarAngle;\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether camera position should be enclosed in the boundary or not.\n     * @category Properties\n     */\n    get boundaryEnclosesCamera() {\n        return this._boundaryEnclosesCamera;\n    }\n    set boundaryEnclosesCamera(boundaryEnclosesCamera) {\n        this._boundaryEnclosesCamera = boundaryEnclosesCamera;\n        this._needsUpdate = true;\n    }\n    /**\n     * Set drag-start, touches and wheel enable area in the domElement.\n     * each values are between `0` and `1` inclusive, where `0` is left/top and `1` is right/bottom of the screen.\n     * e.g. `{ x: 0, y: 0, width: 1, height: 1 }` for entire area.\n     * @category Properties\n     */\n    set interactiveArea(interactiveArea) {\n        this._interactiveArea.width = clamp(interactiveArea.width, 0, 1);\n        this._interactiveArea.height = clamp(interactiveArea.height, 0, 1);\n        this._interactiveArea.x = clamp(interactiveArea.x, 0, 1 - this._interactiveArea.width);\n        this._interactiveArea.y = clamp(interactiveArea.y, 0, 1 - this._interactiveArea.height);\n    }\n    /**\n     * Adds the specified event listener.\n     * Applicable event types (which is `K`) are:\n     * | Event name          | Timing |\n     * | ------------------- | ------ |\n     * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. \u00B9 |\n     * | `'control'`         | When the user controls the camera (dragging). |\n     * | `'controlend'`      | When the user ends to control the camera. \u00B9 |\n     * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n     * | `'update'`          | When the camera position is updated. |\n     * | `'wake'`            | When the camera starts moving. |\n     * | `'rest'`            | When the camera movement is below `.restThreshold` \u00B2. |\n     * | `'sleep'`           | When the camera end moving. |\n     *\n     * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n     * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n     *\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        super.addEventListener(type, listener);\n    }\n    /**\n     * Removes the specified event listener\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        super.removeEventListener(type, listener);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n     * Every value is added to the current value.\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotate(azimuthAngle, polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateAzimuthTo(azimuthAngle, enableTransition = false) {\n        return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);\n    }\n    /**\n     * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotatePolarTo(polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n     * Camera view will rotate over the orbit pivot absolutely:\n     *\n     * azimuthAngle\n     * ```\n     *       0\u00BA\n     *         \\\n     * 90\u00BA -----+----- -90\u00BA\n     *           \\\n     *           180\u00BA\n     * ```\n     * | direction | angle                  |\n     * | --------- | ---------------------- |\n     * | front     | 0\u00BA                     |\n     * | left      | 90\u00BA (`Math.PI / 2`)    |\n     * | right     | -90\u00BA (`- Math.PI / 2`) |\n     * | back      | 180\u00BA (`Math.PI`)       |\n     *\n     * polarAngle\n     * ```\n     *     180\u00BA\n     *      |\n     *      90\u00BA\n     *      |\n     *      0\u00BA\n     * ```\n     * | direction            | angle                  |\n     * | -------------------- | ---------------------- |\n     * | top/sky              | 180\u00BA (`Math.PI`)       |\n     * | horizontal from view | 90\u00BA (`Math.PI / 2`)    |\n     * | bottom/floor         | 0\u00BA                     |\n     *\n     * @param azimuthAngle Azimuth rotate angle to. In radian.\n     * @param polarAngle Polar rotate angle to. In radian.\n     * @param enableTransition  Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateTo(azimuthAngle, polarAngle, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        const theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\n        const phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\n        this._sphericalEnd.theta = theta;\n        this._sphericalEnd.phi = phi;\n        this._sphericalEnd.makeSafe();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.theta = this._sphericalEnd.theta;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in/out camera position.\n     * @param distance Distance of dollyIn. Negative number for dollyOut.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dolly(distance, enableTransition = false) {\n        return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\n    }\n    /**\n     * Dolly in/out camera position to given distance.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyTo(distance, enableTransition = false) {\n        this._isUserControllingDolly = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        return this._dollyToNoClamp(clamp(distance, this.minDistance, this.maxDistance), enableTransition);\n    }\n    _dollyToNoClamp(distance, enableTransition = false) {\n        this._sphericalEnd.radius = distance;\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in, but does not change the distance between the target and the camera, and moves the target position instead.\n     * Specify a negative value for dolly out.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyInFixed(distance, enableTransition = false) {\n        this._targetEnd.add(this._getCameraDirection(_cameraDirection).multiplyScalar(distance));\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Zoom in/out camera. The value is added to camera zoom.\n     * Limits set with `.minZoom` and `.maxZoom`\n     * @param zoomStep zoom scale\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    zoom(zoomStep, enableTransition = false) {\n        return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\n    }\n    /**\n     * Zoom in/out camera to given scale. The value overwrites camera zoom.\n     * Limits set with .minZoom and .maxZoom\n     * @param zoom\n     * @param enableTransition\n     * @category Methods\n     */\n    zoomTo(zoom, enableTransition = false) {\n        this._isUserControllingZoom = false;\n        this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._zoom = this._zoomEnd;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);\n        this._changedZoom = 0;\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * @deprecated `pan()` has been renamed to `truck()`\n     * @category Methods\n     */\n    pan(x, y, enableTransition = false) {\n        console.warn('`pan` has been renamed to `truck`');\n        return this.truck(x, y, enableTransition);\n    }\n    /**\n     * Truck and pedestal camera using current azimuthal angle\n     * @param x Horizontal translate amount\n     * @param y Vertical translate amount\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    truck(x, y, enableTransition = false) {\n        this._camera.updateMatrix();\n        _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n        _xColumn.multiplyScalar(x);\n        _yColumn.multiplyScalar(-y);\n        const offset = _v3A.copy(_xColumn).add(_yColumn);\n        const to = _v3B.copy(this._targetEnd).add(offset);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move forward / backward.\n     * @param distance Amount to move forward / backward. Negative value to move backward\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    forward(distance, enableTransition = false) {\n        _v3A.setFromMatrixColumn(this._camera.matrix, 0);\n        _v3A.crossVectors(this._camera.up, _v3A);\n        _v3A.multiplyScalar(distance);\n        const to = _v3B.copy(this._targetEnd).add(_v3A);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move up / down.\n     * @param height Amount to move up / down. Negative value to move down\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    elevate(height, enableTransition = false) {\n        _v3A.copy(this._camera.up).multiplyScalar(height);\n        return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);\n    }\n    /**\n     * Move target position to given point.\n     * @param x x coord to move center position\n     * @param y y coord to move center position\n     * @param z z coord to move center position\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    moveTo(x, y, z, enableTransition = false) {\n        this._isUserControllingTruck = false;\n        const offset = _v3A.set(x, y, z).sub(this._targetEnd);\n        this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Look in the given point direction.\n     * @param x point x.\n     * @param y point y.\n     * @param z point z.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @returns Transition end promise\n     * @category Methods\n     */\n    lookInDirectionOf(x, y, z, enableTransition = false) {\n        const point = _v3A.set(x, y, z);\n        const direction = point.sub(this._targetEnd).normalize();\n        const position = direction.multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);\n        return this.setPosition(position.x, position.y, position.z, enableTransition);\n    }\n    /**\n     * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n     * set `cover: true` to fill enter screen.\n     * e.g.\n     * ```\n     * cameraControls.fitToBox( myMesh );\n     * ```\n     * @param aabb Axis aligned bounding box to fit the view.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @param options `<object>` \\\\{ cover: `boolean`, paddingTop: `number`, paddingLeft: `number`, paddingBottom: `number`, paddingRight: `number` \\\\}\n     * @returns Transition end promise\n     * @category Methods\n     */\n    fitToBox(aabb, enableTransition, { cover = false, paddingLeft = 0, paddingRight = 0, paddingBottom = 0, paddingTop = 0 } = {}) {\n        const promises = [];\n        if (aabb.isEmpty()) {\n            console.warn('camera-controls: fitTo() cannot be used with an empty box. Aborting');\n            Promise.resolve();\n        }\n        // round to closest axis ( forward | backward | right | left | top | bottom )\n        const theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\n        const phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\n        promises.push(this.rotateTo(theta, phi, enableTransition));\n        const normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\n        const rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\n        const viewFromPolar = approxEquals(Math.abs(normal.y), 1);\n        if (viewFromPolar) {\n            rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\n        }\n        rotation.multiply(this._yAxisUpSpaceInverse);\n        // make oriented bounding box\n        const bb = _box3B.makeEmpty();\n        // left bottom back corner\n        _v3B.copy(aabb.min).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom back corner\n        _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top back corner\n        _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top back corner\n        _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left bottom front corner\n        _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom front corner\n        _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top front corner\n        _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top front corner\n        _v3B.copy(aabb.max).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // add padding\n        bb.min.x -= paddingLeft;\n        bb.min.y -= paddingBottom;\n        bb.max.x += paddingRight;\n        bb.max.y += paddingTop;\n        rotation.setFromUnitVectors(_AXIS_Z, normal);\n        if (viewFromPolar) {\n            rotation.premultiply(_quaternionB.invert());\n        }\n        rotation.premultiply(this._yAxisUpSpace);\n        const bbSize = bb.getSize(_v3A);\n        const center = bb.getCenter(_v3B).applyQuaternion(rotation);\n        if (isPerspectiveCamera(this._camera)) {\n            const distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.dollyTo(distance, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const width = camera.right - camera.left;\n            const height = camera.top - camera.bottom;\n            const zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.zoomTo(zoom, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        return Promise.all(promises);\n    }\n    /**\n     * Fit the viewport to the sphere or the bounding sphere of the object.\n     * @param boundingSphere\n     * @param enableTransition\n     * @category Methods\n     */\n    fitToSphere(boundingSphere, enableTransition) {\n        const promises = [];\n        promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));\n        if (isPerspectiveCamera(this._camera)) {\n            const distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\n            promises.push(this.dollyTo(distanceToFit, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const width = this._camera.right - this._camera.left;\n            const height = this._camera.top - this._camera.bottom;\n            const diameter = 2 * boundingSphere.radius;\n            const zoom = Math.min(width / diameter, height / diameter);\n            promises.push(this.zoomTo(zoom, enableTransition));\n        }\n        promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        return Promise.all(promises);\n    }\n    /**\n     * Look at the `target` from the `position`.\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const target = _v3B.set(targetX, targetY, targetZ);\n        const position = _v3A.set(positionX, positionY, positionZ);\n        this._targetEnd.copy(target);\n        this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Similar to setLookAt, but it interpolates between two states.\n     * @param positionAX\n     * @param positionAY\n     * @param positionAZ\n     * @param targetAX\n     * @param targetAY\n     * @param targetAZ\n     * @param positionBX\n     * @param positionBY\n     * @param positionBZ\n     * @param targetBX\n     * @param targetBY\n     * @param targetBZ\n     * @param t\n     * @param enableTransition\n     * @category Methods\n     */\n    lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const targetA = _v3A.set(targetAX, targetAY, targetAZ);\n        const positionA = _v3B.set(positionAX, positionAY, positionAZ);\n        _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\n        const targetB = _v3C.set(targetBX, targetBY, targetBZ);\n        const positionB = _v3B.set(positionBX, positionBY, positionBZ);\n        _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\n        this._targetEnd.copy(targetA.lerp(targetB, t)); // tricky\n        const deltaTheta = _sphericalB.theta - _sphericalA.theta;\n        const deltaPhi = _sphericalB.phi - _sphericalA.phi;\n        const deltaRadius = _sphericalB.radius - _sphericalA.radius;\n        this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set angle and distance by given position.\n     * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setPosition(positionX, positionY, positionZ, enableTransition = false) {\n        return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\n    }\n    /**\n     * Set the target position where gaze at.\n     * An alias of `setLookAt()`, without position change. Thus keep the same position.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setTarget(targetX, targetY, targetZ, enableTransition = false) {\n        const pos = this.getPosition(_v3A);\n        const promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);\n        // see https://github.com/yomotsu/camera-controls/issues/335\n        this._sphericalEnd.phi = clamp(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle);\n        return promise;\n    }\n    /**\n     * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n     * @param x\n     * @param y\n     * @param z\n     * @param enableTransition\n     * @category Methods\n     */\n    setFocalOffset(x, y, z, enableTransition = false) {\n        this._isUserControllingOffset = false;\n        this._focalOffsetEnd.set(x, y, z);\n        this._needsUpdate = true;\n        if (!enableTransition)\n            this._focalOffset.copy(this._focalOffsetEnd);\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) &&\n                approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) &&\n                approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set orbit point without moving the camera.\n     * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @category Methods\n     */\n    setOrbitPoint(targetX, targetY, targetZ) {\n        this._camera.updateMatrixWorld();\n        _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);\n        _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n        const position = _v3A.set(targetX, targetY, targetZ);\n        const distance = position.distanceTo(this._camera.position);\n        const cameraToPoint = position.sub(this._camera.position);\n        _xColumn.multiplyScalar(cameraToPoint.x);\n        _yColumn.multiplyScalar(cameraToPoint.y);\n        _zColumn.multiplyScalar(cameraToPoint.z);\n        _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n        _v3A.z = _v3A.z + distance;\n        this.dollyTo(distance, false);\n        this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);\n        this.moveTo(targetX, targetY, targetZ, false);\n    }\n    /**\n     * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n     * @param box3\n     * @category Methods\n     */\n    setBoundary(box3) {\n        if (!box3) {\n            this._boundary.min.set(-Infinity, -Infinity, -Infinity);\n            this._boundary.max.set(Infinity, Infinity, Infinity);\n            this._needsUpdate = true;\n            return;\n        }\n        this._boundary.copy(box3);\n        this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n        this._needsUpdate = true;\n    }\n    /**\n     * Set (or unset) the current viewport.\n     * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n     * @param viewportOrX\n     * @param y\n     * @param width\n     * @param height\n     * @category Methods\n     */\n    setViewport(viewportOrX, y, width, height) {\n        if (viewportOrX === null) { // null\n            this._viewport = null;\n            return;\n        }\n        this._viewport = this._viewport || new THREE.Vector4();\n        if (typeof viewportOrX === 'number') { // number\n            this._viewport.set(viewportOrX, y, width, height);\n        }\n        else { // Vector4\n            this._viewport.copy(viewportOrX);\n        }\n    }\n    /**\n     * Calculate the distance to fit the box.\n     * @param width box width\n     * @param height box height\n     * @param depth box depth\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitBox(width, height, depth, cover = false) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitBox'))\n            return this._spherical.radius;\n        const boundingRectAspect = width / height;\n        const fov = this._camera.lens.fovy * DEG2RAD;\n        const aspect = this._aspectRatio;\n        const heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;\n        return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\n    }\n    /**\n     * Calculate the distance to fit the sphere.\n     * @param radius sphere radius\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitSphere(radius) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitSphere'))\n            return this._spherical.radius;\n        // https://stackoverflow.com/a/44849975\n        const vFOV = this._camera.lens.fovy * DEG2RAD;\n        const hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._aspectRatio) * 2;\n        const fov = 1 < this._aspectRatio ? vFOV : hFOV;\n        return radius / (Math.sin(fov * 0.5));\n    }\n    /**\n     * Returns the orbit center position, where the camera looking at.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getTarget(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the camera position.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getPosition(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.setFromSpherical(receiveEndValue ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the spherical coordinates of the orbit.\n     * @param out The receiving Spherical instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getSpherical(out, receiveEndValue = true) {\n        const _out = out || new THREE.Spherical();\n        return _out.copy(receiveEndValue ? this._sphericalEnd : this._spherical);\n    }\n    /**\n     * Returns the focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getFocalOffset(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._focalOffsetEnd : this._focalOffset);\n    }\n    /**\n     * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n     * @category Methods\n     */\n    normalizeRotations() {\n        this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\n        if (this._sphericalEnd.theta < 0)\n            this._sphericalEnd.theta += PI_2;\n        this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\n    }\n    /**\n     * stop all transitions.\n     */\n    stop() {\n        this._focalOffset.copy(this._focalOffsetEnd);\n        this._target.copy(this._targetEnd);\n        this._spherical.copy(this._sphericalEnd);\n        this._zoom = this._zoomEnd;\n    }\n    /**\n     * Reset all rotation and position to defaults.\n     * @param enableTransition\n     * @category Methods\n     */\n    reset(enableTransition = false) {\n        if (!approxEquals(this._camera.up.x, this._cameraUp0.x) ||\n            !approxEquals(this._camera.up.y, this._cameraUp0.y) ||\n            !approxEquals(this._camera.up.z, this._cameraUp0.z)) {\n            this._camera.up.copy(this._cameraUp0);\n            const position = this.getPosition(_v3A);\n            this.updateCameraUp();\n            this.setPosition(position.x, position.y, position.z);\n        }\n        const promises = [\n            this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition),\n            this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition),\n            this.zoomTo(this._zoom0, enableTransition),\n        ];\n        return Promise.all(promises);\n    }\n    /**\n     * Set current camera position as the default position.\n     * @category Methods\n     */\n    saveState() {\n        this._cameraUp0.copy(this._camera.up);\n        this.getTarget(this._target0);\n        this.getPosition(this._position0);\n        this._zoom0 = this._zoom;\n        this._focalOffset0.copy(this._focalOffset);\n    }\n    /**\n     * Sync camera-up direction.\n     * When camera-up vector is changed, `.updateCameraUp()` must be called.\n     * @category Methods\n     */\n    updateCameraUp() {\n        this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n    }\n    /**\n     * Apply current camera-up direction to the camera.\n     * The orbit system will be re-initialized with the current position.\n     * @category Methods\n     */\n    applyCameraUp() {\n        const cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize();\n        // So first find the vector off to the side, orthogonal to both this.object.up and\n        // the \"view\" vector.\n        const side = _v3B.crossVectors(cameraDirection, this._camera.up);\n        // Then find the vector orthogonal to both this \"side\" vector and the \"view\" vector.\n        // This vector will be the new \"up\" vector.\n        this._camera.up.crossVectors(side, cameraDirection).normalize();\n        this._camera.updateMatrixWorld();\n        const position = this.getPosition(_v3A);\n        this.updateCameraUp();\n        this.setPosition(position.x, position.y, position.z);\n    }\n    /**\n     * Update camera position and directions.\n     * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n     * @param delta\n     * @returns updated\n     * @category Methods\n     */\n    update(delta) {\n        const deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\n        const deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\n        const deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\n        const deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);\n        const deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);\n        const deltaZoom = this._zoomEnd - this._zoom;\n        // update theta\n        if (approxZero(deltaTheta)) {\n            this._thetaVelocity.value = 0;\n            this._spherical.theta = this._sphericalEnd.theta;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update phi\n        if (approxZero(deltaPhi)) {\n            this._phiVelocity.value = 0;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update distance\n        if (approxZero(deltaRadius)) {\n            this._radiusVelocity.value = 0;\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        else {\n            const smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta);\n            this._needsUpdate = true;\n        }\n        // update target position\n        if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {\n            this._targetVelocity.set(0, 0, 0);\n            this._target.copy(this._targetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target);\n            this._needsUpdate = true;\n        }\n        // update focalOffset\n        if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {\n            this._focalOffsetVelocity.set(0, 0, 0);\n            this._focalOffset.copy(this._focalOffsetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset);\n            this._needsUpdate = true;\n        }\n        // update zoom\n        if (approxZero(deltaZoom)) {\n            this._zoomVelocity.value = 0;\n            this._zoom = this._zoomEnd;\n        }\n        else {\n            const smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n            this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta);\n        }\n        if (this.dollyToCursor) {\n            if (isPerspectiveCamera(this._camera) && this._changedDolly !== 0) {\n                const dollyControlAmount = this._spherical.radius - this._lastDistance;\n                const camera = this._camera;\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const planeX = _v3A.copy(cameraDirection).cross(camera.up).normalize();\n                if (planeX.lengthSq() === 0)\n                    planeX.x = 1.0;\n                const planeY = _v3B.crossVectors(planeX, cameraDirection);\n                const worldToScreen = this._sphericalEnd.radius * Math.tan(camera.lens.fovy * DEG2RAD * 0.5);\n                const prevRadius = this._sphericalEnd.radius - dollyControlAmount;\n                const lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\n                const cursor = _v3C.copy(this._targetEnd)\n                    .add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * this._aspectRatio))\n                    .add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const isMin = this._lastDollyDirection === DOLLY_DIRECTION.IN && this._spherical.radius <= this.minDistance;\n                const isMax = this._lastDollyDirection === DOLLY_DIRECTION.OUT && this.maxDistance <= this._spherical.radius;\n                if (this.infinityDolly && (isMin || isMax)) {\n                    this._sphericalEnd.radius -= dollyControlAmount;\n                    this._spherical.radius -= dollyControlAmount;\n                    const dollyAmount = _v3B.copy(cameraDirection).multiplyScalar(-dollyControlAmount);\n                    newTargetEnd.add(dollyAmount);\n                }\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                this._changedDolly -= dollyControlAmount;\n                if (approxZero(this._changedDolly))\n                    this._changedDolly = 0;\n            }\n            else if (isOrthographicCamera(this._camera) && this._changedZoom !== 0) {\n                const dollyControlAmount = this._zoom - this._lastZoom;\n                const camera = this._camera;\n                const worldCursorPosition = unproject(_v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.lens.zNear + camera.lens.zFar) / (camera.lens.zNear - camera.lens.zFar)), camera);\n                const quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);\n                const cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(camera.up)));\n                const prevZoom = this._zoom - dollyControlAmount;\n                const lerpRatio = -(prevZoom - this._zoom) / this._zoom;\n                // find the \"distance\" (aka plane constant in three.js) of Plane\n                // from a given position (this._targetEnd) and normal vector (cameraDirection)\n                // https://www.maplesoft.com/support/help/maple/view.aspx?path=MathApps%2FEquationOfAPlaneNormal#bkmrk0\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const prevPlaneConstant = this._targetEnd.dot(cameraDirection);\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const newPlaneConstant = newTargetEnd.dot(cameraDirection);\n                // Pull back the camera depth that has moved, to be the camera stationary as zoom\n                const pullBack = cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);\n                newTargetEnd.sub(pullBack);\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                // this._target.copy( this._targetEnd );\n                this._changedZoom -= dollyControlAmount;\n                if (approxZero(this._changedZoom))\n                    this._changedZoom = 0;\n            }\n        }\n        if (this._camera.zoom !== this._zoom) {\n            this._camera.zoom = this._zoom;\n            this._camera.updateProjectionMatrix(this._aspectRatio);\n            this._updateNearPlaneCorners();\n            this._needsUpdate = true;\n        }\n        this._dragNeedsUpdate = true;\n        // decompose spherical to the camera position\n        this._spherical.makeSafe();\n        this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\n        this._camera.lookAt(this._target);\n        // set offset after the orbit movement\n        const affectOffset = !approxZero(this._focalOffset.x) ||\n            !approxZero(this._focalOffset.y) ||\n            !approxZero(this._focalOffset.z);\n        if (affectOffset) {\n            this._camera.updateMatrixWorld();\n            _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n            _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n            _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\n            _xColumn.multiplyScalar(this._focalOffset.x);\n            _yColumn.multiplyScalar(-this._focalOffset.y);\n            _zColumn.multiplyScalar(this._focalOffset.z); // notice: z-offset will not affect in Orthographic.\n            _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n            this._camera.position.add(_v3A);\n        }\n        if (this._boundaryEnclosesCamera) {\n            this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1.0);\n        }\n        const updated = this._needsUpdate;\n        if (updated && !this._updatedLastTime) {\n            this._hasRested = false;\n            this.dispatchEvent({ type: 'wake' });\n            this.dispatchEvent({ type: 'update' });\n        }\n        else if (updated) {\n            this.dispatchEvent({ type: 'update' });\n            if (approxZero(deltaTheta, this.restThreshold) &&\n                approxZero(deltaPhi, this.restThreshold) &&\n                approxZero(deltaRadius, this.restThreshold) &&\n                approxZero(deltaTarget.x, this.restThreshold) &&\n                approxZero(deltaTarget.y, this.restThreshold) &&\n                approxZero(deltaTarget.z, this.restThreshold) &&\n                approxZero(deltaOffset.x, this.restThreshold) &&\n                approxZero(deltaOffset.y, this.restThreshold) &&\n                approxZero(deltaOffset.z, this.restThreshold) &&\n                approxZero(deltaZoom, this.restThreshold) &&\n                !this._hasRested) {\n                this._hasRested = true;\n                this.dispatchEvent({ type: 'rest' });\n            }\n        }\n        else if (!updated && this._updatedLastTime) {\n            this.dispatchEvent({ type: 'sleep' });\n        }\n        this._lastDistance = this._spherical.radius;\n        this._lastZoom = this._zoom;\n        this._updatedLastTime = updated;\n        this._needsUpdate = false;\n        return updated;\n    }\n    /**\n     * Get all state in JSON string\n     * @category Methods\n     */\n    toJSON() {\n        return JSON.stringify({\n            enabled: this._enabled,\n            minDistance: this.minDistance,\n            maxDistance: infinityToMaxNumber(this.maxDistance),\n            minZoom: this.minZoom,\n            maxZoom: infinityToMaxNumber(this.maxZoom),\n            minPolarAngle: this.minPolarAngle,\n            maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\n            minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\n            maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\n            smoothTime: this.smoothTime,\n            draggingSmoothTime: this.draggingSmoothTime,\n            dollySpeed: this.dollySpeed,\n            truckSpeed: this.truckSpeed,\n            scaleTruckSpeed: this.scaleTruckSpeed,\n            dollyToCursor: this.dollyToCursor,\n            target: this._targetEnd.toArray(),\n            position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n            zoom: this._zoomEnd,\n            focalOffset: this._focalOffsetEnd.toArray(),\n            target0: this._target0.toArray(),\n            position0: this._position0.toArray(),\n            zoom0: this._zoom0,\n            focalOffset0: this._focalOffset0.toArray(),\n        });\n    }\n    /**\n     * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n     * @param json\n     * @param enableTransition\n     * @category Methods\n     */\n    fromJSON(json, enableTransition = false) {\n        const obj = JSON.parse(json);\n        this.enabled = obj.enabled;\n        this.minDistance = obj.minDistance;\n        this.maxDistance = maxNumberToInfinity(obj.maxDistance);\n        this.minZoom = obj.minZoom;\n        this.maxZoom = maxNumberToInfinity(obj.maxZoom);\n        this.minPolarAngle = obj.minPolarAngle;\n        this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\n        this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\n        this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\n        this.smoothTime = obj.smoothTime;\n        this.draggingSmoothTime = obj.draggingSmoothTime;\n        this.dollySpeed = obj.dollySpeed;\n        this.truckSpeed = obj.truckSpeed;\n        this.scaleTruckSpeed = obj.scaleTruckSpeed;\n        this.dollyToCursor = obj.dollyToCursor;\n        this._target0.fromArray(obj.target0);\n        this._position0.fromArray(obj.position0);\n        this._zoom0 = obj.zoom0;\n        this._focalOffset0.fromArray(obj.focalOffset0);\n        this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\n        _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\n        this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\n        this.dollyTo(_sphericalA.radius, enableTransition);\n        this.zoomTo(obj.zoom, enableTransition);\n        this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\n        this._needsUpdate = true;\n    }\n    /**\n     * Attach all internal event handlers to enable drag control.\n     * @category Methods\n     */\n    connect(domElement) {\n        if (this._domElement) {\n            console.warn('camera-controls is already connected.');\n            return;\n        }\n        domElement.setAttribute('data-camera-controls-version', VERSION);\n        this._addAllEventListeners(domElement);\n        this._getClientRect(this._elementRect);\n    }\n    /**\n     * Detach all internal event handlers to disable drag control.\n     */\n    disconnect() {\n        this.cancel();\n        this._removeAllEventListeners();\n        if (this._domElement) {\n            this._domElement.removeAttribute('data-camera-controls-version');\n            this._domElement = undefined;\n        }\n    }\n    /**\n     * Dispose the cameraControls instance itself, remove all eventListeners.\n     * @category Methods\n     */\n    dispose() {\n        // remove all user event listeners\n        this.removeAllEventListeners();\n        // remove all internal event listeners\n        this.disconnect();\n    }\n    // it's okay to expose public though\n    _getTargetDirection(out) {\n        // divide by distance to normalize, lighter than `Vector3.prototype.normalize()`\n        return out.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);\n    }\n    // it's okay to expose public though\n    _getCameraDirection(out) {\n        return this._getTargetDirection(out).negate();\n    }\n    _findPointerById(pointerId) {\n        return this._activePointers.find((activePointer) => activePointer.pointerId === pointerId);\n    }\n    _findPointerByMouseButton(mouseButton) {\n        return this._activePointers.find((activePointer) => activePointer.mouseButton === mouseButton);\n    }\n    _disposePointer(pointer) {\n        this._activePointers.splice(this._activePointers.indexOf(pointer), 1);\n    }\n    _encloseToBoundary(position, offset, friction) {\n        const offsetLength2 = offset.lengthSq();\n        if (offsetLength2 === 0.0) { // sanity check\n            return position;\n        }\n        // See: https://twitter.com/FMS_Cat/status/1106508958640988161\n        const newTarget = _v3B.copy(offset).add(position); // target\n        const clampedTarget = this._boundary.clampPoint(newTarget, _v3C); // clamped target\n        const deltaClampedTarget = clampedTarget.sub(newTarget); // newTarget -> clampedTarget\n        const deltaClampedTargetLength2 = deltaClampedTarget.lengthSq(); // squared length of deltaClampedTarget\n        if (deltaClampedTargetLength2 === 0.0) { // when the position doesn't have to be clamped\n            return position.add(offset);\n        }\n        else if (deltaClampedTargetLength2 === offsetLength2) { // when the position is completely stuck\n            return position;\n        }\n        else if (friction === 0.0) {\n            return position.add(offset).add(deltaClampedTarget);\n        }\n        else {\n            const offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\n            return position\n                .add(_v3B.copy(offset).multiplyScalar(offsetFactor))\n                .add(deltaClampedTarget.multiplyScalar(1.0 - friction));\n        }\n    }\n    _updateNearPlaneCorners() {\n        if (isPerspectiveCamera(this._camera)) {\n            const camera = this._camera;\n            const near = camera.lens.nearPlane;\n            const fov = camera.lens.fovy * DEG2RAD;\n            const heightHalf = Math.tan(fov * 0.5) * near; // near plain half height\n            const widthHalf = heightHalf * this._aspectRatio; // near plain half width: ;\n            this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\n            this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const zoomInv = 1 / camera.zoom;\n            const left = camera.left * zoomInv;\n            const right = camera.right * zoomInv;\n            const top = camera.top * zoomInv;\n            const bottom = camera.bottom * zoomInv;\n            this._nearPlaneCorners[0].set(left, top, 0);\n            this._nearPlaneCorners[1].set(right, top, 0);\n            this._nearPlaneCorners[2].set(right, bottom, 0);\n            this._nearPlaneCorners[3].set(left, bottom, 0);\n        }\n    }\n    getTargetDistance = () => {\n        if (!this.scaleTruckSpeed || isOrthographicCamera(this._camera)) {\n            return 1.0;\n        }\n        const offset = _v3A.copy(this._camera.position).sub(this._target);\n        // half of the fov is center to top of screen\n        const fov = this._camera.lens.fovy * DEG2RAD;\n        return offset.length() * Math.tan(fov * 0.5);\n    };\n    _truckInternal = (deltaX, deltaY, dragToOffset, screenSpacePanning) => {\n        let truckX;\n        let pedestalY;\n        if (isPerspectiveCamera(this._camera)) {\n            const targetDistance = this.getTargetDistance();\n            truckX = (this.truckSpeed * deltaX * targetDistance / this._elementRect.height);\n            pedestalY = (this.truckSpeed * deltaY * targetDistance / this._elementRect.height);\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            truckX = deltaX * (camera.right - camera.left) / camera.zoom / this._elementRect.width;\n            pedestalY = deltaY * (camera.top - camera.bottom) / camera.zoom / this._elementRect.height;\n        }\n        else {\n            return;\n        }\n        if (screenSpacePanning) {\n            dragToOffset ?\n                this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) :\n                this.truck(truckX, 0, true);\n            this.forward(-pedestalY, true);\n        }\n        else {\n            dragToOffset ?\n                this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y + pedestalY, this._focalOffsetEnd.z, true) :\n                this.truck(truckX, pedestalY, true);\n        }\n    };\n    _rotateInternal = (deltaX, deltaY) => {\n        const theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height; // divide by *height* to refer the resolution\n        const phi = PI_2 * this.polarRotateSpeed * deltaY / this._elementRect.height;\n        this.rotate(theta, phi, true);\n    };\n    _dollyInternal = (delta, x, y) => {\n        const dollyScale = Math.pow(0.95, -delta * this.dollySpeed);\n        const lastDistance = this._sphericalEnd.radius;\n        const distance = this._sphericalEnd.radius * dollyScale;\n        const clampedDistance = clamp(distance, this.minDistance, this.maxDistance);\n        const overflowedDistance = clampedDistance - distance;\n        if (this.infinityDolly && this.dollyToCursor) {\n            this._dollyToNoClamp(distance, true);\n        }\n        else if (this.infinityDolly && !this.dollyToCursor) {\n            this.dollyInFixed(overflowedDistance, true);\n            this._dollyToNoClamp(clampedDistance, true);\n        }\n        else {\n            this._dollyToNoClamp(clampedDistance, true);\n        }\n        if (this.dollyToCursor) {\n            this._changedDolly += (this.infinityDolly ? distance : clampedDistance) - lastDistance;\n            this._dollyControlCoord.set(x, y);\n        }\n        this._lastDollyDirection = Math.sign(-delta);\n    };\n    _zoomInternal = (delta, x, y) => {\n        const zoomScale = Math.pow(0.95, delta * this.dollySpeed);\n        const lastZoom = this._zoom;\n        const zoom = this._zoom * zoomScale;\n        // for both PerspectiveCamera and OrthographicCamera\n        this.zoomTo(zoom, true);\n        if (this.dollyToCursor) {\n            this._changedZoom += zoom - lastZoom;\n            this._dollyControlCoord.set(x, y);\n        }\n    };\n    /**\n     * Get its client rect and package into given `DOMRect` .\n     */\n    _getClientRect(target) {\n        if (!this._domElement)\n            return;\n        const rect = this._domElement.getBoundingClientRect();\n        target.x = rect.left;\n        target.y = rect.top;\n        if (this._viewport) {\n            target.x += this._viewport.x;\n            target.y += rect.height - this._viewport.w - this._viewport.y;\n            target.width = this._viewport.z;\n            target.height = this._viewport.w;\n        }\n        else {\n            target.width = rect.width;\n            target.height = rect.height;\n        }\n        return target;\n    }\n    _createOnRestPromise(resolveImmediately) {\n        if (resolveImmediately)\n            return Promise.resolve();\n        this._hasRested = false;\n        this.dispatchEvent({ type: 'transitionstart' });\n        return new Promise((resolve) => {\n            const onResolve = () => {\n                this.removeEventListener('rest', onResolve);\n                resolve();\n            };\n            this.addEventListener('rest', onResolve);\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _addAllEventListeners(_domElement) { }\n    _removeAllEventListeners() { }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    get dampingFactor() {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    set dampingFactor(_) {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    get draggingDampingFactor() {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    set draggingDampingFactor(_) {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n    }\n}\n\nvar HOLD_EVENT_TYPE;\n(function (HOLD_EVENT_TYPE) {\n    HOLD_EVENT_TYPE[\"HOLD_START\"] = \"holdStart\";\n    HOLD_EVENT_TYPE[\"HOLD_END\"] = \"holdEnd\";\n    HOLD_EVENT_TYPE[\"HOLDING\"] = \"holding\";\n})(HOLD_EVENT_TYPE || (HOLD_EVENT_TYPE = {}));\n\nclass EventDispatcher {\n    _listeners = {};\n    addEventListener(type, listener) {\n        const listeners = this._listeners;\n        if (listeners[type] === undefined)\n            listeners[type] = [];\n        if (listeners[type].indexOf(listener) === -1)\n            listeners[type].push(listener);\n    }\n    // hasEventListener( type: string, listener: Listener ): boolean {\n    // \tconst listeners = this._listeners;\n    // \treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n    // }\n    removeEventListener(type, listener) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[type];\n        if (listenerArray !== undefined) {\n            const index = listenerArray.indexOf(listener);\n            if (index !== -1)\n                listenerArray.splice(index, 1);\n        }\n    }\n    // removeAllEventListeners( type?: string ): void {\n    // \tif ( ! type ) {\n    // \t\tthis._listeners = {};\n    // \t\treturn;\n    // \t}\n    // \tif ( Array.isArray( this._listeners[ type ] ) ) this._listeners[ type ].length = 0;\n    // }\n    dispatchEvent(event) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[event.type];\n        if (listenerArray !== undefined) {\n            event.target = this;\n            const array = listenerArray.slice(0);\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i].call(this, event);\n            }\n        }\n    }\n}\n\nclass Hold extends EventDispatcher {\n    holdIntervalDelay;\n    _enabled = true;\n    _holding = false;\n    _intervalId = -1;\n    _deltaTime = 0;\n    _elapsedTime = 0;\n    _lastTime = 0;\n    constructor(holdIntervalDelay) {\n        super();\n        this.holdIntervalDelay = holdIntervalDelay;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        if (this._enabled === enabled)\n            return;\n        this._enabled = enabled;\n        if (!this._enabled)\n            this._holdEnd();\n    }\n    get holding() {\n        return this._holding;\n    }\n    _holdStart = (event) => {\n        if (!this._enabled)\n            return;\n        if (this._holding)\n            return;\n        this._deltaTime = 0;\n        this._elapsedTime = 0;\n        this._lastTime = performance.now();\n        this.dispatchEvent({\n            type: HOLD_EVENT_TYPE.HOLD_START,\n            deltaTime: this._deltaTime,\n            elapsedTime: this._elapsedTime,\n            originalEvent: event,\n        });\n        this._holding = true;\n        const cb = () => {\n            this._intervalId = !!this.holdIntervalDelay ?\n                window.setTimeout(cb, this.holdIntervalDelay) :\n                window.requestAnimationFrame(cb);\n            const now = performance.now();\n            this._deltaTime = now - this._lastTime;\n            this._elapsedTime += this._deltaTime;\n            this._lastTime = performance.now();\n            this.dispatchEvent({\n                type: HOLD_EVENT_TYPE.HOLDING,\n                deltaTime: this._deltaTime,\n                elapsedTime: this._elapsedTime,\n                originalEvent: event\n            });\n        };\n        this._intervalId = !!this.holdIntervalDelay ?\n            window.setTimeout(cb, this.holdIntervalDelay) :\n            window.requestAnimationFrame(cb);\n    };\n    _holdEnd = (event) => {\n        if (this._holding) {\n            const now = performance.now();\n            this._deltaTime = now - this._lastTime;\n            this._elapsedTime += this._deltaTime;\n            this._lastTime = performance.now();\n            this.dispatchEvent({\n                type: HOLD_EVENT_TYPE.HOLD_END,\n                deltaTime: this._deltaTime,\n                elapsedTime: this._elapsedTime,\n                originalEvent: event,\n            });\n            this._holding = false;\n        }\n        window.clearTimeout(this._intervalId);\n        window.cancelAnimationFrame(this._intervalId);\n    };\n}\n\nclass KeyboardKeyHold extends Hold {\n    constructor(code, holdIntervalDelay) {\n        if (typeof code !== 'string') {\n            console.error('KeyboardKeyHold: the first argument has to be a KeyboardEvent.code string.');\n            return;\n        }\n        super(holdIntervalDelay);\n        this._holdStart = this._holdStart.bind(this);\n        this._holdEnd = this._holdEnd.bind(this);\n        const onKeydown = (event) => {\n            if (isInputEvent(event))\n                return;\n            if (event.code !== code)\n                return;\n            this._holdStart(event);\n        };\n        const onKeyup = (event) => {\n            if (event.code !== code)\n                return;\n            this._holdEnd(event);\n        };\n        document.addEventListener('keydown', onKeydown);\n        document.addEventListener('keyup', onKeyup);\n        window.addEventListener('blur', this._holdEnd);\n    }\n}\nfunction isInputEvent(event) {\n    const target = event.target;\n    return (target.tagName === 'INPUT' ||\n        target.tagName === 'SELECT' ||\n        target.tagName === 'TEXTAREA' ||\n        target.isContentEditable);\n}\n\n//------------------------------------------------------------------------------\nconst KEYCODE = {\n    W: \"KeyW\",\n    A: \"KeyA\",\n    S: \"KeyS\",\n    D: \"KeyD\",\n    E: \"KeyE\",\n    Q: \"KeyQ\",\n    ARROW_LEFT: \"ArrowLeft\",\n    ARROW_UP: \"ArrowUp\",\n    ARROW_RIGHT: \"ArrowRight\",\n    ARROW_DOWN: \"ArrowDown\",\n    SHIFT_RIGHT: \"ShiftRight\",\n    CONTROL_RIGHT: \"ControlRight\",\n};\nconst holdIntervalDelay = 16.666;\n//------------------------------------------------------------------------------\nclass KeyboardFlyControls {\n    //--------------------------------------------------------------------------\n    /**\n     * Init that once and for all because hold-event lib has not been written to destroy KeyboardKeyHold objects\n     * n.b: there are document and window event listeners in the KeyboardKeyHold constructor which are never\n     * removed, and cannot be from outside because those listeners are local functions in the constructor.\n     * https://github.com/yomotsu/hold-event/blob/master/src/KeyboardKeyHold.ts#L30\n     * TODO: rewrite this lib which is not maintained and buggy.\n     */\n    static _keys = {};\n    _cameraControls;\n    _clock;\n    //--------------------------------------------------------------------------\n    /**\n     * A speed factor to adjust movement speed\n     */\n    speedMultiplier = 2e-5;\n    //--------------------------------------------------------------------------\n    /**\n     * Creates a `KeyboardFlyControls` instance.\n     *\n     * Sample:\n     * ```\n     * CameraControls.install( { THREE } );\n     * const cameraControls = new CameraControls( camera, domElement );\n     * const KeyboardFlyControls= new KeyboardFlyControls( cameraControls );\n     * ```\n     *\n     * @param cameraControls A `CameraConrols` to bind keyboard on.\n     * @param clock A `THREE.Clock` used by to update `CameraConrols`.\n     * @category Constructor\n     */\n    constructor(cameraControls, clock) {\n        this._cameraControls = cameraControls;\n        this._clock = clock;\n        if (Object.keys(KeyboardFlyControls._keys).length === 0) {\n            KeyboardFlyControls._keys = {\n                q: new KeyboardKeyHold(KEYCODE.Q, holdIntervalDelay),\n                w: new KeyboardKeyHold(KEYCODE.W, holdIntervalDelay),\n                s: new KeyboardKeyHold(KEYCODE.S, holdIntervalDelay),\n                a: new KeyboardKeyHold(KEYCODE.A, holdIntervalDelay),\n                d: new KeyboardKeyHold(KEYCODE.D, holdIntervalDelay),\n                e: new KeyboardKeyHold(KEYCODE.E, holdIntervalDelay),\n                up: new KeyboardKeyHold(KEYCODE.ARROW_UP, holdIntervalDelay),\n                right: new KeyboardKeyHold(KEYCODE.ARROW_RIGHT, holdIntervalDelay),\n                down: new KeyboardKeyHold(KEYCODE.ARROW_DOWN, holdIntervalDelay),\n                left: new KeyboardKeyHold(KEYCODE.ARROW_LEFT, holdIntervalDelay),\n                shift: new KeyboardKeyHold(KEYCODE.SHIFT_RIGHT, holdIntervalDelay),\n                ctrl: new KeyboardKeyHold(KEYCODE.CONTROL_RIGHT, holdIntervalDelay),\n            };\n        }\n        const { w, a, s, d, e, q, up, right, down, left, shift, ctrl } = KeyboardFlyControls._keys;\n        a.addEventListener(\"holding\", this._truckLeft);\n        d.addEventListener(\"holding\", this._truckRight);\n        w.addEventListener(\"holding\", this._moveFront);\n        s.addEventListener(\"holding\", this._moveBack);\n        q.addEventListener(\"holding\", this._moveDown);\n        e.addEventListener(\"holding\", this._moveUp);\n        left.addEventListener(\"holding\", this._truckLeft);\n        right.addEventListener(\"holding\", this._truckRight);\n        up.addEventListener(\"holding\", this._moveFront);\n        down.addEventListener(\"holding\", this._moveBack);\n        ctrl.addEventListener(\"holding\", this._moveDown);\n        shift.addEventListener(\"holding\", this._moveUp);\n    }\n    //--------------------------------------------------------------------------\n    dispose() {\n        const { w, a, s, d, e, q, up, right, down, left, ctrl, shift } = KeyboardFlyControls._keys;\n        a.removeEventListener(\"holding\", this._truckLeft);\n        d.removeEventListener(\"holding\", this._truckRight);\n        w.removeEventListener(\"holding\", this._moveFront);\n        s.removeEventListener(\"holding\", this._moveBack);\n        q.removeEventListener(\"holding\", this._moveDown);\n        e.removeEventListener(\"holding\", this._moveUp);\n        left.removeEventListener(\"holding\", this._truckLeft);\n        right.removeEventListener(\"holding\", this._truckRight);\n        up.removeEventListener(\"holding\", this._moveFront);\n        down.removeEventListener(\"holding\", this._moveBack);\n        ctrl.removeEventListener(\"holding\", this._moveDown);\n        shift.removeEventListener(\"holding\", this._moveUp);\n    }\n    //--------------------------------------------------------------------------\n    enable() {\n        Object.keys(KeyboardFlyControls._keys).forEach((key) => {\n            KeyboardFlyControls._keys[key].enabled = true;\n        });\n    }\n    //--------------------------------------------------------------------------\n    disable() {\n        Object.keys(KeyboardFlyControls._keys).forEach((key) => {\n            KeyboardFlyControls._keys[key].enabled = false;\n        });\n    }\n    //--------------------------------------------------------------------------\n    _truckLeft = (event) => {\n        if (!event) {\n            return;\n        }\n        this._cameraControls.truck(-this.speedMultiplier * -this._cameraControls.truckSpeed * event.deltaTime, 0, false);\n        this._updateClock();\n    };\n    //--------------------------------------------------------------------------\n    _truckRight = (event) => {\n        if (!event) {\n            return;\n        }\n        this._cameraControls.truck(this.speedMultiplier * -this._cameraControls.truckSpeed * event.deltaTime, 0, false);\n        this._updateClock();\n    };\n    //--------------------------------------------------------------------------\n    _moveUp = (event) => {\n        if (!event) {\n            return;\n        }\n        this._cameraControls.elevate(this.speedMultiplier * -this._cameraControls.truckSpeed * event.deltaTime, false);\n        this._updateClock();\n    };\n    //--------------------------------------------------------------------------\n    _moveDown = (event) => {\n        if (!event) {\n            return;\n        }\n        this._cameraControls.elevate(-this.speedMultiplier * -this._cameraControls.truckSpeed * event.deltaTime, false);\n        this._updateClock();\n    };\n    //--------------------------------------------------------------------------\n    _moveFront = (event) => {\n        if (!event) {\n            return;\n        }\n        const distance = this.speedMultiplier * -this._cameraControls.truckSpeed * event.deltaTime;\n        const move = this._cameraControls.direction.multiplyScalar(distance);\n        move.add(this._cameraControls.getPosition(new Vector3()));\n        this._cameraControls.moveTo(...move.toArray(), false);\n        this._updateClock();\n    };\n    //--------------------------------------------------------------------------\n    _moveBack = (event) => {\n        if (!event) {\n            return;\n        }\n        const distance = this.speedMultiplier * this._cameraControls.truckSpeed * event.deltaTime;\n        const move = this._cameraControls.direction.multiplyScalar(distance);\n        move.add(this._cameraControls.getPosition(new Vector3()));\n        this._cameraControls.moveTo(...move.toArray(), false);\n        this._updateClock();\n    };\n    //--------------------------------------------------------------------------\n    _updateClock() {\n        const delta = this._clock.getDelta();\n        return this._cameraControls.update(delta);\n    }\n}\n\nclass Clock {\n    autoStart;\n    startTime;\n    oldTime;\n    elapsedTime;\n    running;\n    constructor(autoStart = true) {\n        this.autoStart = autoStart;\n        this.startTime = 0;\n        this.oldTime = 0;\n        this.elapsedTime = 0;\n        this.running = false;\n    }\n    start() {\n        this.startTime = now();\n        this.oldTime = this.startTime;\n        this.elapsedTime = 0;\n        this.running = true;\n    }\n    stop() {\n        this.getElapsedTime();\n        this.running = false;\n        this.autoStart = false;\n    }\n    getElapsedTime() {\n        this.getDelta();\n        return this.elapsedTime;\n    }\n    getDelta() {\n        let diff = 0;\n        if (this.autoStart && !this.running) {\n            this.start();\n            return 0;\n        }\n        if (this.running) {\n            const newTime = now();\n            diff = (newTime - this.oldTime) / 1000;\n            this.oldTime = newTime;\n            this.elapsedTime += diff;\n        }\n        return diff;\n    }\n}\nfunction now() {\n    return performance.now();\n}\n\n//------------------------------------------------------------------------------\nif (typeof window !== \"undefined\") {\n    if (!window.__LIVELINK__) {\n        window.__LIVELINK__ = {};\n    }\n    if (Object.prototype.hasOwnProperty.call(window.__LIVELINK__, \"@3dverse/livelink-camera-controls\")) {\n        console.warn(\"\u26A0\uFE0F WARNING \u26A0\uFE0F Multiple instances of Livelink Camera Controls being imported.\");\n    }\n    else {\n        window.__LIVELINK__[\"@3dverse/livelink-camera-controls\"] = \"0.4.10\";\n    }\n}\n\nexport { ACTION, Clock, DOLLY_DIRECTION, EventDispatcher$1 as EventDispatcher, KeyboardFlyControls, MOUSE_BUTTON, CameraControls as default };\n", "//------------------------------------------------------------------------------\n/**\n * Camera controller presets module.\n *\n * @packageDocumentation\n * @category Camera\n */\nimport { ACTION } from \"@3dverse/livelink-camera-controls\";\nimport { CameraControllerPreset } from \"./CameraControllerPreset\";\nimport { Vec3 } from \"@3dverse/livelink.core\";\n\n/**\n * The default camera controller preset designed to function as a simple orbital camera.\n *\n * Mouse controls:\n *  + Hold left button: rotate.\n *  + Hold middle button or wheel: dolly.\n *  + Hold right button: truck.\n *\n * Touch controls:\n *  + 1 finger: rotate.\n *  + 2 fingers: truck or dolly with pinch gesture.\n *  + 3 fingers: truck.\n *\n * @category Camera\n */\nexport const orbital: CameraControllerPreset = Object.freeze({\n    //--------------------------------------------------------------------------\n    // CameraController properties\n    /** CameraController init options */\n    init_options: {\n        /** init target at world origin*/\n        target: [0, 0, 0] as Vec3,\n    },\n});\n\n/**\n * A camera controller preset designed as an orbital camera locked on the pointer.\n *\n * Features:\n *  + Pick orbit point under the pointer on 3D objects or use previous obit point if none is picked.\n *  + Dolly and truck in the direction of the pointer movement.\n *  + Dolly to pointer.\n *  + Infinity dolly to \"go through walls\".\n *  + Lock pointer on mouse drag after a threshold distance of 10 pixels.\n *  + Unlock the pointer when all mouse buttons are released.\n *\n * Mouse controls:\n *  + Hold left button: rotate\n *  + Hold middle button or wheel: dolly\n *  + Hold right button: truck\n *\n * Touch controls:\n *  + 1 finger: rotate\n *  + 2 fingers: truck or dolly with pinch gesture\n *  + 3 fingers: truck\n *\n * @category Camera\n */\nexport const pointer_locked_orbital: CameraControllerPreset = Object.freeze({\n    //--------------------------------------------------------------------------\n    // livelink-camera-controls/CameraControls properties\n    mouseButtons: {\n        left: ACTION.ROTATE,\n        middle: ACTION.DOLLY,\n        wheel: ACTION.DOLLY,\n        right: ACTION.TRUCK,\n    },\n    touches: {\n        one: ACTION.TOUCH_ROTATE,\n        two: ACTION.TOUCH_DOLLY_TRUCK,\n        three: ACTION.TOUCH_TRUCK,\n    },\n    /** Invert speed for the camera to follow the mouse cursor direction during truck action */\n    truckSpeed: -2.0,\n    dollyToCursor: true,\n    /** Allow to \"pass through wall\" thanks to `infinityDolly: true` and `minDistance: 0.5` */\n    infinityDolly: true,\n    minDistance: 0.5,\n    maxDistance: Infinity,\n\n    //--------------------------------------------------------------------------\n    // CameraController properties\n    invert_middle_button_dolly: true,\n    orbit_on_cursor: {\n        enabled: true,\n        cancel_target_offset: true,\n    },\n\n    lock_pointer: {\n        aim: \"on-drag\" as const,\n        /** Useful to detect simple click because once locked, the pointer position remains unchanged */\n        on_drag_threshold_in_pixels: 10,\n    },\n});\n\n/**\n * A camera controller preset functioning as a fly-mode camera, like the one in the 3dverse editor.\n *\n * Mouse controls:\n *  + Hold left button: screen pan\n *  + Hold middle button: truck\n *  + Wheel: screen pan forward/backward\n *  + Hold right button: rotate\n *\n * Touch controls:\n *  + 1 finger: rotate\n *  + 2 fingers: truck or dolly with pinch gesture\n *  + 3 fingers: screen pan\n *\n * @category Camera\n */\nexport const fly: CameraControllerPreset = Object.freeze({\n    //--------------------------------------------------------------------------\n    // livelink-camera-controls/CameraControls properties\n    mouseButtons: {\n        left: ACTION.SCREEN_PAN,\n        middle: ACTION.TRUCK,\n        wheel: ACTION.SCREEN_PAN,\n        right: ACTION.ROTATE,\n    },\n    touches: {\n        one: ACTION.TOUCH_ROTATE,\n        two: ACTION.TOUCH_DOLLY_TRUCK,\n        three: ACTION.TOUCH_SCREEN_PAN,\n    },\n    /**\n     * Invert speed for the camera to follow the mouse cursor direction during truck action.\n     * Beware truck speed needs to be relative to target distance.\n     */\n    truckSpeed: -3.0 / 1e-3,\n\n    /** Allow to \"pass through wall\" thanks to `infinityDolly: true` and `minDistance: 0.5` */\n    infinityDolly: true,\n    minDistance: 0.5,\n    maxDistance: Infinity,\n\n    //--------------------------------------------------------------------------\n    // CameraController properties\n    lock_pointer: {\n        aim: \"on-drag\" as const,\n        /** Useful to detect simple click because once locked, the pointer position remains unchanged */\n        on_drag_threshold_in_pixels: 10,\n    },\n\n    /** CameraController init options */\n    init_options: {\n        /** In order to achieve FPS look the target distance is set to epsilon */\n        forward_target_distance: 1e-3,\n        /** Use the keyboard fly controls accessible through `CameraController.keyboard_fly_controls` */\n        keyboard_fly_controls: {\n            enabled: true,\n            speed_multiplier: 2e-6,\n        },\n    },\n});\n", "//------------------------------------------------------------------------------\nimport { Components, Vec2, Vec3 } from \"@3dverse/livelink.core\";\nimport CameraControls, { Clock, ACTION, KeyboardFlyControls } from \"@3dverse/livelink-camera-controls\";\n\n//------------------------------------------------------------------------------\nimport type { Entity } from \"../../scene/Entity\";\nimport type { Viewport } from \"./Viewport\";\nimport { CameraControllerInitOptions, CameraControllerPreset, LockMousePointerAim } from \"./CameraControllerPreset\";\nimport * as CameraControllerPresets from \"./CameraControllerPresets\";\nimport { Quaternion, Vector3 } from \"threejs-math\";\n\n/**\n *\n */\nenum MouseEventButton {\n    // Usually the left button or the un-initialized state\n    main = 0,\n    // Usually the wheel button or the middle button (if present)\n    auxilary = 1,\n    // Usually the right button\n    secondary = 2,\n    // Typically the Browser Back button\n    fourth = 3,\n    // Typically the Browser Forward button\n    fifth = 4,\n}\n\n/**\n * A camera controller based on the `camera-controls` library.\n *\n * @category Camera\n */\nexport class CameraController extends CameraControls {\n    /**\n     *\n     */\n    #camera_entity: Entity;\n\n    /**\n     *\n     */\n    #viewport: Viewport;\n\n    /**\n     *\n     */\n    #clock: Clock = new Clock();\n\n    /**\n     *\n     */\n    #update_interval: ReturnType<typeof setInterval> | null = null;\n\n    /**\n     * Invert the movement direction of the dolly action on middle button only\n     */\n    invert_middle_button_dolly = false;\n\n    /**\n     * Orbit on cursor options\n     * @default - { enabled: false, cancel_target_offset: false }\n     */\n    orbit_on_cursor: {\n        /** Enable for the rotate action to pick the orbit target on the pointer down */\n        enabled: boolean;\n        /** Enable to use the previous target when none is picked to prevent target shift on truck and dolly actions. */\n        cancel_target_offset: boolean;\n    } = {\n        enabled: false,\n        cancel_target_offset: false,\n    };\n\n    /**\n     *\n     */\n    #orbit_on_cursor: {\n        orbit_point: Vec3;\n        rotate_speed?: {\n            azimuth: number;\n            polar: number;\n        };\n        wheel_timer: number;\n    } = {\n        orbit_point: [0, 0, 0],\n        wheel_timer: 0,\n    };\n\n    /**\n     * Lock pointer options\n     * @default - { aim: \"off\", on_drag_threshold_in_pixels: 0 }\n     */\n    lock_pointer: {\n        /** Aim of the pointer lock */\n        aim: LockMousePointerAim;\n        /** Threshold in pixels of the pointer movement before to lock it when `lock_pointer.aim = \"on-drag\"` */\n        on_drag_threshold_in_pixels: number;\n    } = {\n        aim: \"off\",\n        on_drag_threshold_in_pixels: 0,\n    };\n\n    /**\n     *\n     */\n    #lock_pointer: {\n        count: number;\n        down_position: Vec2 | null;\n    } = {\n        count: 0,\n        down_position: null,\n    };\n\n    /**\n     * Set of options used by `CameraController.initController`\n     */\n    init_options: Readonly<CameraControllerInitOptions> = {};\n\n    /**\n     *\n     */\n    keyboard_fly_controls: KeyboardFlyControls | null = null;\n\n    /**\n     *\n     */\n    get #isPointerLockActive(): boolean {\n        return this._domElement?.ownerDocument.pointerLockElement === this._domElement;\n    }\n\n    /**\n     *\n     */\n    constructor({\n        camera_entity,\n        viewport,\n        activate = true,\n        preset = CameraControllerPresets.orbital,\n    }: {\n        camera_entity: Entity;\n        viewport: Viewport;\n        activate?: boolean;\n        preset?: CameraControllerPreset;\n    }) {\n        super(\n            camera_entity.local_transform as Components.LocalTransform,\n            getLens(camera_entity),\n            viewport,\n        );\n\n        this.#camera_entity = camera_entity;\n        this.#viewport = viewport;\n\n        this.#viewport.is_camera_controlled_by_current_client = true;\n\n        // apply presets by deep merging properties\n        this.#deepMerge(this, preset);\n\n        this.#initController();\n\n        if (activate) {\n            this.activate();\n        }\n\n        this.#viewport.rendering_surface.addEventListener(\"on-rendering-surface-resized\", this.onViewportResize);\n    }\n\n    /**\n     *\n     */\n    onViewportResize = (): void => {\n        this.aspectRatio = this.#viewport.aspect_ratio;\n    };\n\n    /**\n     *\n     */\n    release(): void {\n        this.#viewport.is_camera_controlled_by_current_client = false;\n        this.#viewport.rendering_surface.removeEventListener(\"on-rendering-surface-resized\", this.onViewportResize);\n        this.deactivate();\n        this.dispose();\n        this.keyboard_fly_controls?.dispose();\n    }\n\n    /**\n     *\n     */\n    activate(): void {\n        if (this.#update_interval) {\n            return;\n        }\n\n        this.#update_interval = setInterval(() => {\n            this.update(this.#clock.getDelta());\n        }, 1000 / 60);\n\n        this._domElement?.addEventListener(\"pointerdown\", this.#onPointerDown);\n        this._domElement?.addEventListener(\"pointerup\", this.#onPointerUp);\n        this._domElement?.addEventListener(\"mousedown\", this.#onMouseDownLock);\n\n        this.keyboard_fly_controls?.enable();\n    }\n\n    /**\n     *\n     */\n    deactivate(): void {\n        this._domElement?.removeEventListener(\"pointerdown\", this.#onPointerDown);\n        this._domElement?.removeEventListener(\"pointerup\", this.#onPointerUp);\n        this._domElement?.removeEventListener(\"mousedown\", this.#onMouseDownLock);\n        this._domElement?.removeEventListener(\"mouseup\", this.#onMouseUpLock);\n        this._domElement?.removeEventListener(\"mousemove\", this.#onMouseMoveLock);\n\n        this.keyboard_fly_controls?.disable();\n\n        if (!this.#update_interval) {\n            return;\n        }\n\n        clearInterval(this.#update_interval);\n        this.#update_interval = null;\n    }\n\n    /**\n     *\n     */\n    #deepMerge<T extends object, U extends object>(target: T, ...sources: U[]): T & U {\n        const isObject = (value: unknown): value is Record<string | symbol, unknown> => {\n            return typeof value === \"object\" && value !== null && !Array.isArray(value);\n        };\n\n        sources.forEach(source => {\n            if (!isObject(source)) {\n                return;\n            }\n\n            Reflect.ownKeys(source).forEach(key => {\n                const targetValue = (target as Record<string | symbol, unknown>)[key];\n                const sourceValue = (source as Record<string | symbol, unknown>)[key];\n                let value: unknown;\n\n                if (isObject(targetValue) && isObject(sourceValue)) {\n                    value = this.#deepMerge(\n                        Object.create(Object.getPrototypeOf(targetValue)),\n                        targetValue,\n                        sourceValue,\n                    );\n                } else {\n                    value = window.structuredClone(sourceValue);\n                }\n\n                (target as Record<string | symbol, unknown>)[key] = value;\n            });\n        });\n\n        return target as T & U;\n    }\n\n    /**\n     *\n     */\n    #initController(): void {\n        const { target } = this.init_options;\n        if (target) {\n            this.setLookAt(...this.#camera_entity.local_transform.position, ...target);\n        }\n\n        const { forward_target_distance } = this.init_options;\n        if (forward_target_distance !== undefined) {\n            const quaternion = new Quaternion(...this.#camera_entity.local_transform.orientation);\n            const forward = new Vector3(0, 0, -1).applyQuaternion(quaternion);\n            forward.multiplyScalar(forward_target_distance);\n            const target = this.getPosition(new Vector3()).add(forward);\n            this.setTarget(...(target.toArray() as Vec3));\n        }\n\n        const { keyboard_fly_controls } = this.init_options;\n        if (keyboard_fly_controls?.enabled) {\n            const { speed_multiplier } = keyboard_fly_controls;\n            this.keyboard_fly_controls = new KeyboardFlyControls(this, this.#clock);\n            if (speed_multiplier !== undefined) {\n                this.keyboard_fly_controls.speedMultiplier = speed_multiplier;\n            }\n        }\n\n        this.saveState();\n        this.addEventListener(\"update\", this.#onCameraUpdate);\n    }\n\n    /**\n     *\n     */\n    #onCameraUpdate = (): void => {\n        this.position.toArray(this.#camera_entity.global_transform.position);\n        this.orientation.toArray(this.#camera_entity.global_transform.orientation);\n    };\n\n    /**\n     *\n     */\n    #lockPointer(): void {\n        // `lockPointer()` of livelink-camera-controls does not work from pointer down event. It locks pointer with\n        // ROTATE as current action without any the possibility to change it.\n        if (!this._domElement) {\n            return;\n        }\n\n        const { ownerDocument } = this._domElement;\n        this._domElement.requestPointerLock();\n        ownerDocument.addEventListener(\"pointerlockchange\", this.#onPointerLockChange);\n        ownerDocument.addEventListener(\"pointerlockerror\", this.#onPointerLockError);\n    }\n\n    /**\n     *\n     */\n    #unlockPointer(): void {\n        if (!this._domElement) {\n            return;\n        }\n\n        const { ownerDocument } = this._domElement;\n        ownerDocument.exitPointerLock();\n        ownerDocument.removeEventListener(\"pointerlockchange\", this.#onPointerLockChange);\n        ownerDocument.removeEventListener(\"pointerlockerror\", this.#onPointerLockError);\n    }\n\n    /**\n     *\n     */\n    #onPointerLockChange = (): void => {\n        if (this.#isPointerLockActive) {\n            return;\n        }\n\n        this.#unlockPointer();\n    };\n\n    /**\n     *\n     */\n    #onPointerLockError = (): void => {\n        this.#unlockPointer();\n    };\n\n    /**\n     *\n     */\n    #onMouseDownLock = (event: MouseEvent): void => {\n        if (this.lock_pointer.aim !== \"always\") {\n            this.#lock_pointer.count++;\n        }\n\n        if (this.#isPointerLockActive || this.lock_pointer.aim === \"off\") {\n            return;\n        }\n\n        this.#lock_pointer.down_position = [event.clientX, event.clientY];\n        this._domElement?.addEventListener(\"mousemove\", this.#onMouseMoveLock);\n    };\n\n    /**\n     *\n     */\n    #onMouseUpLock = (_event: MouseEvent): void => {\n        if (this.#lock_pointer.count > 0) {\n            this.#lock_pointer.count--;\n        }\n\n        if (this.#lock_pointer.count > 0 || !this.#isPointerLockActive || !this._domElement) {\n            return;\n        }\n\n        if (this.#lock_pointer.count === 0) {\n            this.#unlockPointer();\n        }\n    };\n\n    /**\n     *\n     */\n    #onMouseMoveLock = (event: MouseEvent): void => {\n        const { on_drag_threshold_in_pixels } = this.lock_pointer;\n        const { down_position } = this.#lock_pointer;\n\n        if (!down_position || !this._domElement || this.#isPointerLockActive) {\n            this._domElement?.removeEventListener(\"mousemove\", this.#onMouseMoveLock);\n            return;\n        }\n\n        // Do not lock pointer while drag distance threshold is not reached\n        if (on_drag_threshold_in_pixels > 0) {\n            const { clientX, clientY } = event;\n            const distance = Math.sqrt(\n                Math.pow(clientX - down_position[0], 2) + Math.pow(clientY - down_position[1], 2),\n            );\n            if (distance < on_drag_threshold_in_pixels) {\n                return;\n            }\n        }\n\n        // Lock Pointer\n        this._domElement.removeEventListener(\"mousemove\", this.#onMouseMoveLock);\n        if (this.lock_pointer.aim !== \"always\") {\n            this._domElement.addEventListener(\"mouseup\", this.#onMouseUpLock);\n        }\n        // Must try to unlock in case the user unlocked it manually with ESC key\n        this.#unlockPointer();\n        this.#lockPointer();\n    };\n\n    /**\n     *\n     */\n    #isPointerAction({\n        event,\n        touch_actions,\n        mouse_actions,\n    }: {\n        event: PointerEvent;\n        touch_actions?: ACTION[];\n        mouse_actions?: ACTION[];\n    }): boolean {\n        // PointerEvent triggered by touch\n        if (touch_actions && touch_actions.length > 0 && event.pointerType === \"touch\") {\n            const mask = touch_actions.reduce((mask, action) => mask | action, 0);\n            switch (this._activePointers.length) {\n                case 1:\n                    return (this.touches.one | mask) > 0;\n                case 2:\n                    return (this.touches.two | mask) > 0;\n                case 3:\n                    return (this.touches.three | mask) > 0;\n                default:\n                    return false;\n            }\n        }\n\n        // PointerEvent triggered by mouse\n        if (!mouse_actions || mouse_actions.length === 0) {\n            return false;\n        }\n        let mouse_action: ACTION = ACTION.NONE;\n        switch (event.button) {\n            case MouseEventButton.main:\n                mouse_action = this.mouseButtons.left;\n                break;\n            case MouseEventButton.secondary:\n                mouse_action = this.mouseButtons.right;\n                break;\n            case MouseEventButton.auxilary:\n                mouse_action = this.mouseButtons.middle;\n                break;\n            default:\n                return false;\n        }\n        return mouse_actions.includes(mouse_action);\n    }\n\n    /**\n     *\n     */\n    #isPointerRotateAction(event: PointerEvent): boolean {\n        const { ROTATE, TOUCH_ROTATE, TOUCH_ZOOM_ROTATE, TOUCH_DOLLY_ROTATE } = ACTION;\n        return this.#isPointerAction({\n            event,\n            touch_actions: [TOUCH_ROTATE, TOUCH_ZOOM_ROTATE, TOUCH_DOLLY_ROTATE],\n            mouse_actions: [ROTATE],\n        });\n    }\n\n    /**\n     *\n     */\n    #onPointerDown = (event: PointerEvent): void => {\n        if (\n            this.invert_middle_button_dolly &&\n            event.button === MouseEventButton.auxilary &&\n            this.mouseButtons.middle === ACTION.DOLLY\n        ) {\n            // Inverse dolly speed direction if using middle button (dolly)\n            this.dollySpeed = -Math.abs(this.dollySpeed);\n        }\n\n        if (this.orbit_on_cursor.enabled && this.#isPointerRotateAction(event)) {\n            // orbit on cursor changes orbit when rotate action is used (except if bound to wheel)\n            this.#safePickAndSetOrbitPoint(event);\n        }\n    };\n\n    /**\n     *\n     */\n    #onPointerUp = (event: PointerEvent): void => {\n        if (\n            this.invert_middle_button_dolly &&\n            event.button === MouseEventButton.auxilary &&\n            this.mouseButtons.middle === ACTION.DOLLY\n        ) {\n            // Cancel inverted dolly speed direction if stop using middle button (dolly)\n            this.dollySpeed = Math.abs(this.dollySpeed);\n        }\n    };\n\n    /**\n     *\n     */\n    #blockPointerMoveEvent = (event: PointerEvent): void => {\n        event.stopPropagation();\n    };\n\n    /**\n     *\n     */\n    async #pickAndSetOrbitPoint(event: MouseEvent): Promise<void> {\n        if (!this._domElement) {\n            return;\n        }\n\n        const { clientX, clientY } = event;\n        const { left, top } = this._domElement.getBoundingClientRect();\n        const screen_position: Vec2 = [\n            (clientX - left) / this._domElement.clientWidth,\n            (clientY - top) / this._domElement.clientHeight,\n        ];\n\n        const result = await this.#viewport.castScreenSpaceRay({\n            screen_position,\n            mode: \"None\",\n        });\n        const world_position = result?.world_position;\n        if (world_position) {\n            this.#orbit_on_cursor.orbit_point = world_position;\n            this.setOrbitPoint(...world_position);\n        } else if (this.orbit_on_cursor.cancel_target_offset) {\n            // Truck and dolly actions move the target offset, so reset to previous orbit point when void is picked\n            this.setOrbitPoint(...this.#orbit_on_cursor.orbit_point);\n        }\n\n        // Prevent camera jump while using dolly by holding mouse button and moving cursor\n        this.update(this.#clock.getDelta());\n    }\n\n    /**\n     *\n     */\n    async #safePickAndSetOrbitPoint(event: MouseEvent): Promise<void> {\n        if (!this.#orbit_on_cursor.rotate_speed) {\n            // save speed if not already done otherwise zero speed might be saved\n            this.#orbit_on_cursor.rotate_speed = {\n                azimuth: this.azimuthRotateSpeed,\n                polar: this.polarRotateSpeed,\n            };\n        }\n        // Prevent camera move while orbit point is not picked to avoid camera jump after the picked orbit point is set\n        this.polarRotateSpeed = 0;\n        this.azimuthRotateSpeed = 0;\n        document.removeEventListener(\"pointermove\", this.#blockPointerMoveEvent, true);\n        document.addEventListener(\"pointermove\", this.#blockPointerMoveEvent, {\n            capture: true,\n            once: true,\n        });\n\n        try {\n            await this.#pickAndSetOrbitPoint(event);\n        } finally {\n            // Enable camera move once awaited picking is done\n            document.removeEventListener(\"pointermove\", this.#blockPointerMoveEvent, true);\n            if (this.#orbit_on_cursor.rotate_speed) {\n                // multiple promises overlapped and a previous one has already restored speed\n                const { azimuth, polar } = this.#orbit_on_cursor.rotate_speed;\n                this.#orbit_on_cursor.rotate_speed = undefined;\n                this.azimuthRotateSpeed = azimuth;\n                this.polarRotateSpeed = polar;\n            }\n        }\n    }\n}\n\n/**\n *\n */\nfunction getLens(camera_entity: Entity): Components.PerspectiveLens | Components.OrthographicLens {\n    const lens = camera_entity.perspective_lens || camera_entity.orthographic_lens;\n    if (!lens) {\n        throw new Error(\"Camera entity must have a perspective or orthographic lens\");\n    }\n    return lens;\n}\n", "//------------------------------------------------------------------------------\nimport { glMatrix, mat3, mat4, vec3 } from \"gl-matrix\";\n\n//------------------------------------------------------------------------------\nimport type { Components, Mat4, Quat, Vec2, Vec3 } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { Entity } from \"../../scene/Entity\";\nimport { Viewport } from \"./Viewport\";\nimport { FrameCameraTransform } from \"../streaming/FrameCameraTransform\";\nimport { EntityUpdatedEvent } from \"../../scene/EntityEvents\";\nimport { quaternionToEuler } from \"../../maths\";\n\n/**\n *\n */\nconst INFINITE_FAR_VALUE = 100000;\n\n/**\n * A ray in 3D space.\n *\n * @category Camera\n */\nexport type Ray = { origin: Vec3; direction: Vec3 };\n\n/**\n * Holds the projection and transform matrices associated to a camera entity.\n *\n * The data in this class is guaranteed to be synchronized with the frame being rendered.\n * It accounts for the delays that occur between the remote server and the client.\n * The data it holds come from the frame meta data that are provided along with the frame sent by the server.\n *\n * As for the transform values in the camera entity, they are not guaranteed to be synchronized\n * with the frame being rendered. This is because the camera entity can be updated at any time,\n * and might be too recent to be used in the current frame.\n *\n * In short, camera controllers should use the camera entity and frame drawers (RenderingSurface, Overlay, ...)\n * should use the CameraProjection.\n *\n * @category Camera\n */\nexport class CameraProjection {\n    /**\n     * The entity that holds the camera and lens components.\n     */\n    readonly camera_entity: Entity;\n\n    /**\n     * The viewport in which the camera is rendered.\n     */\n    readonly viewport: Viewport;\n\n    /**\n     * World space position of the camera as used by the currently processed frame.\n     */\n    #world_position: Vec3 = [0, 0, 0];\n\n    /**\n     * World space orientation of the camera as used by the currently processed frame.\n     */\n    #world_orientation: Quat = [0, 0, 0, 1];\n\n    /**\n     * Transformation matrix from view space to clip space, aka the projection matrix.\n     */\n    #clip_from_view_matrix = mat4.create();\n\n    /**\n     *\n     */\n    #view_from_clip_matrix = mat4.create();\n\n    /**\n     * Transformation matrix from world space to clip space, aka the model-view-projection matrix.\n     */\n    #clip_from_world_matrix = mat4.create();\n\n    /**\n     * Transformation matrix from view space to world space, aka the inverse of the view matrix.\n     */\n    #world_from_view_matrix = mat4.create();\n\n    /**\n     * Transformation matrix from view space to clip space, aka the projection matrix.\n     */\n    get clip_from_view_matrix(): Readonly<Mat4> {\n        return this.#clip_from_view_matrix as Mat4;\n    }\n\n    /**\n     * Transformation matrix from clip space to view space, aka the inverse of the projection matrix.\n     */\n    get view_from_clip_matrix(): Readonly<Mat4> {\n        return this.#view_from_clip_matrix as Mat4;\n    }\n\n    /**\n     * Transformation matrix from world space to clip space, aka the model-view-projection matrix.\n     */\n    get clip_from_world_matrix(): Readonly<Mat4> {\n        return this.#clip_from_world_matrix as Mat4;\n    }\n\n    /**\n     * Transformation matrix from clip space to world space, aka the inverse of model-view-projection matrix.\n     */\n    get world_from_clip_matrix(): Readonly<Mat4> {\n        return mat4.invert(mat4.create(), this.#clip_from_world_matrix) as Mat4;\n    }\n\n    /**\n     * Transformation matrix from view space to world space, aka the inverse of the view matrix.\n     */\n    get world_from_view_matrix(): Readonly<Mat4> {\n        return this.#world_from_view_matrix as Mat4;\n    }\n\n    /**\n     * World space position of the camera as used to render the currently processed frame.\n     */\n    get world_position(): Readonly<Vec3> {\n        return this.#world_position;\n    }\n\n    /**\n     * World space orientation of the camera as used to render the currently processed frame.\n     */\n    get world_orientation(): Readonly<Quat> {\n        return this.#world_orientation;\n    }\n\n    /**\n     * World space orientation expressed as euler of the camera as used to render the currently processed frame.\n     */\n    get world_euler_orientation(): Readonly<Vec3> {\n        return quaternionToEuler(this.#world_orientation);\n    }\n\n    /**\n     * Creates a new CameraProjection instance for the given camera entity and viewport.\n     *\n     * @param params - The parameters for the CameraProjection instance.\n     * @param params.camera_entity - The entity that holds the camera and lens components.\n     * @param params.viewport - The viewport in which the camera is rendered.\n     *\n     * @throws Error if the camera entity does not have a camera or lens component.\n     */\n    constructor({ camera_entity, viewport }: { camera_entity: Entity; viewport: Viewport }) {\n        this.#checkCameraEntityValidity({ camera_entity });\n\n        this.camera_entity = camera_entity;\n        this.viewport = viewport;\n\n        this.updateProjectionMatrix();\n        camera_entity.addEventListener(\"on-entity-updated\", this.#onEntityUpdated);\n    }\n\n    /**\n     *\n     */\n    #onEntityUpdated = (event: EntityUpdatedEvent): void => {\n        if (event.isAnyComponentDirty({ components: [\"perspective_lens\", \"orthographic_lens\"] })) {\n            this.updateProjectionMatrix();\n        }\n    };\n\n    /**\n     *\n     */\n    #checkCameraEntityValidity({ camera_entity }: { camera_entity: Entity }): void {\n        if (!camera_entity.camera) {\n            throw new Error(\"Camera entity must have a camera component\");\n        }\n\n        if (!camera_entity.perspective_lens && !camera_entity.orthographic_lens) {\n            throw new Error(\"Camera entity must have a perspective or orthographic lens component\");\n        }\n    }\n\n    /**\n     * Projects a world space position to clip space.\n     *\n     * @param params\n     * @param params.world_position - The position in world space to project.\n     * @param params.out_clip_position - The output position in clip space.\n     *\n     * @returns The position in clip space.\n     */\n    projectWorldToClip({\n        world_position,\n        out_clip_position = vec3.create() as Vec3,\n    }: {\n        world_position: Vec3;\n        out_clip_position?: Vec3;\n    }): Vec3 {\n        vec3.transformMat4(out_clip_position, world_position, this.#clip_from_world_matrix);\n        return out_clip_position as Vec3;\n    }\n\n    /**\n     * Projects a clip space position to world space.\n     *\n     * @param param\n     * @param param.clip_position - The position in clip space to project.\n     * @param param.out_world_position - The output position in world space.\n     *\n     * @returns The position in world space.\n     */\n    projectClipToWorld({\n        clip_position,\n        out_world_position = vec3.create() as Vec3,\n    }: {\n        clip_position: Vec3;\n        out_world_position?: Vec3;\n    }): Vec3 {\n        vec3.transformMat4(out_world_position, clip_position, this.world_from_clip_matrix);\n        return out_world_position as Vec3;\n    }\n\n    /**\n     * Computes a ray from the camera origin to the given screen coordinates.\n     * (0, 0) is the top-left corner of the viewport, (1, 1) is the bottom-right corner.\n     *\n     * @param param\n     * @param param.screen_position - The screen coordinates to compute the ray from.\n\n     * @returns The ray.\n     */\n    computeRayFromScreenPosition({ screen_position }: { screen_position: Vec2 }): Ray {\n        const clip_position = this.#screenPositionToClipPosition({ screen_position });\n        return this.computeRayFromClipPosition({ clip_position });\n    }\n\n    /**\n     * Computes a ray from the camera origin to the given clip coordinates.\n     * (-1, -1) is the bottom-left corner of the viewport, (1, 1) is the top-right corner.\n     *\n     * @param param\n     * @param param.clip_position - The clip coordinates to compute the ray from.\n     *\n     * @returns The ray.\n     */\n    computeRayFromClipPosition({ clip_position }: { clip_position: Vec3 }): Ray {\n        if (this.camera_entity.perspective_lens) {\n            return this.#computeRayWithPerspectiveProjection({ clip_position });\n        } else if (this.camera_entity.orthographic_lens) {\n            return this.#computeRayWithOrthographicProjection({\n                lens: this.camera_entity.orthographic_lens,\n                clip_position,\n            });\n        } else {\n            throw new Error(\"Camera entity must have a perspective or orthographic lens component\");\n        }\n    }\n\n    /**\n     * Computes a ray from the camera origin to the given screen coordinates using perspective projection.\n     *\n     * @param param\n     * @param param.clip_position - The screen coordinates to compute the ray from.\n     *\n     * @returns The ray.\n     */\n    #computeRayWithPerspectiveProjection({ clip_position }: { clip_position: Vec3 }): Ray {\n        const ray: Ray = {\n            origin: vec3.fromValues(...this.#world_position) as Vec3,\n            direction: vec3.create() as Vec3,\n        };\n\n        this.projectClipToWorld({ clip_position, out_world_position: ray.direction });\n\n        vec3.sub(ray.direction, ray.direction, ray.origin);\n        vec3.normalize(ray.direction, ray.direction);\n\n        return ray;\n    }\n\n    /**\n     * Computes a ray from the camera origin to the given screen coordinates using orthographic projection.\n     *\n     * @param param\n     * @param param.clip_position - The screen coordinates to compute the ray from.\n     *\n     * @returns The ray.\n     */\n    #computeRayWithOrthographicProjection({\n        lens,\n        clip_position,\n    }: {\n        lens: Components.OrthographicLens;\n        clip_position: Vec3;\n    }): Ray {\n        const { zNear, zFar } = lens;\n\n        const ray: Ray = {\n            origin: vec3.fromValues(clip_position[0], clip_position[1], (zNear + zFar) / (zNear - zFar)) as Vec3,\n            direction: vec3.fromValues(0, 0, -1) as Vec3,\n        };\n\n        this.projectClipToWorld({ clip_position, out_world_position: ray.origin });\n\n        const affinedMatrix = mat3.fromMat4(mat3.create(), this.world_from_view_matrix);\n        vec3.transformMat3(ray.direction, ray.direction, affinedMatrix);\n\n        return ray;\n    }\n\n    /**\n     * Converts a screen position to a clip position.\n     *\n     * @param param\n     * @param param.screen_position - The screen position to convert.\n     *\n     * @returns The clip position.\n     */\n    #screenPositionToClipPosition({ screen_position }: { screen_position: Vec2 }): Vec3 {\n        return vec3.fromValues(screen_position[0] * 2 - 1, 1 - screen_position[1] * 2, 0.5) as Vec3;\n    }\n\n    /**\n     * Updates the projection matrix of the camera entity.\n     * This method should be called whenever the camera entity or viewport changes.\n     */\n    updateProjectionMatrix(): void {\n        if (this.camera_entity.perspective_lens) {\n            this.#computePerspectiveProjection({ lens: this.camera_entity.perspective_lens });\n        } else if (this.camera_entity.orthographic_lens) {\n            this.#computeOrthographicProjection({ lens: this.camera_entity.orthographic_lens });\n        }\n\n        mat4.invert(this.#view_from_clip_matrix, this.#clip_from_view_matrix);\n    }\n\n    /**\n     * @internal\n     *\n     * Updates the transformation matrix from world space to clip space.\n     *\n     * @param params\n     * @param params.frame_camera_transform - The frame camera transform data as found in the frame metadata.\n     */\n    updateFromFrameCameraTransform({ frame_camera_transform }: { frame_camera_transform: FrameCameraTransform }): void {\n        this.#world_position = frame_camera_transform.world_position;\n        this.#world_orientation = frame_camera_transform.world_orientation;\n        this.#world_from_view_matrix = Array.from(frame_camera_transform.world_from_view_matrix) as Mat4;\n\n        const tmp_matrix = this.#clip_from_world_matrix;\n        let view_from_world_matrix = mat4.invert(tmp_matrix, frame_camera_transform.world_from_view_matrix);\n        if (!view_from_world_matrix) {\n            console.warn(\n                \"Failed to invert world_from_view_matrix from frame_camera_transform, using identity matrix instead\",\n                frame_camera_transform,\n            );\n            view_from_world_matrix = mat4.identity(tmp_matrix);\n        }\n\n        this.#clip_from_world_matrix = mat4.multiply(\n            this.#clip_from_world_matrix,\n            this.#clip_from_view_matrix,\n            view_from_world_matrix,\n        );\n    }\n\n    /**\n     *\n     */\n    #computePerspectiveProjection({ lens }: { lens: Components.PerspectiveLens }): void {\n        mat4.perspective(\n            this.#clip_from_view_matrix,\n            glMatrix.toRadian(lens.fovy),\n            this.viewport.aspect_ratio,\n            lens.nearPlane,\n            lens.farPlane || INFINITE_FAR_VALUE,\n        );\n    }\n\n    /**\n     *\n     */\n    #computeOrthographicProjection({ lens }: { lens: Components.OrthographicLens }): void {\n        mat4.ortho(\n            this.#clip_from_view_matrix,\n            -this.viewport.aspect_ratio * lens.zoomFactor[0],\n            this.viewport.aspect_ratio * lens.zoomFactor[0],\n            -lens.zoomFactor[1],\n            lens.zoomFactor[1],\n            lens.zNear,\n            lens.zFar,\n        );\n    }\n}\n", "var global;\n\nfunction initglobal() {\n    global = this;\n    if (!global) {\n        if (typeof window != \"undefined\") {\n            global = window;\n        } else if (typeof self != \"undefined\") {\n            global = self;\n        }\n    }\n}\ninitglobal();\n\nlet wasmBinaryFile = \"https://cdn.3dverse.com/legacy/sdk/avc.wasm\";\n\nfunction error(message) {\n    console.error(message);\n    console.trace();\n}\n\nfunction assert(condition, message) {\n    if (!condition) {\n        error(message);\n    }\n}\n\nvar getModule = function (par_broadwayOnHeadersDecoded, par_broadwayOnPictureDecoded) {\n    /*var ModuleX = {\n      'print': function(text) { console.log('stdout: ' + text); },\n      'printErr': function(text) { console.log('stderr: ' + text); }\n    };*/\n\n    /*\n\n      The reason why this is all packed into one file is that this file can also function as worker.\n      you can integrate the file into your build system and provide the original file to be loaded into a worker.\n\n    */\n\n    //var Module = (function(){\n\n    var Module = typeof Module !== \"undefined\" ? Module : {};\n    var moduleOverrides = {};\n    var key;\n    for (key in Module) {\n        if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n        }\n    }\n    Module[\"arguments\"] = [];\n    Module[\"thisProgram\"] = \"./this.program\";\n    Module[\"quit\"] = function (status, toThrow) {\n        throw toThrow;\n    };\n    Module[\"preRun\"] = [];\n    Module[\"postRun\"] = [];\n    var ENVIRONMENT_IS_WEB = false;\n    var ENVIRONMENT_IS_WORKER = false;\n    var ENVIRONMENT_IS_NODE = false;\n    var ENVIRONMENT_IS_SHELL = false;\n    if (Module[\"ENVIRONMENT\"]) {\n        if (Module[\"ENVIRONMENT\"] === \"WEB\") {\n            ENVIRONMENT_IS_WEB = true;\n        } else if (Module[\"ENVIRONMENT\"] === \"WORKER\") {\n            ENVIRONMENT_IS_WORKER = true;\n        } else if (Module[\"ENVIRONMENT\"] === \"NODE\") {\n            ENVIRONMENT_IS_NODE = true;\n        } else if (Module[\"ENVIRONMENT\"] === \"SHELL\") {\n            ENVIRONMENT_IS_SHELL = true;\n        } else {\n            throw new Error(\"Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.\");\n        }\n    } else {\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE =\n            typeof process === \"object\" && typeof null === \"function\" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n    }\n    if (ENVIRONMENT_IS_SHELL) {\n        if (typeof read != \"undefined\") {\n            Module[\"read\"] = function shell_read(f) {\n                return read(f);\n            };\n        }\n        Module[\"readBinary\"] = function readBinary(f) {\n            var data;\n            if (typeof readbuffer === \"function\") {\n                return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n        };\n        if (typeof scriptArgs != \"undefined\") {\n            Module[\"arguments\"] = scriptArgs;\n        } else if (typeof arguments != \"undefined\") {\n            Module[\"arguments\"] = arguments;\n        }\n        if (typeof quit === \"function\") {\n            Module[\"quit\"] = function (status, toThrow) {\n                quit(status);\n            };\n        }\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n        Module[\"read\"] = function shell_read(url) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.send(null);\n            return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n            Module[\"readBinary\"] = function readBinary(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n            };\n        }\n        Module[\"readAsync\"] = function readAsync(url, onload, onerror) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, true);\n            xhr.responseType = \"arraybuffer\";\n            xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n                    onload(xhr.response);\n                    return;\n                }\n                onerror();\n            };\n            xhr.onerror = onerror;\n            xhr.send(null);\n        };\n        Module[\"setWindowTitle\"] = function (title) {\n            document.title = title;\n        };\n    } else {\n        throw new Error(\"not compiled for this environment\");\n    }\n    Module[\"print\"] =\n        typeof console !== \"undefined\" ? console.log.bind(console) : typeof print !== \"undefined\" ? print : null;\n    Module[\"printErr\"] =\n        typeof printErr !== \"undefined\"\n            ? printErr\n            : (typeof console !== \"undefined\" && console.warn.bind(console)) || Module[\"print\"];\n    Module.print = Module[\"print\"];\n    Module.printErr = Module[\"printErr\"];\n    for (key in moduleOverrides) {\n        if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n        }\n    }\n    moduleOverrides = undefined;\n    var STACK_ALIGN = 16;\n    function staticAlloc(size) {\n        assert(!staticSealed);\n        var ret = STATICTOP;\n        STATICTOP = (STATICTOP + size + 15) & -16;\n        return ret;\n    }\n    function alignMemory(size, factor) {\n        if (!factor) factor = STACK_ALIGN;\n        var ret = (size = Math.ceil(size / factor) * factor);\n        return ret;\n    }\n    var asm2wasmImports = {\n        \"f64-rem\": function (x, y) {\n            return x % y;\n        },\n        debugger: function () {\n            debugger;\n        },\n    };\n    var functionPointers = new Array(0);\n    var GLOBAL_BASE = 1024;\n    var ABORT = 0;\n    var EXITSTATUS = 0;\n    function assert(condition, text) {\n        if (!condition) {\n            abort(\"Assertion failed: \" + text);\n        }\n    }\n    function Pointer_stringify(ptr, length) {\n        if (length === 0 || !ptr) return \"\";\n        var hasUtf = 0;\n        var t;\n        var i = 0;\n        while (1) {\n            t = HEAPU8[(ptr + i) >> 0];\n            hasUtf |= t;\n            if (t == 0 && !length) break;\n            i++;\n            if (length && i == length) break;\n        }\n        if (!length) length = i;\n        var ret = \"\";\n        if (hasUtf < 128) {\n            var MAX_CHUNK = 1024;\n            var curr;\n            while (length > 0) {\n                curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));\n                ret = ret ? ret + curr : curr;\n                ptr += MAX_CHUNK;\n                length -= MAX_CHUNK;\n            }\n            return ret;\n        }\n        return UTF8ToString(ptr);\n    }\n    var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    function UTF8ArrayToString(u8Array, idx) {\n        var endPtr = idx;\n        while (u8Array[endPtr]) ++endPtr;\n        if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n        } else {\n            var u0, u1, u2, u3, u4, u5;\n            var str = \"\";\n            while (1) {\n                u0 = u8Array[idx++];\n                if (!u0) return str;\n                if (!(u0 & 128)) {\n                    str += String.fromCharCode(u0);\n                    continue;\n                }\n                u1 = u8Array[idx++] & 63;\n                if ((u0 & 224) == 192) {\n                    str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                    continue;\n                }\n                u2 = u8Array[idx++] & 63;\n                if ((u0 & 240) == 224) {\n                    u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n                } else {\n                    u3 = u8Array[idx++] & 63;\n                    if ((u0 & 248) == 240) {\n                        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;\n                    } else {\n                        u4 = u8Array[idx++] & 63;\n                        if ((u0 & 252) == 248) {\n                            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;\n                        } else {\n                            u5 = u8Array[idx++] & 63;\n                            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;\n                        }\n                    }\n                }\n                if (u0 < 65536) {\n                    str += String.fromCharCode(u0);\n                } else {\n                    var ch = u0 - 65536;\n                    str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n                }\n            }\n        }\n    }\n    function UTF8ToString(ptr) {\n        return UTF8ArrayToString(HEAPU8, ptr);\n    }\n    var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n    var WASM_PAGE_SIZE = 65536;\n    var ASMJS_PAGE_SIZE = 16777216;\n    function alignUp(x, multiple) {\n        if (x % multiple > 0) {\n            x += multiple - (x % multiple);\n        }\n        return x;\n    }\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    function updateGlobalBuffer(buf) {\n        Module[\"buffer\"] = buffer = buf;\n    }\n    function updateGlobalBufferViews() {\n        Module[\"HEAP8\"] = HEAP8 = new Int8Array(buffer);\n        Module[\"HEAP16\"] = HEAP16 = new Int16Array(buffer);\n        Module[\"HEAP32\"] = HEAP32 = new Int32Array(buffer);\n        Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buffer);\n        Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buffer);\n        Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buffer);\n        Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buffer);\n        Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buffer);\n    }\n    var STATIC_BASE, STATICTOP, staticSealed;\n    var STACK_BASE, STACKTOP, STACK_MAX;\n    var DYNAMIC_BASE, DYNAMICTOP_PTR;\n    STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;\n    staticSealed = false;\n    function abortOnCannotGrowMemory() {\n        abort(\n            \"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \" +\n                TOTAL_MEMORY +\n                \", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \",\n        );\n    }\n    function enlargeMemory() {\n        abortOnCannotGrowMemory();\n    }\n    var TOTAL_STACK = Module[\"TOTAL_STACK\"] || 5242880;\n    var TOTAL_MEMORY = Module[\"TOTAL_MEMORY\"] || 52428800;\n    if (TOTAL_MEMORY < TOTAL_STACK)\n        Module.printErr(\n            \"TOTAL_MEMORY should be larger than TOTAL_STACK, was \" +\n                TOTAL_MEMORY +\n                \"! (TOTAL_STACK=\" +\n                TOTAL_STACK +\n                \")\",\n        );\n    if (Module[\"buffer\"]) {\n        buffer = Module[\"buffer\"];\n    } else {\n        if (typeof WebAssembly === \"object\" && typeof WebAssembly.Memory === \"function\") {\n            Module[\"wasmMemory\"] = new WebAssembly.Memory({\n                initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n                maximum: TOTAL_MEMORY / WASM_PAGE_SIZE,\n            });\n            buffer = Module[\"wasmMemory\"].buffer;\n        } else {\n            buffer = new ArrayBuffer(TOTAL_MEMORY);\n        }\n        Module[\"buffer\"] = buffer;\n    }\n    updateGlobalBufferViews();\n    function getTotalMemory() {\n        return TOTAL_MEMORY;\n    }\n    HEAP32[0] = 1668509029;\n    HEAP16[1] = 25459;\n    if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw \"Runtime error: expected the system to be little-endian!\";\n    function callRuntimeCallbacks(callbacks) {\n        while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n                callback();\n                continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n                if (callback.arg === undefined) {\n                    Module[\"dynCall_v\"](func);\n                } else {\n                    Module[\"dynCall_vi\"](func, callback.arg);\n                }\n            } else {\n                func(callback.arg === undefined ? null : callback.arg);\n            }\n        }\n    }\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATMAIN__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    var runtimeExited = false;\n    function preRun() {\n        if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n                addOnPreRun(Module[\"preRun\"].shift());\n            }\n        }\n        callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function ensureInitRuntime() {\n        if (runtimeInitialized) return;\n        runtimeInitialized = true;\n        callRuntimeCallbacks(__ATINIT__);\n    }\n    function preMain() {\n        callRuntimeCallbacks(__ATMAIN__);\n    }\n    function exitRuntime() {\n        callRuntimeCallbacks(__ATEXIT__);\n        runtimeExited = true;\n    }\n    function postRun() {\n        if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n                addOnPostRun(Module[\"postRun\"].shift());\n            }\n        }\n        callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n        __ATPRERUN__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n        __ATPOSTRUN__.unshift(cb);\n    }\n    var Math_abs = Math.abs;\n    var Math_cos = Math.cos;\n    var Math_sin = Math.sin;\n    var Math_tan = Math.tan;\n    var Math_acos = Math.acos;\n    var Math_asin = Math.asin;\n    var Math_atan = Math.atan;\n    var Math_atan2 = Math.atan2;\n    var Math_exp = Math.exp;\n    var Math_log = Math.log;\n    var Math_sqrt = Math.sqrt;\n    var Math_ceil = Math.ceil;\n    var Math_floor = Math.floor;\n    var Math_pow = Math.pow;\n    var Math_imul = Math.imul;\n    var Math_fround = Math.fround;\n    var Math_round = Math.round;\n    var Math_min = Math.min;\n    var Math_max = Math.max;\n    var Math_clz32 = Math.clz32;\n    var Math_trunc = Math.trunc;\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function addRunDependency(id) {\n        runDependencies++;\n        if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n        }\n    }\n    function removeRunDependency(id) {\n        runDependencies--;\n        if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n        }\n        if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n                clearInterval(runDependencyWatcher);\n                runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n                var callback = dependenciesFulfilled;\n                dependenciesFulfilled = null;\n                callback();\n            }\n        }\n    }\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    function isDataURI(filename) {\n        return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;\n    }\n    function integrateWasmJS() {\n        var wasmTextFile = \"avc.wast\";\n        var asmjsCodeFile = \"avc.temp.asm.js\";\n        if (typeof Module[\"locateFile\"] === \"function\") {\n            if (!isDataURI(wasmTextFile)) {\n                wasmTextFile = Module[\"locateFile\"](wasmTextFile);\n            }\n            if (!isDataURI(wasmBinaryFile)) {\n                wasmBinaryFile = Module[\"locateFile\"](wasmBinaryFile);\n            }\n            if (!isDataURI(asmjsCodeFile)) {\n                asmjsCodeFile = Module[\"locateFile\"](asmjsCodeFile);\n            }\n        }\n        var wasmPageSize = 64 * 1024;\n        var info = {\n            global: null,\n            env: null,\n            asm2wasm: asm2wasmImports,\n            parent: Module,\n        };\n        var exports = null;\n        function mergeMemory(newBuffer) {\n            var oldBuffer = Module[\"buffer\"];\n            if (newBuffer.byteLength < oldBuffer.byteLength) {\n                Module[\"printErr\"](\n                    \"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\",\n                );\n            }\n            var oldView = new Int8Array(oldBuffer);\n            var newView = new Int8Array(newBuffer);\n            newView.set(oldView);\n            updateGlobalBuffer(newBuffer);\n            updateGlobalBufferViews();\n        }\n        function fixImports(imports) {\n            return imports;\n        }\n        function getBinary() {\n            try {\n                if (Module[\"wasmBinary\"]) {\n                    return new Uint8Array(Module[\"wasmBinary\"]);\n                }\n                if (Module[\"readBinary\"]) {\n                    return Module[\"readBinary\"](wasmBinaryFile);\n                } else {\n                    throw \"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)\";\n                }\n            } catch (err) {\n                abort(err);\n            }\n        }\n        function getBinaryPromise() {\n            if (!Module[\"wasmBinary\"] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\") {\n                return fetch(wasmBinaryFile, {})\n                    .then(function (response) {\n                        if (!response[\"ok\"]) {\n                            throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                        }\n                        return response[\"arrayBuffer\"]();\n                    })\n                    .catch(function () {\n                        return getBinary();\n                    });\n            }\n            return new Promise(function (resolve, reject) {\n                resolve(getBinary());\n            });\n        }\n        function doNativeWasm(global, env, providedBuffer) {\n            if (typeof WebAssembly !== \"object\") {\n                Module[\"printErr\"](\"no native wasm support detected\");\n                return false;\n            }\n            if (!(Module[\"wasmMemory\"] instanceof WebAssembly.Memory)) {\n                Module[\"printErr\"](\"no native wasm Memory in use\");\n                return false;\n            }\n            env[\"memory\"] = Module[\"wasmMemory\"];\n            info[\"global\"] = { NaN: NaN, Infinity: Infinity };\n            info[\"global.Math\"] = Math;\n            info[\"env\"] = env;\n            function receiveInstance(instance, module) {\n                exports = instance.exports;\n                if (exports.memory) mergeMemory(exports.memory);\n                Module[\"asm\"] = exports;\n                Module[\"usingWasm\"] = true;\n                removeRunDependency(\"wasm-instantiate\");\n            }\n            addRunDependency(\"wasm-instantiate\");\n            if (Module[\"instantiateWasm\"]) {\n                try {\n                    return Module[\"instantiateWasm\"](info, receiveInstance);\n                } catch (e) {\n                    Module[\"printErr\"](\"Module.instantiateWasm callback failed with error: \" + e);\n                    return false;\n                }\n            }\n            function receiveInstantiatedSource(output) {\n                receiveInstance(output[\"instance\"], output[\"module\"]);\n            }\n            function instantiateArrayBuffer(receiver) {\n                getBinaryPromise()\n                    .then(function (binary) {\n                        return WebAssembly.instantiate(binary, info);\n                    })\n                    .then(receiver)\n                    .catch(function (reason) {\n                        Module[\"printErr\"](\"failed to asynchronously prepare wasm: \" + reason);\n                        abort(reason);\n                    });\n            }\n            if (\n                !Module[\"wasmBinary\"] &&\n                typeof WebAssembly.instantiateStreaming === \"function\" &&\n                !isDataURI(wasmBinaryFile) &&\n                typeof fetch === \"function\"\n            ) {\n                WebAssembly.instantiateStreaming(fetch(wasmBinaryFile, {}), info)\n                    .then(receiveInstantiatedSource)\n                    .catch(function (reason) {\n                        Module[\"printErr\"](\"wasm streaming compile failed: \" + reason);\n                        Module[\"printErr\"](\"falling back to ArrayBuffer instantiation\");\n                        instantiateArrayBuffer(receiveInstantiatedSource);\n                    });\n            } else {\n                instantiateArrayBuffer(receiveInstantiatedSource);\n            }\n            return {};\n        }\n        Module[\"asmPreload\"] = Module[\"asm\"];\n        var asmjsReallocBuffer = Module[\"reallocBuffer\"];\n        var wasmReallocBuffer = function (size) {\n            var PAGE_MULTIPLE = Module[\"usingWasm\"] ? WASM_PAGE_SIZE : ASMJS_PAGE_SIZE;\n            size = alignUp(size, PAGE_MULTIPLE);\n            var old = Module[\"buffer\"];\n            var oldSize = old.byteLength;\n            if (Module[\"usingWasm\"]) {\n                try {\n                    var result = Module[\"wasmMemory\"].grow((size - oldSize) / wasmPageSize);\n                    if (result !== (-1 | 0)) {\n                        return (Module[\"buffer\"] = Module[\"wasmMemory\"].buffer);\n                    } else {\n                        return null;\n                    }\n                } catch (e) {\n                    return null;\n                }\n            }\n        };\n        Module[\"reallocBuffer\"] = function (size) {\n            if (finalMethod === \"asmjs\") {\n                return asmjsReallocBuffer(size);\n            } else {\n                return wasmReallocBuffer(size);\n            }\n        };\n        var finalMethod = \"\";\n        Module[\"asm\"] = function (global, env, providedBuffer) {\n            env = fixImports(env);\n            if (!env[\"table\"]) {\n                var TABLE_SIZE = Module[\"wasmTableSize\"];\n                if (TABLE_SIZE === undefined) TABLE_SIZE = 1024;\n                var MAX_TABLE_SIZE = Module[\"wasmMaxTableSize\"];\n                if (typeof WebAssembly === \"object\" && typeof WebAssembly.Table === \"function\") {\n                    if (MAX_TABLE_SIZE !== undefined) {\n                        env[\"table\"] = new WebAssembly.Table({\n                            initial: TABLE_SIZE,\n                            maximum: MAX_TABLE_SIZE,\n                            element: \"anyfunc\",\n                        });\n                    } else {\n                        env[\"table\"] = new WebAssembly.Table({\n                            initial: TABLE_SIZE,\n                            element: \"anyfunc\",\n                        });\n                    }\n                } else {\n                    env[\"table\"] = new Array(TABLE_SIZE);\n                }\n                Module[\"wasmTable\"] = env[\"table\"];\n            }\n            if (!env[\"memoryBase\"]) {\n                env[\"memoryBase\"] = Module[\"STATIC_BASE\"];\n            }\n            if (!env[\"tableBase\"]) {\n                env[\"tableBase\"] = 0;\n            }\n            var exports;\n            exports = doNativeWasm(global, env, providedBuffer);\n            assert(exports, \"no binaryen method succeeded.\");\n            return exports;\n        };\n    }\n    integrateWasmJS();\n    STATIC_BASE = GLOBAL_BASE;\n    STATICTOP = STATIC_BASE + 9888;\n    __ATINIT__.push();\n    var STATIC_BUMP = 9888;\n    Module[\"STATIC_BASE\"] = STATIC_BASE;\n    Module[\"STATIC_BUMP\"] = STATIC_BUMP;\n    STATICTOP += 16;\n    var SYSCALLS = {\n        varargs: 0,\n        get: function (varargs) {\n            SYSCALLS.varargs += 4;\n            var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n            return ret;\n        },\n        getStr: function () {\n            var ret = Pointer_stringify(SYSCALLS.get());\n            return ret;\n        },\n        get64: function () {\n            var low = SYSCALLS.get(),\n                high = SYSCALLS.get();\n            if (low >= 0) assert(high === 0);\n            else assert(high === -1);\n            return low;\n        },\n        getZero: function () {\n            assert(SYSCALLS.get() === 0);\n        },\n    };\n    function ___syscall140(which, varargs) {\n        SYSCALLS.varargs = varargs;\n        try {\n            var stream = SYSCALLS.getStreamFromFD(),\n                offset_high = SYSCALLS.get(),\n                offset_low = SYSCALLS.get(),\n                result = SYSCALLS.get(),\n                whence = SYSCALLS.get();\n            var offset = offset_low;\n            FS.llseek(stream, offset, whence);\n            HEAP32[result >> 2] = stream.position;\n            if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n            return 0;\n        } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n            return -e.errno;\n        }\n    }\n    function ___syscall146(which, varargs) {\n        SYSCALLS.varargs = varargs;\n        try {\n            var stream = SYSCALLS.get(),\n                iov = SYSCALLS.get(),\n                iovcnt = SYSCALLS.get();\n            var ret = 0;\n            if (!___syscall146.buffers) {\n                ___syscall146.buffers = [null, [], []];\n                ___syscall146.printChar = function (stream, curr) {\n                    var buffer = ___syscall146.buffers[stream];\n                    assert(buffer);\n                    if (curr === 0 || curr === 10) {\n                        (stream === 1 ? Module[\"print\"] : Module[\"printErr\"])(UTF8ArrayToString(buffer, 0));\n                        buffer.length = 0;\n                    } else {\n                        buffer.push(curr);\n                    }\n                };\n            }\n            for (var i = 0; i < iovcnt; i++) {\n                var ptr = HEAP32[(iov + i * 8) >> 2];\n                var len = HEAP32[(iov + (i * 8 + 4)) >> 2];\n                for (var j = 0; j < len; j++) {\n                    ___syscall146.printChar(stream, HEAPU8[ptr + j]);\n                }\n                ret += len;\n            }\n            return ret;\n        } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n            return -e.errno;\n        }\n    }\n    function ___syscall54(which, varargs) {\n        SYSCALLS.varargs = varargs;\n        try {\n            return 0;\n        } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n            return -e.errno;\n        }\n    }\n    function ___syscall6(which, varargs) {\n        SYSCALLS.varargs = varargs;\n        try {\n            var stream = SYSCALLS.getStreamFromFD();\n            FS.close(stream);\n            return 0;\n        } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n            return -e.errno;\n        }\n    }\n    function _broadwayOnHeadersDecoded() {\n        par_broadwayOnHeadersDecoded();\n    }\n    Module[\"_broadwayOnHeadersDecoded\"] = _broadwayOnHeadersDecoded;\n    function _broadwayOnPictureDecoded($buffer, width, height) {\n        par_broadwayOnPictureDecoded($buffer, width, height);\n    }\n    Module[\"_broadwayOnPictureDecoded\"] = _broadwayOnPictureDecoded;\n    function _emscripten_memcpy_big(dest, src, num) {\n        HEAPU8.set(HEAPU8.subarray(src, src + num), dest);\n        return dest;\n    }\n    function ___setErrNo(value) {\n        if (Module[\"___errno_location\"]) HEAP32[Module[\"___errno_location\"]() >> 2] = value;\n        return value;\n    }\n    DYNAMICTOP_PTR = staticAlloc(4);\n    STACK_BASE = STACKTOP = alignMemory(STATICTOP);\n    STACK_MAX = STACK_BASE + TOTAL_STACK;\n    DYNAMIC_BASE = alignMemory(STACK_MAX);\n    HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n    staticSealed = true;\n    Module[\"wasmTableSize\"] = 10;\n    Module[\"wasmMaxTableSize\"] = 10;\n    Module.asmGlobalArg = {};\n    Module.asmLibraryArg = {\n        abort: abort,\n        enlargeMemory: enlargeMemory,\n        getTotalMemory: getTotalMemory,\n        abortOnCannotGrowMemory: abortOnCannotGrowMemory,\n        ___setErrNo: ___setErrNo,\n        ___syscall140: ___syscall140,\n        ___syscall146: ___syscall146,\n        ___syscall54: ___syscall54,\n        ___syscall6: ___syscall6,\n        _broadwayOnHeadersDecoded: _broadwayOnHeadersDecoded,\n        _broadwayOnPictureDecoded: _broadwayOnPictureDecoded,\n        _emscripten_memcpy_big: _emscripten_memcpy_big,\n        DYNAMICTOP_PTR: DYNAMICTOP_PTR,\n        STACKTOP: STACKTOP,\n    };\n    var asm = Module[\"asm\"](Module.asmGlobalArg, Module.asmLibraryArg, buffer);\n    Module[\"asm\"] = asm;\n    var _broadwayCreateStream = (Module[\"_broadwayCreateStream\"] = function () {\n        return Module[\"asm\"][\"_broadwayCreateStream\"].apply(null, arguments);\n    });\n    var _broadwayExit = (Module[\"_broadwayExit\"] = function () {\n        return Module[\"asm\"][\"_broadwayExit\"].apply(null, arguments);\n    });\n    var _broadwayGetMajorVersion = (Module[\"_broadwayGetMajorVersion\"] = function () {\n        return Module[\"asm\"][\"_broadwayGetMajorVersion\"].apply(null, arguments);\n    });\n    var _broadwayGetMinorVersion = (Module[\"_broadwayGetMinorVersion\"] = function () {\n        return Module[\"asm\"][\"_broadwayGetMinorVersion\"].apply(null, arguments);\n    });\n    var _broadwayInit = (Module[\"_broadwayInit\"] = function () {\n        return Module[\"asm\"][\"_broadwayInit\"].apply(null, arguments);\n    });\n    var _broadwayPlayStream = (Module[\"_broadwayPlayStream\"] = function () {\n        return Module[\"asm\"][\"_broadwayPlayStream\"].apply(null, arguments);\n    });\n    Module[\"asm\"] = asm;\n    function ExitStatus(status) {\n        this.name = \"ExitStatus\";\n        this.message = \"Program terminated with exit(\" + status + \")\";\n        this.status = status;\n    }\n    ExitStatus.prototype = new Error();\n    ExitStatus.prototype.constructor = ExitStatus;\n    var initialStackTop;\n    dependenciesFulfilled = function runCaller() {\n        if (!Module[\"calledRun\"]) run();\n        if (!Module[\"calledRun\"]) dependenciesFulfilled = runCaller;\n    };\n    function run(args) {\n        args = args || Module[\"arguments\"];\n        if (runDependencies > 0) {\n            return;\n        }\n        preRun();\n        if (runDependencies > 0) return;\n        if (Module[\"calledRun\"]) return;\n        function doRun() {\n            if (Module[\"calledRun\"]) return;\n            Module[\"calledRun\"] = true;\n            if (ABORT) return;\n            ensureInitRuntime();\n            preMain();\n            if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n            postRun();\n        }\n        if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function () {\n                setTimeout(function () {\n                    Module[\"setStatus\"](\"\");\n                }, 1);\n                doRun();\n            }, 1);\n        } else {\n            doRun();\n        }\n    }\n    Module[\"run\"] = run;\n    function exit(status, implicit) {\n        if (implicit && Module[\"noExitRuntime\"] && status === 0) {\n            return;\n        }\n        if (Module[\"noExitRuntime\"]) {\n        } else {\n            ABORT = true;\n            EXITSTATUS = status;\n            STACKTOP = initialStackTop;\n            exitRuntime();\n            if (Module[\"onExit\"]) Module[\"onExit\"](status);\n        }\n        if (ENVIRONMENT_IS_NODE) {\n            process[\"exit\"](status);\n        }\n        Module[\"quit\"](status, new ExitStatus(status));\n    }\n    Module[\"exit\"] = exit;\n    function abort(what) {\n        if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n        }\n        if (what !== undefined) {\n            Module.print(what);\n            Module.printErr(what);\n            what = JSON.stringify(what);\n        } else {\n            what = \"\";\n        }\n        ABORT = true;\n        EXITSTATUS = 1;\n        throw \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n    }\n    Module[\"abort\"] = abort;\n    if (Module[\"preInit\"]) {\n        if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n        while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n        }\n    }\n    Module[\"noExitRuntime\"] = true;\n    run();\n\n    //   return Module;\n    //})();\n\n    var resultModule;\n    if (typeof global !== \"undefined\") {\n        if (global.Module) {\n            resultModule = global.Module;\n        }\n    }\n    if (typeof Module != \"undefined\") {\n        resultModule = Module;\n    }\n\n    resultModule._broadwayOnHeadersDecoded = par_broadwayOnHeadersDecoded;\n    resultModule._broadwayOnPictureDecoded = par_broadwayOnPictureDecoded;\n\n    var moduleIsReady = false;\n    var cbFun;\n    var moduleReady = function () {\n        moduleIsReady = true;\n        if (cbFun) {\n            cbFun(resultModule);\n        }\n    };\n\n    resultModule.onRuntimeInitialized = function () {\n        moduleReady(resultModule);\n    };\n    return function (callback) {\n        if (moduleIsReady) {\n            callback(resultModule);\n        } else {\n            cbFun = callback;\n        }\n    };\n};\n\nvar nowValue = function () {\n    return new Date().getTime();\n};\n\nif (typeof performance != \"undefined\") {\n    if (performance.now) {\n        nowValue = function () {\n            return performance.now();\n        };\n    }\n}\n\nvar Decoder = function (parOptions) {\n    this.options = parOptions || {};\n\n    this.now = nowValue;\n\n    var asmInstance;\n\n    var fakeWindow = {};\n\n    var toU8Array;\n    var toU32Array;\n\n    var onPicFun = function ($buffer, width, height) {\n        var buffer = this.pictureBuffers[$buffer];\n        if (!buffer) {\n            buffer = this.pictureBuffers[$buffer] = toU8Array($buffer, (width * height * 3) / 2);\n        }\n\n        var infos;\n        var doInfo = false;\n        if (this.infoAr.length) {\n            doInfo = true;\n            infos = this.infoAr;\n        }\n        this.infoAr = [];\n\n        if (this.options.rgb) {\n            if (!asmInstance) {\n                asmInstance = getAsm(width, height);\n            }\n            asmInstance.inp.set(buffer);\n            asmInstance.doit();\n\n            var copyU8 = new Uint8Array(asmInstance.outSize);\n            copyU8.set(asmInstance.out);\n\n            if (doInfo) {\n                infos[0].finishDecoding = nowValue();\n            }\n\n            this.onPictureDecoded(copyU8, width, height, infos);\n            return;\n        }\n\n        if (doInfo) {\n            infos[0].finishDecoding = nowValue();\n        }\n        this.onPictureDecoded(buffer, width, height, infos);\n    }.bind(this);\n\n    var ignore = false;\n\n    if (this.options.sliceMode) {\n        onPicFun = function ($buffer, width, height, $sliceInfo) {\n            if (ignore) {\n                return;\n            }\n            var buffer = this.pictureBuffers[$buffer];\n            if (!buffer) {\n                buffer = this.pictureBuffers[$buffer] = toU8Array($buffer, (width * height * 3) / 2);\n            }\n            var sliceInfo = this.pictureBuffers[$sliceInfo];\n            if (!sliceInfo) {\n                sliceInfo = this.pictureBuffers[$sliceInfo] = toU32Array($sliceInfo, 18);\n            }\n\n            var infos;\n            var doInfo = false;\n            if (this.infoAr.length) {\n                doInfo = true;\n                infos = this.infoAr;\n            }\n            this.infoAr = [];\n\n            /*if (this.options.rgb){\n\n      no rgb in slice mode\n\n      };*/\n\n            infos[0].finishDecoding = nowValue();\n            var sliceInfoAr = [];\n            for (var i = 0; i < 20; ++i) {\n                sliceInfoAr.push(sliceInfo[i]);\n            }\n            infos[0].sliceInfoAr = sliceInfoAr;\n\n            this.onPictureDecoded(buffer, width, height, infos);\n        }.bind(this);\n    }\n\n    var ModuleCallback = getModule.apply(fakeWindow, [function () {}, onPicFun]);\n\n    var MAX_STREAM_BUFFER_LENGTH = 1024 * 1024;\n\n    var instance = this;\n    this.onPictureDecoded = function (buffer, width, height, infos) {};\n\n    this.onDecoderReady = function () {};\n\n    var bufferedCalls = [];\n    this.decode = function decode(typedAr, parInfo, copyDoneFun) {\n        bufferedCalls.push([typedAr, parInfo, copyDoneFun]);\n    };\n\n    ModuleCallback(function (Module) {\n        var HEAP8 = Module.HEAP8;\n        var HEAPU8 = Module.HEAPU8;\n        var HEAP16 = Module.HEAP16;\n        var HEAP32 = Module.HEAP32;\n        // from old constructor\n        Module._broadwayInit();\n\n        /**\n         * Creates a typed array from a HEAP8 pointer.\n         */\n        toU8Array = function (ptr, length) {\n            return HEAPU8.subarray(ptr, ptr + length);\n        };\n        toU32Array = function (ptr, length) {\n            //var tmp = HEAPU8.subarray(ptr, ptr + (length * 4));\n            return new Uint32Array(HEAPU8.buffer, ptr, length);\n        };\n        instance.streamBuffer = toU8Array(\n            Module._broadwayCreateStream(MAX_STREAM_BUFFER_LENGTH),\n            MAX_STREAM_BUFFER_LENGTH,\n        );\n        instance.pictureBuffers = {};\n        // collect extra infos that are provided with the nal units\n        instance.infoAr = [];\n\n        /**\n         * Decodes a stream buffer. This may be one single (unframed) NAL unit without the\n         * start code, or a sequence of NAL units with framing start code prefixes. This\n         * function overwrites stream buffer allocated by the codec with the supplied buffer.\n         */\n\n        var sliceNum = 0;\n        if (instance.options.sliceMode) {\n            sliceNum = instance.options.sliceNum;\n\n            instance.decode = function decode(typedAr, parInfo, copyDoneFun) {\n                instance.infoAr.push(parInfo);\n                parInfo.startDecoding = nowValue();\n                var nals = parInfo.nals;\n                var i;\n                if (!nals) {\n                    nals = [];\n                    parInfo.nals = nals;\n                    var l = typedAr.length;\n                    var foundSomething = false;\n                    var lastFound = 0;\n                    var lastStart = 0;\n                    for (i = 0; i < l; ++i) {\n                        if (typedAr[i] === 1) {\n                            if (typedAr[i - 1] === 0 && typedAr[i - 2] === 0) {\n                                var startPos = i - 2;\n                                if (typedAr[i - 3] === 0) {\n                                    startPos = i - 3;\n                                }\n                                // its a nal;\n                                if (foundSomething) {\n                                    nals.push({\n                                        offset: lastFound,\n                                        end: startPos,\n                                        type: typedAr[lastStart] & 31,\n                                    });\n                                }\n                                lastFound = startPos;\n                                lastStart = startPos + 3;\n                                if (typedAr[i - 3] === 0) {\n                                    lastStart = startPos + 4;\n                                }\n                                foundSomething = true;\n                            }\n                        }\n                    }\n                    if (foundSomething) {\n                        nals.push({\n                            offset: lastFound,\n                            end: i,\n                            type: typedAr[lastStart] & 31,\n                        });\n                    }\n                }\n\n                var currentSlice = 0;\n                var playAr;\n                var offset = 0;\n                for (i = 0; i < nals.length; ++i) {\n                    if (nals[i].type === 1 || nals[i].type === 5) {\n                        if (currentSlice === sliceNum) {\n                            playAr = typedAr.subarray(nals[i].offset, nals[i].end);\n                            instance.streamBuffer[offset] = 0;\n                            offset += 1;\n                            instance.streamBuffer.set(playAr, offset);\n                            offset += playAr.length;\n                        }\n                        currentSlice += 1;\n                    } else {\n                        playAr = typedAr.subarray(nals[i].offset, nals[i].end);\n                        instance.streamBuffer[offset] = 0;\n                        offset += 1;\n                        instance.streamBuffer.set(playAr, offset);\n                        offset += playAr.length;\n                        Module._broadwayPlayStream(offset);\n                        offset = 0;\n                    }\n                }\n                copyDoneFun();\n                Module._broadwayPlayStream(offset);\n            };\n        } else {\n            instance.decode = function decode(typedAr, parInfo) {\n                // console.info(\"Decoding: \" + buffer.length);\n                // collect infos\n                if (parInfo) {\n                    instance.infoAr.push(parInfo);\n                    parInfo.startDecoding = nowValue();\n                }\n\n                instance.streamBuffer.set(typedAr);\n                Module._broadwayPlayStream(typedAr.length);\n            };\n        }\n\n        if (bufferedCalls.length) {\n            var bi = 0;\n            for (bi = 0; bi < bufferedCalls.length; ++bi) {\n                instance.decode(bufferedCalls[bi][0], bufferedCalls[bi][1], bufferedCalls[bi][2]);\n            }\n            bufferedCalls = [];\n        }\n\n        instance.onDecoderReady(instance);\n    });\n};\n\nDecoder.prototype = {};\n\n/*\n\n  asm.js implementation of a yuv to rgb convertor\n  provided by @soliton4\n\n  based on\n  http://www.wordsaretoys.com/2013/10/18/making-yuv-conversion-a-little-faster/\n\n*/\n\n// factory to create asm.js yuv -> rgb convertor for a given resolution\nvar asmInstances = {};\nvar getAsm = function (parWidth, parHeight) {\n    var idStr = \"\" + parWidth + \"x\" + parHeight;\n    if (asmInstances[idStr]) {\n        return asmInstances[idStr];\n    }\n\n    var lumaSize = parWidth * parHeight;\n    var chromaSize = (lumaSize | 0) >> 2;\n\n    var inpSize = lumaSize + chromaSize + chromaSize;\n    var outSize = parWidth * parHeight * 4;\n    var cacheSize = Math.pow(2, 24) * 4;\n    var size = inpSize + outSize + cacheSize;\n\n    var chunkSize = Math.pow(2, 24);\n    var heapSize = chunkSize;\n    while (heapSize < size) {\n        heapSize += chunkSize;\n    }\n    var heap = new ArrayBuffer(heapSize);\n\n    var res = asmFactory(global, {}, heap);\n    res.init(parWidth, parHeight);\n    asmInstances[idStr] = res;\n\n    res.heap = heap;\n    res.out = new Uint8Array(heap, 0, outSize);\n    res.inp = new Uint8Array(heap, outSize, inpSize);\n    res.outSize = outSize;\n\n    return res;\n};\n\nfunction asmFactory(stdlib, foreign, heap) {\n    \"use asm\";\n\n    var imul = stdlib.Math.imul;\n    var min = stdlib.Math.min;\n    var max = stdlib.Math.max;\n    var pow = stdlib.Math.pow;\n    var out = new stdlib.Uint8Array(heap);\n    var out32 = new stdlib.Uint32Array(heap);\n    var inp = new stdlib.Uint8Array(heap);\n    var mem = new stdlib.Uint8Array(heap);\n    var mem32 = new stdlib.Uint32Array(heap);\n\n    // for double algo\n    /*var vt = 1.370705;\n  var gt = 0.698001;\n  var gt2 = 0.337633;\n  var bt = 1.732446;*/\n\n    var width = 0;\n    var height = 0;\n    var lumaSize = 0;\n    var chromaSize = 0;\n    var inpSize = 0;\n    var outSize = 0;\n\n    var inpStart = 0;\n    var outStart = 0;\n\n    var widthFour = 0;\n\n    var cacheStart = 0;\n\n    function init(parWidth, parHeight) {\n        parWidth = parWidth | 0;\n        parHeight = parHeight | 0;\n\n        var i = 0;\n        var s = 0;\n\n        width = parWidth;\n        widthFour = imul(parWidth, 4) | 0;\n        height = parHeight;\n        lumaSize = imul(width | 0, height | 0) | 0;\n        chromaSize = (lumaSize | 0) >> 2;\n        outSize = imul(imul(width, height) | 0, 4) | 0;\n        inpSize = (lumaSize + chromaSize) | (0 + chromaSize) | 0;\n\n        outStart = 0;\n        inpStart = (outStart + outSize) | 0;\n        cacheStart = (inpStart + inpSize) | 0;\n\n        // initializing memory (to be on the safe side)\n        s = ~~+pow(+2, +24);\n        s = imul(s, 4) | 0;\n\n        for (i = 0 | 0; ((i | 0) < (s | 0)) | 0; i = (i + 4) | 0) {\n            mem32[((cacheStart + i) | 0) >> 2] = 0;\n        }\n    }\n\n    function doit() {\n        var ystart = 0;\n        var ustart = 0;\n        var vstart = 0;\n\n        var y = 0;\n        var yn = 0;\n        var u = 0;\n        var v = 0;\n\n        var o = 0;\n\n        var line = 0;\n        var col = 0;\n\n        var usave = 0;\n        var vsave = 0;\n\n        var ostart = 0;\n        var cacheAdr = 0;\n\n        ostart = outStart | 0;\n\n        ystart = inpStart | 0;\n        ustart = (ystart + lumaSize) | 0 | 0;\n        vstart = (ustart + chromaSize) | 0;\n\n        for (line = 0; (line | 0) < (height | 0); line = (line + 2) | 0) {\n            usave = ustart;\n            vsave = vstart;\n            for (col = 0; (col | 0) < (width | 0); col = (col + 2) | 0) {\n                y = inp[ystart >> 0] | 0;\n                yn = inp[((ystart + width) | 0) >> 0] | 0;\n\n                u = inp[ustart >> 0] | 0;\n                v = inp[vstart >> 0] | 0;\n\n                cacheAdr = (((((y << 16) | 0) + ((u << 8) | 0)) | 0) + v) | 0;\n                o = mem32[((cacheStart + cacheAdr) | 0) >> 2] | 0;\n                if (o) {\n                } else {\n                    o = yuv2rgbcalc(y, u, v) | 0;\n                    mem32[((cacheStart + cacheAdr) | 0) >> 2] = o | 0;\n                }\n                mem32[ostart >> 2] = o;\n\n                cacheAdr = (((((yn << 16) | 0) + ((u << 8) | 0)) | 0) + v) | 0;\n                o = mem32[((cacheStart + cacheAdr) | 0) >> 2] | 0;\n                if (o) {\n                } else {\n                    o = yuv2rgbcalc(yn, u, v) | 0;\n                    mem32[((cacheStart + cacheAdr) | 0) >> 2] = o | 0;\n                }\n                mem32[((ostart + widthFour) | 0) >> 2] = o;\n\n                //yuv2rgb5(y, u, v, ostart);\n                //yuv2rgb5(yn, u, v, (ostart + widthFour)|0);\n                ostart = (ostart + 4) | 0;\n\n                // next step only for y. u and v stay the same\n                ystart = (ystart + 1) | 0;\n                y = inp[ystart >> 0] | 0;\n                yn = inp[((ystart + width) | 0) >> 0] | 0;\n\n                //yuv2rgb5(y, u, v, ostart);\n                cacheAdr = (((((y << 16) | 0) + ((u << 8) | 0)) | 0) + v) | 0;\n                o = mem32[((cacheStart + cacheAdr) | 0) >> 2] | 0;\n                if (o) {\n                } else {\n                    o = yuv2rgbcalc(y, u, v) | 0;\n                    mem32[((cacheStart + cacheAdr) | 0) >> 2] = o | 0;\n                }\n                mem32[ostart >> 2] = o;\n\n                //yuv2rgb5(yn, u, v, (ostart + widthFour)|0);\n                cacheAdr = (((((yn << 16) | 0) + ((u << 8) | 0)) | 0) + v) | 0;\n                o = mem32[((cacheStart + cacheAdr) | 0) >> 2] | 0;\n                if (o) {\n                } else {\n                    o = yuv2rgbcalc(yn, u, v) | 0;\n                    mem32[((cacheStart + cacheAdr) | 0) >> 2] = o | 0;\n                }\n                mem32[((ostart + widthFour) | 0) >> 2] = o;\n                ostart = (ostart + 4) | 0;\n\n                //all positions inc 1\n\n                ystart = (ystart + 1) | 0;\n                ustart = (ustart + 1) | 0;\n                vstart = (vstart + 1) | 0;\n            }\n            ostart = (ostart + widthFour) | 0;\n            ystart = (ystart + width) | 0;\n        }\n    }\n\n    function yuv2rgbcalc(y, u, v) {\n        y = y | 0;\n        u = u | 0;\n        v = v | 0;\n\n        var r = 0;\n        var g = 0;\n        var b = 0;\n\n        var o = 0;\n\n        var a0 = 0;\n        var a1 = 0;\n        var a2 = 0;\n        var a3 = 0;\n        var a4 = 0;\n\n        a0 = imul(1192, (y - 16) | 0) | 0;\n        a1 = imul(1634, (v - 128) | 0) | 0;\n        a2 = imul(832, (v - 128) | 0) | 0;\n        a3 = imul(400, (u - 128) | 0) | 0;\n        a4 = imul(2066, (u - 128) | 0) | 0;\n\n        r = (((a0 + a1) | 0) >> 10) | 0;\n        g = (((((a0 - a2) | 0) - a3) | 0) >> 10) | 0;\n        b = (((a0 + a4) | 0) >> 10) | 0;\n\n        if ((((r & 255) | 0) != (r | 0)) | 0) {\n            r = min(255, max(0, r | 0) | 0) | 0;\n        }\n        if ((((g & 255) | 0) != (g | 0)) | 0) {\n            g = min(255, max(0, g | 0) | 0) | 0;\n        }\n        if ((((b & 255) | 0) != (b | 0)) | 0) {\n            b = min(255, max(0, b | 0) | 0) | 0;\n        }\n\n        o = 255;\n        o = (o << 8) | 0;\n        o = (o + b) | 0;\n        o = (o << 8) | 0;\n        o = (o + g) | 0;\n        o = (o << 8) | 0;\n        o = (o + r) | 0;\n\n        return o | 0;\n    }\n\n    return {\n        init: init,\n        doit: doit,\n    };\n}\n\n/*\n  potential worker initialization\n\n*/\n\nif (typeof self != \"undefined\") {\n    var isWorker = false;\n    var decoder;\n    var reuseMemory = false;\n    var sliceMode = false;\n    var sliceNum = 0;\n    var sliceCnt = 0;\n    var lastSliceNum = 0;\n    var sliceInfoAr;\n    var lastBuf;\n    var awaiting = 0;\n    var pile = [];\n    var startDecoding;\n    var finishDecoding;\n    var timeDecoding;\n\n    var memAr = [];\n    var getMem = function (length) {\n        if (memAr.length) {\n            var u = memAr.shift();\n            while (u && u.byteLength !== length) {\n                u = memAr.shift();\n            }\n            if (u) {\n                return u;\n            }\n        }\n        return new ArrayBuffer(length);\n    };\n\n    var copySlice = function (source, target, infoAr, width, height) {\n        var length = width * height;\n        var length4 = length / 4;\n        var plane2 = length;\n        var plane3 = length + length4;\n\n        var copy16 = function (parBegin, parEnd) {\n            var i = 0;\n            for (i = 0; i < 16; ++i) {\n                var begin = parBegin + width * i;\n                var end = parEnd + width * i;\n                target.set(source.subarray(begin, end), begin);\n            }\n        };\n        var copy8 = function (parBegin, parEnd) {\n            var i = 0;\n            for (i = 0; i < 8; ++i) {\n                var begin = parBegin + (width / 2) * i;\n                var end = parEnd + (width / 2) * i;\n                target.set(source.subarray(begin, end), begin);\n            }\n        };\n        var copyChunk = function (begin, end) {\n            target.set(source.subarray(begin, end), begin);\n        };\n\n        var begin = infoAr[0];\n        var end = infoAr[1];\n        if (end > 0) {\n            copy16(begin, end);\n            copy8(infoAr[2], infoAr[3]);\n            copy8(infoAr[4], infoAr[5]);\n        }\n        begin = infoAr[6];\n        end = infoAr[7];\n        if (end > 0) {\n            copy16(begin, end);\n            copy8(infoAr[8], infoAr[9]);\n            copy8(infoAr[10], infoAr[11]);\n        }\n\n        begin = infoAr[12];\n        end = infoAr[15];\n        if (end > 0) {\n            copyChunk(begin, end);\n            copyChunk(infoAr[13], infoAr[16]);\n            copyChunk(infoAr[14], infoAr[17]);\n        }\n    };\n\n    var sliceMsgFun = function () {};\n\n    var setSliceCnt = function (parSliceCnt) {\n        sliceCnt = parSliceCnt;\n        lastSliceNum = sliceCnt - 1;\n    };\n\n    self.addEventListener(\n        \"message\",\n        function (e) {\n            if (isWorker) {\n                if (reuseMemory) {\n                    if (e.data.reuse) {\n                        memAr.push(e.data.reuse);\n                    }\n                }\n                if (e.data.buf) {\n                    if (sliceMode && awaiting !== 0) {\n                        pile.push(e.data);\n                    } else {\n                        decoder.decode(\n                            new Uint8Array(e.data.buf, e.data.offset || 0, e.data.length),\n                            e.data.info,\n                            function () {\n                                if (sliceMode && sliceNum !== lastSliceNum) {\n                                    postMessage(e.data, [e.data.buf]);\n                                }\n                            },\n                        );\n                    }\n                    return;\n                }\n\n                if (e.data.slice) {\n                    // update ref pic\n                    var copyStart = nowValue();\n                    copySlice(\n                        new Uint8Array(e.data.slice),\n                        lastBuf,\n                        e.data.infos[0].sliceInfoAr,\n                        e.data.width,\n                        e.data.height,\n                    );\n                    // is it the one? then we need to update it\n                    if (e.data.theOne) {\n                        copySlice(lastBuf, new Uint8Array(e.data.slice), sliceInfoAr, e.data.width, e.data.height);\n                        if (timeDecoding > e.data.infos[0].timeDecoding) {\n                            e.data.infos[0].timeDecoding = timeDecoding;\n                        }\n                        e.data.infos[0].timeCopy += nowValue() - copyStart;\n                    }\n                    // move on\n                    postMessage(e.data, [e.data.slice]);\n\n                    // next frame in the pipe?\n                    awaiting -= 1;\n                    if (awaiting === 0 && pile.length) {\n                        var data = pile.shift();\n                        decoder.decode(new Uint8Array(data.buf, data.offset || 0, data.length), data.info, function () {\n                            if (sliceMode && sliceNum !== lastSliceNum) {\n                                postMessage(data, [data.buf]);\n                            }\n                        });\n                    }\n                    return;\n                }\n\n                if (e.data.setSliceCnt) {\n                    setSliceCnt(e.data.sliceCnt);\n                    return;\n                }\n            } else {\n                if (e.data && e.data.type === \"Broadway.js - Worker init\") {\n                    isWorker = true;\n                    decoder = new Decoder(e.data.options);\n\n                    if (e.data.options.sliceMode) {\n                        reuseMemory = true;\n                        sliceMode = true;\n                        sliceNum = e.data.options.sliceNum;\n                        setSliceCnt(e.data.options.sliceCnt);\n\n                        decoder.onPictureDecoded = function (buffer, width, height, infos) {\n                            // buffer needs to be copied because we give up ownership\n                            var copyU8 = new Uint8Array(getMem(buffer.length));\n                            copySlice(buffer, copyU8, infos[0].sliceInfoAr, width, height);\n\n                            startDecoding = infos[0].startDecoding;\n                            finishDecoding = infos[0].finishDecoding;\n                            timeDecoding = finishDecoding - startDecoding;\n                            infos[0].timeDecoding = timeDecoding;\n                            infos[0].timeCopy = 0;\n\n                            postMessage(\n                                {\n                                    slice: copyU8.buffer,\n                                    sliceNum: sliceNum,\n                                    width: width,\n                                    height: height,\n                                    infos: infos,\n                                },\n                                [copyU8.buffer],\n                            ); // 2nd parameter is used to indicate transfer of ownership\n\n                            awaiting = sliceCnt - 1;\n\n                            lastBuf = buffer;\n                            sliceInfoAr = infos[0].sliceInfoAr;\n                        };\n                    } else if (e.data.options.reuseMemory) {\n                        reuseMemory = true;\n                        decoder.onPictureDecoded = function (buffer, width, height, infos) {\n                            // buffer needs to be copied because we give up ownership\n                            var copyU8 = new Uint8Array(getMem(buffer.length));\n                            copyU8.set(buffer, 0, buffer.length);\n\n                            postMessage(\n                                {\n                                    buf: copyU8.buffer,\n                                    length: buffer.length,\n                                    width: width,\n                                    height: height,\n                                    infos: infos,\n                                },\n                                [copyU8.buffer],\n                            ); // 2nd parameter is used to indicate transfer of ownership\n                        };\n                    } else {\n                        decoder.onPictureDecoded = function (buffer, width, height, infos) {\n                            if (buffer) {\n                                buffer = new Uint8Array(buffer);\n                            }\n\n                            // buffer needs to be copied because we give up ownership\n                            var copyU8 = new Uint8Array(buffer.length);\n                            copyU8.set(buffer, 0, buffer.length);\n\n                            postMessage(\n                                {\n                                    buf: copyU8.buffer,\n                                    length: buffer.length,\n                                    width: width,\n                                    height: height,\n                                    infos: infos,\n                                },\n                                [copyU8.buffer],\n                            ); // 2nd parameter is used to indicate transfer of ownership\n                        };\n                    }\n                    postMessage({ consoleLog: \"broadway worker initialized\" });\n                }\n            }\n        },\n        false,\n    );\n}\n\nDecoder.nowValue = nowValue;\n\nexport default Decoder;\n", "//------------------------------------------------------------------------------\nimport type { Enums, Vec2i } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\n//@ts-expect-error - Broadway is not a module\nimport BWDecoder from \"../../../external/Decoder.js\";\n//@ts-expect-error - YUVCanvas is not a module\nimport YUVCanvas from \"../../../external/YUVCanvas.js\";\n\n//------------------------------------------------------------------------------\nimport { FrameMetaData } from \"./FrameMetaData.js\";\nimport { EncodedFrame, EncodedFrameConsumer } from \"./EncodedFrameConsumer.js\";\nimport { DecodedFrameConsumer } from \"./DecodedFrameConsumer.js\";\n\n/**\n * @internal\n */\ninterface YUVCanvas {\n    /**\n     *\n     */\n    width: number;\n\n    /**\n     *\n     */\n    height: number;\n\n    /**\n     *\n     */\n    constructor: (_: { canvas: OffscreenCanvas; width: number; height: number }) => void;\n\n    /**\n     *\n     */\n    drawNextOutputPicture: (_: {\n        yData: Uint8Array;\n        uData: Uint8Array;\n        vData: Uint8Array;\n        yDataPerRow: number;\n        yRowCnt: number;\n        uDataPerRow: number;\n        uRowCnt: number;\n    }) => void;\n}\n\n/**\n * @internal\n */\ninterface IBWDecoder {\n    /**\n     *\n     */\n    onPictureDecoded: (_: Uint8Array, width: number, height: number, infos: [FrameMetaData]) => void;\n\n    /**\n     *\n     */\n    decode: (_: Uint8Array, __: FrameMetaData) => void;\n}\n\n/**\n * Software decoder that uses Broadway.js to decode h264 encoded frames.\n *\n * This decoder is not recommended for production use.\n * It is not optimized for performance.\n * It is mainly provided as a reference implementation.\n *\n * As a last resort, it can be used as a fallback when hardware decoding is not available.\n *\n * @see https://github.com/mbebenita/Broadway\n *\n * @category Streaming\n */\nexport class SoftwareDecoder extends EncodedFrameConsumer {\n    /**\n     * Broadway software decoder instance.\n     */\n    #broadway_sw_decoder: IBWDecoder = new BWDecoder();\n\n    /**\n     * Offscreen canvas to draw the decoded frame.\n     */\n    #offscreen_canvas: OffscreenCanvas | null = null;\n\n    /**\n     * YUV canvas to draw and convert the decoded frame to RGB.\n     */\n    #yuv_canvas: YUVCanvas | null = null;\n\n    /**\n     * Create a new software decoder.\n     *\n     * @param params\n     * @param params.decoded_frame_consumer - The decoded frame consumer that will receive the decoded frames\n     */\n    constructor({ decoded_frame_consumer }: { decoded_frame_consumer: DecodedFrameConsumer }) {\n        super({ decoded_frame_consumer });\n    }\n\n    /**\n     * Configure the decoder with the codec and frame dimensions.\n     * This method replaces the constructor to allow for async initialization.\n     *\n     * @param params\n     * @param params.codec - The codec used to encode the frames\n     * @param params.frame_dimensions - The dimensions of the frame\n     *\n     * @returns Returns a promise to `this` so that the method can be chained to the constructor.\n     */\n    override configure({\n        codec,\n        frame_dimensions,\n    }: {\n        codec: Enums.CodecType;\n        frame_dimensions: Vec2i;\n    }): Promise<EncodedFrameConsumer> {\n        if (codec !== \"h264\") {\n            throw new Error(\"Software decoder supports only h264 encoding\");\n        }\n\n        this.#offscreen_canvas = new OffscreenCanvas(frame_dimensions[0], frame_dimensions[1]);\n\n        this.#yuv_canvas = new YUVCanvas({\n            canvas: this.#offscreen_canvas,\n            width: frame_dimensions[0],\n            height: frame_dimensions[1],\n        });\n\n        this.#broadway_sw_decoder.onPictureDecoded = this.#onFrameDecoded;\n\n        return Promise.resolve(this);\n    }\n\n    /**\n     * Resize the decoder with the new frame dimensions.\n     *\n     * @param params\n     * @param params.frame_dimensions - The new frame dimensions\n     */\n    override resize({ frame_dimensions }: { frame_dimensions: Vec2i }): void {\n        if (this.#offscreen_canvas) {\n            this.#offscreen_canvas.width = frame_dimensions[0];\n            this.#offscreen_canvas.height = frame_dimensions[1];\n        }\n\n        if (this.#yuv_canvas) {\n            this.#yuv_canvas.width = frame_dimensions[0];\n            this.#yuv_canvas.height = frame_dimensions[1];\n        }\n    }\n\n    /**\n     * Release any resources used by the decoder.\n     */\n    override release(): void {}\n\n    /**\n     * Consume an encoded frame.\n     * Called as soon as a frame is received.\n     *\n     * @param params\n     * @param params.encoded_frame - The encoded frame data\n     * @param params.meta_data - The frame meta data\n     */\n    override consumeEncodedFrame({ encoded_frame }: { encoded_frame: EncodedFrame }): void {\n        const data = new Uint8Array(\n            encoded_frame.video_stream.buffer,\n            encoded_frame.video_stream.byteOffset,\n            encoded_frame.video_stream.byteLength,\n        );\n        this.#broadway_sw_decoder.decode(data, encoded_frame.meta_data);\n    }\n\n    /**\n     *\n     */\n    #onFrameDecoded = (decoded_frame: Uint8Array, width: number, height: number, infos: [FrameMetaData]): void => {\n        const yDataPerRow = width;\n        const yRowCnt = height;\n        const uDataPerRow = width / 2;\n        const uRowCnt = height / 2;\n\n        const yChannelSize = yDataPerRow * yRowCnt;\n        const uvChannelSize = uDataPerRow * uRowCnt;\n\n        this.#yuv_canvas!.drawNextOutputPicture({\n            yData: decoded_frame.subarray(0, yChannelSize),\n            uData: decoded_frame.subarray(yChannelSize, yChannelSize + uvChannelSize),\n            vData: decoded_frame.subarray(yChannelSize + uvChannelSize, yChannelSize + uvChannelSize + uvChannelSize),\n\n            yDataPerRow,\n            yRowCnt,\n            uDataPerRow,\n            uRowCnt,\n        });\n\n        const meta_data = infos[0];\n        super._onFrameDecoded({\n            decoded_frame: {\n                pixels: this.#offscreen_canvas!,\n                dimensions_in_pixels: [width, height],\n                meta_data,\n            },\n        });\n    };\n}\n", "//------------------------------------------------------------------------------\nimport type { Enums, Vec2i } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport type { FrameMetaData } from \"./FrameMetaData\";\nimport type { DecodedFrameConsumer } from \"./DecodedFrameConsumer\";\n\n/**\n * @category Streaming\n */\nexport type EncodedFrame = {\n    /**\n     * The encoded frame data.\n     */\n    video_stream: DataView;\n\n    /**\n     * Meta data about the frame.\n     */\n    meta_data: FrameMetaData;\n};\n\n/**\n * @category Streaming\n */\nexport type DecodedFrame = {\n    /**\n     * The decoded frame data.\n     */\n    pixels: VideoFrame | OffscreenCanvas;\n\n    /**\n     * Frame dimensions in pixels.\n     */\n    dimensions_in_pixels: Vec2i;\n\n    /**\n     * Meta data about the frame.\n     */\n    meta_data: FrameMetaData;\n};\n\n/**\n * A base class for consuming encoded frames.\n *\n * ```mermaid\n * flowchart LR\n *   A(Renderer) -->|Network Packet| B(Core)\n *   B -->|Encoded Frame| C(EncodedFrameConsumer)\n *   C -->|Decoded Frame| D(DecodedFrameConsumer)\n *   style C fill:#191,stroke:#333,stroke-width:4px\n * ```\n *\n * This class can be extended to create custom encoded frame consumers.\n *\n * As an example, a custom consumer could be created to embed the encoded frames\n * in a video container format like MP4.\n *\n * {@link WebCodecsDecoder} and {@link SoftwareDecoder} are examples of classes that extend this class.\n *\n * @category Streaming\n */\nexport abstract class EncodedFrameConsumer {\n    /**\n     * The decoded frame consumer that will consume the decoded frames.\n     */\n    #decoded_frame_consumer: DecodedFrameConsumer | null = null;\n\n    /**\n     * Create a new encoded frame consumer.\n     *\n     * @param params\n     * @param params.decoded_frame_consumer - The decoded frame consumer that will receive the decoded frames\n     */\n    constructor({ decoded_frame_consumer }: { decoded_frame_consumer: DecodedFrameConsumer | null }) {\n        this.#decoded_frame_consumer = decoded_frame_consumer;\n    }\n\n    /**\n     * Configure the consumer with the codec and frame dimensions.\n     *\n     * This method replaces the constructor to allow for async initialization.\n     *\n     * This method should be called before any frames are consumed.\n     *\n     * The consumer should be ready to consume frames after this method is called.\n     *\n     * @param params\n     * @param params.codec - The codec used to encode the frames\n     * @param params.frame_dimensions - The dimensions of the frame\n     *\n     * @returns Must return a promise to `this` so that the method can be chained to the constructor:\n     * ```typescript\n     * const consumer = new MyConsumer().configure({ codec, frame_dimensions });\n     * ```\n     */\n    abstract configure({\n        codec,\n        frame_dimensions,\n    }: {\n        codec: Enums.CodecType;\n        frame_dimensions: Vec2i;\n    }): Promise<EncodedFrameConsumer>;\n\n    /**\n     * Resize the consumer with the new frame dimensions.\n     *\n     * @param params\n     * @param params.frame_dimensions - The new frame dimensions\n     */\n    abstract resize({ frame_dimensions }: { frame_dimensions: Vec2i }): void;\n\n    /**\n     * Release any resources used by the consumer.\n     */\n    abstract release(): void;\n\n    /**\n     * Consume an encoded frame. Called as soon as a frame is received.\n     *\n     * @param params\n     * @param params.encoded_frame - The encoded frame data\n     */\n    abstract consumeEncodedFrame({ encoded_frame }: { encoded_frame: EncodedFrame }): void;\n\n    /**\n     * Must be called by the implementation as soon as the frame is decoded to update the cameras in the scene.\n     *\n     * @param frame - The decoded frame data\n     * @param frame.meta_data - The frame meta data\n     * @param frame.decoded_frame - The decoded frame data\n     */\n    protected _onFrameDecoded({ decoded_frame }: { decoded_frame: DecodedFrame }): void {\n        this.#applyFrameMetaData({ meta_data: decoded_frame.meta_data });\n        this.#decoded_frame_consumer?.consumeDecodedFrame({ decoded_frame });\n    }\n\n    /**\n     * Apply the frame meta data to the cameras in the scene.\n     */\n    #applyFrameMetaData({ meta_data }: { meta_data: FrameMetaData }): void {\n        this.#setNotControlledCamerasGlobalTransform({ meta_data });\n\n        for (const frame_camera_transform of meta_data.viewport_layout_camera_entities) {\n            frame_camera_transform.viewport.camera_projection?.updateFromFrameCameraTransform({\n                frame_camera_transform,\n            });\n        }\n    }\n\n    /**\n     * Set the global transform of the cameras that are not controlled by the current client.\n     */\n    #setNotControlledCamerasGlobalTransform({ meta_data }: { meta_data: FrameMetaData }): void {\n        for (const { camera_entity, world_position, world_orientation } of meta_data.other_clients_camera_entities) {\n            camera_entity._setGlobalTransform({\n                global_transform: { position: world_position, orientation: world_orientation },\n                change_source: \"external\",\n            });\n        }\n    }\n}\n", "//------------------------------------------------------------------------------\nimport type { Enums, Vec2i } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { FrameMetaData } from \"./FrameMetaData\";\nimport { EncodedFrame, EncodedFrameConsumer } from \"./EncodedFrameConsumer\";\nimport { DecodedFrameConsumer } from \"./DecodedFrameConsumer\";\n\n/**\n * A decoder that uses the WebCodecs API to decode video frames.\n *\n * This decoder is hardware accelerated (if supported) and is the most efficient\n * way to decode video frames.\n *\n * This decoder is only available in browsers that support the WebCodecs API.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebCodecs_API\n *\n * @category Streaming\n */\nexport class WebCodecsDecoder extends EncodedFrameConsumer {\n    /**\n     * Find a supported codec that can be decoded by the WebCodecs API.\n     *\n     * This method can be used to check if the WebCodecs API is supported by the browser.\n     *\n     * If the WebCodecs API is not supported, this method will return null.\n     *\n     * If the WebCodecs API is supported, this method will return the best codec that is supported by the browser.\n     *\n     * If no codec is supported by the browser, this method will return null.\n     *\n     * @returns The codec that is supported by the browser, or null if the WebCodecs API is not supported or no codec is supported by the browser.\n     */\n    public static async findSupportedCodec(): Promise<Enums.CodecType | null> {\n        if (typeof VideoDecoder === \"undefined\") {\n            console.debug(\"WebCodecs not supported\");\n            return null;\n        }\n\n        for (const codec of this.#codecs.keys()) {\n            const supportedConfig = await WebCodecsDecoder.#findSupportedConfig({ codec });\n            if (supportedConfig) {\n                console.debug(\"Found a supported codec\", supportedConfig.codec);\n                return codec;\n            }\n        }\n\n        console.debug(\"No supported web codec found\");\n        return null;\n    }\n\n    /**\n     * A map of codecs supported by Livelink.core and their corresponding WebCodecs codec strings.\n     */\n    static get #codecs(): ReadonlyMap<Enums.CodecType, string[]> {\n        return Object.freeze(\n            new Map<Enums.CodecType, string[]>([\n                [\"h265\", [\"hvc1.1.6.L123.00\"]],\n                [\"h264\", [\"avc1.42001E\", \"avc1.42002A\", \"avc1.42E01E\", \"avc1.64001f\", \"avc1.42002A\"]],\n            ]),\n        );\n    }\n\n    /**\n     * Find a supported configuration for the given codec and frame dimensions.\n     */\n    static async #findSupportedConfig({\n        codec,\n        frame_dimensions,\n    }: {\n        codec: Enums.CodecType;\n        frame_dimensions?: Vec2i;\n    }): Promise<VideoDecoderConfig | null> {\n        if (typeof VideoDecoder === \"undefined\") {\n            return null;\n        }\n\n        if (!WebCodecsDecoder.#codecs.has(codec)) {\n            return null;\n        }\n\n        const codecs = WebCodecsDecoder.#codecs.get(codec)!;\n        const config: VideoDecoderConfig = {\n            codec: \"\",\n            codedWidth: frame_dimensions?.[0],\n            codedHeight: frame_dimensions?.[1],\n            optimizeForLatency: true,\n        };\n\n        const hardwareAccelerations = [\"prefer-hardware\", \"prefer-software\", \"no-preference\"] as const;\n\n        for (const hardwareAcceleration of hardwareAccelerations) {\n            // Skipping hardware decoding for H264, as it has delay issues.\n            if (codec === \"h264\" && hardwareAcceleration === \"prefer-hardware\") {\n                continue;\n            }\n\n            for (const hXXX_codec of codecs) {\n                config.codec = hXXX_codec;\n                const supportedConfig = await VideoDecoder.isConfigSupported({ ...config, hardwareAcceleration });\n                if (supportedConfig.supported && supportedConfig.config) {\n                    return supportedConfig.config;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * The decoder instance.\n     */\n    #decoder: VideoDecoder | null = null;\n\n    /**\n     *\n     */\n    #video_decoder_config: VideoDecoderConfig | null = null;\n\n    /**\n     * A flag to indicate if the first frame has been received.\n     */\n    #first_frame: boolean = true;\n\n    /**\n     * A stack to store the meta data of the received frames.\n     * Metadata are popped as soon as their corresponding frame is decoded.\n     */\n    #meta_data_map: Map<number, FrameMetaData> = new Map();\n\n    /**\n     * A reference to the last decoded frame.\n     */\n    #last_frame: VideoFrame | null = null;\n\n    /**\n     * Create a new WebCodecsDecoder that will send the decoded frames to the given frame consumer.\n     *\n     * @param frame_consumer - The frame consumer that will receive the decoded frames\n     */\n    constructor({ decoded_frame_consumer }: { decoded_frame_consumer: DecodedFrameConsumer }) {\n        super({ decoded_frame_consumer });\n    }\n\n    /**\n     * Configure the decoder with the codec and frame dimensions.\n     * This method replaces the constructor to allow for async initialization.\n     */\n    override async configure({\n        codec,\n        frame_dimensions,\n    }: {\n        codec: Enums.CodecType;\n        frame_dimensions: Vec2i;\n    }): Promise<EncodedFrameConsumer> {\n        this.release();\n\n        const supportedConfig = await WebCodecsDecoder.#findSupportedConfig({\n            codec,\n            frame_dimensions,\n        });\n\n        if (!supportedConfig) {\n            throw new Error(\"Codec not supported\");\n        }\n\n        this.#decoder = new VideoDecoder({\n            output: this.#onFrameDecoded,\n            error: (e): void => console.error(e.message),\n        });\n\n        this.#video_decoder_config = supportedConfig;\n        this.#decoder.configure(this.#video_decoder_config);\n        console.debug(\"Codec configured\", this.#video_decoder_config);\n\n        return this;\n    }\n\n    /**\n     * Resize the decoder with the new frame dimensions.\n     *\n     * @param params\n     * @param params.frame_dimensions - The new frame dimensions\n     */\n    override resize({ frame_dimensions }: { frame_dimensions: Vec2i }): void {\n        if (this.#decoder && this.#video_decoder_config) {\n            this.#video_decoder_config.codedWidth = frame_dimensions[0];\n            this.#video_decoder_config.codedHeight = frame_dimensions[1];\n            this.#first_frame = false;\n            this.#decoder.configure(this.#video_decoder_config);\n        }\n    }\n\n    /**\n     * Release any resources used by the decoder.\n     */\n    override release(): void {\n        this.#last_frame?.close();\n        this.#decoder?.close();\n    }\n\n    /**\n     * Consume an encoded frame.\n     *\n     * @param params\n     * @param params.encoded_frame - The encoded frame data\n     * @param params.meta_data - The frame meta data\n     */\n    override consumeEncodedFrame({ encoded_frame }: { encoded_frame: EncodedFrame }): void {\n        const chunk = new EncodedVideoChunk({\n            timestamp: encoded_frame.meta_data.frame_counter,\n            type: this.#first_frame ? \"key\" : \"delta\",\n            data: new Uint8Array(\n                encoded_frame.video_stream.buffer,\n                encoded_frame.video_stream.byteOffset,\n                encoded_frame.video_stream.byteLength,\n            ),\n        });\n\n        this.#first_frame = false;\n        this.#meta_data_map.set(encoded_frame.meta_data.frame_counter, encoded_frame.meta_data);\n        this.#decoder!.decode(chunk);\n    }\n\n    /**\n     * Called when a frame is decoded.\n     */\n    #onFrameDecoded = (decoded_frame: VideoFrame): void => {\n        if (this.#last_frame) {\n            this.#last_frame.close();\n        }\n\n        const meta_data = this.#meta_data_map.get(decoded_frame.timestamp);\n        if (!meta_data) {\n            console.error(\"No meta data for frame\", decoded_frame.timestamp);\n            return;\n        }\n\n        super._onFrameDecoded({\n            decoded_frame: {\n                pixels: decoded_frame,\n                dimensions_in_pixels: [decoded_frame.displayWidth, decoded_frame.displayHeight],\n                meta_data,\n            },\n        });\n        this.#meta_data_map.delete(decoded_frame.timestamp);\n        this.#last_frame = decoded_frame;\n    };\n}\n", "import type { RelativeRect } from \"../surfaces/Rect\";\nimport type { DecodedFrame } from \"../streaming/EncodedFrameConsumer\";\n\n/**\n * @category Rendering Contexts\n */\nexport type FrameSection = DecodedFrame & { section: RelativeRect };\n\n/**\n * @category Rendering Contexts\n */\nexport abstract class ContextProvider {\n    /**\n     *\n     */\n    abstract drawFrameSection({\n        frame_section,\n        viewport,\n    }: {\n        frame_section: FrameSection;\n        viewport: RelativeRect;\n    }): void;\n\n    /**\n     *\n     */\n    refreshSize(): void {}\n\n    /**\n     *\n     */\n    abstract release(): void;\n}\n", "import { ContextProvider, type FrameSection } from \"./ContextProvider\";\nimport type { RelativeRect } from \"../surfaces/Rect\";\n\n/**\n * @category Rendering Contexts\n */\nexport class Context2D extends ContextProvider {\n    private _canvas: HTMLCanvasElement;\n    private _context2D: CanvasRenderingContext2D;\n\n    /**\n     *\n     */\n    constructor(canvas: HTMLCanvasElement, context_attributes?: CanvasRenderingContext2DSettings) {\n        super();\n\n        const context = canvas.getContext(\"2d\", context_attributes);\n        if (context === null) {\n            throw new Error(`Cannot create a 2d context from canvas ${canvas}`);\n        }\n        this._canvas = canvas;\n        this._context2D = context;\n    }\n\n    /**\n     *\n     */\n    drawFrameSection({ frame_section, viewport }: { frame_section: FrameSection; viewport: RelativeRect }): void {\n        const frame_offset_left = frame_section.section.left * frame_section.dimensions_in_pixels[0];\n        const frame_offset_top = frame_section.section.top * frame_section.dimensions_in_pixels[1];\n        const frame_width = frame_section.section.width * frame_section.dimensions_in_pixels[0];\n        const frame_height = frame_section.section.height * frame_section.dimensions_in_pixels[1];\n\n        const viewport_offset_left = viewport.left * this._canvas.width;\n        const viewport_offset_top = viewport.top * this._canvas.height;\n        const viewport_width = viewport.width * this._canvas.width;\n        const viewport_height = viewport.height * this._canvas.height;\n\n        this._context2D.drawImage(\n            frame_section.pixels,\n            frame_offset_left,\n            frame_offset_top,\n            frame_width,\n            frame_height,\n            viewport_offset_left,\n            viewport_offset_top,\n            viewport_width,\n            viewport_height,\n        );\n    }\n\n    /**\n     *\n     */\n    release(): void {\n        this._context2D.reset();\n    }\n}\n", "import { ContextProvider, type FrameSection } from \"./ContextProvider\";\n\n/**\n * @category Rendering Surfaces\n */\nexport type Canvas = HTMLCanvasElement | OffscreenCanvas;\n\n/**\n * @category Rendering Contexts\n */\nexport class ContextWebGL extends ContextProvider {\n    /**\n     *\n     */\n    private _canvas: Canvas;\n\n    /**\n     *\n     */\n    private _context: WebGLRenderingContext | WebGL2RenderingContext;\n\n    /**\n     * The WebGLRenderingContext of the canvas\n     */\n    private _texture_ref: WebGLTexture | null = null;\n\n    /**\n     * The WebGLRenderingContext of the canvas\n     */\n    private _shader_program: WebGLProgram | null = null;\n\n    /**\n     * The alternative frame buffer to draw on.\n     */\n    private _frame_buffer: WebGLFramebuffer | null = null;\n\n    /**\n     *\n     */\n    get native(): WebGLRenderingContext | WebGL2RenderingContext {\n        return this._context;\n    }\n\n    /**\n     *\n     */\n    set frame_buffer(fb: WebGLFramebuffer) {\n        this._frame_buffer = fb;\n    }\n\n    /**\n     *\n     */\n    constructor(\n        canvas: Canvas,\n        version: \"webgl\" | \"webgl2\" = \"webgl\",\n        context_attributes?: WebGLContextAttributes & { xrCompatible?: boolean },\n    ) {\n        super();\n\n        const context = canvas.getContext(version, context_attributes);\n        if (context === null) {\n            throw new Error(`Cannot create a ${version} context from canvas`);\n        }\n\n        this._canvas = canvas;\n        this._context = version === \"webgl\" ? (context as WebGLRenderingContext) : (context as WebGL2RenderingContext);\n\n        this._initShaderProgram();\n        this._initBuffers();\n        this._initTexture();\n    }\n\n    /**\n     *\n     */\n    drawFrameSection({ frame_section }: { frame_section: FrameSection }): void {\n        const gl = this._context;\n\n        if (this._frame_buffer !== null) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._frame_buffer);\n        }\n\n        gl.clearColor(1, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        const ls = gl.getUniformLocation(this._shader_program!, \"size\");\n        const lo = gl.getUniformLocation(this._shader_program!, \"offset\");\n        gl.uniform2fv(ls, [frame_section.section.width, frame_section.section.height]);\n        gl.uniform2fv(lo, [frame_section.section.left, frame_section.section.top]);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture_ref);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, frame_section.pixels);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    /**\n     *\n     */\n    override refreshSize(): void {\n        this._context.viewport(0, 0, this._canvas.width, this._canvas.height);\n    }\n\n    /**\n     *\n     */\n    release(): void {\n        const gl = this._context;\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n\n    /**\n     *\n     */\n    private _initShaderProgram(): void {\n        const gl = this._context!;\n        // Vertex shader\n        const vertex_shader_source = `\n            attribute vec2 position;\n            varying vec2 texCoord;\n            uniform vec2 size;\n            uniform vec2 offset;\n\n            void main() {\n                texCoord = (position + 1.0) * 0.5;\n                texCoord.y = 1.0 - texCoord.y;\n                texCoord = size * texCoord + offset;\n                gl_Position = vec4(position, 0.0, 1.0);\n            }`;\n        const vertex_shader = gl.createShader(gl.VERTEX_SHADER)!;\n        gl.shaderSource(vertex_shader, vertex_shader_source);\n        gl.compileShader(vertex_shader);\n        if (!gl.getShaderParameter(vertex_shader, gl.COMPILE_STATUS)) {\n            console.error(\"Vertex shader failed to compile: \" + gl.getShaderInfoLog(vertex_shader));\n        }\n\n        // Fragment shader\n        const fragment_shader_source = `\n            precision mediump float;\n            varying vec2 texCoord;\n            uniform sampler2D texture;\n\n            void main() {\n                gl_FragColor = texture2D(texture, texCoord);\n            }`;\n        const fragment_shader = gl.createShader(gl.FRAGMENT_SHADER)!;\n        gl.shaderSource(fragment_shader, fragment_shader_source);\n        gl.compileShader(fragment_shader);\n        if (!gl.getShaderParameter(fragment_shader, gl.COMPILE_STATUS)) {\n            console.error(\"Fragment shader failed to compile: \" + gl.getShaderInfoLog(fragment_shader));\n        }\n\n        // Shader program\n        const shader_program = gl.createProgram()!;\n        gl.attachShader(shader_program, vertex_shader);\n        gl.attachShader(shader_program, fragment_shader);\n        gl.linkProgram(shader_program);\n        gl.useProgram(shader_program);\n        if (!gl.getProgramParameter(shader_program, gl.LINK_STATUS)) {\n            console.error(\"Program failed to compile: \" + gl.getProgramInfoLog(shader_program));\n        }\n        gl.useProgram(shader_program);\n        this._shader_program = shader_program;\n    }\n\n    /**\n     *\n     */\n    private _initBuffers(): void {\n        const gl = this._context!;\n\n        const vertex_buffer = gl.createBuffer();\n        const vertices = new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]);\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertex_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n        const position_attribute_location = gl.getAttribLocation(this._shader_program!, \"position\");\n        gl.enableVertexAttribArray(position_attribute_location);\n        gl.vertexAttribPointer(position_attribute_location, 2, gl.FLOAT, false, 0, 0);\n    }\n\n    /**\n     *\n     */\n    private _initTexture(): void {\n        const gl = this._context!;\n        this._texture_ref = gl.createTexture()!;\n        gl.bindTexture(gl.TEXTURE_2D, this._texture_ref);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        const texture_uniform_location = gl.getUniformLocation(this._shader_program!, \"texture\");\n        gl.uniform1i(texture_uniform_location, 0);\n    }\n}\n", "//------------------------------------------------------------------------------\nimport type { Commands, Vec2 } from \"@3dverse/livelink.core\";\n\n//------------------------------------------------------------------------------\nimport { Rect, RelativeRect } from \"./Rect\";\nimport { Viewport } from \"../camera/Viewport\";\nimport { RenderingSurfaceEvents } from \"./RenderingSurfaceEvents\";\nimport { TypedEventTarget } from \"../../TypedEventTarget\";\nimport { DecodedFrame } from \"../streaming/EncodedFrameConsumer\";\n\n/**\n * Abstract class for rendering surfaces.\n *\n * A rendering surface represents the final destination of the rendered frame.\n *\n * It is usually backed by an HTML Canvas or an OffscreenCanvas.\n *\n * It can be split into multiple viewports, each with its own camera and render target.\n * The rendering surface if responsible for holding the viewports and their configurations.\n *\n * It is finally responsible for drawing the portions of the final frame to its backing element.\n *\n * @category Rendering Surfaces\n */\nexport abstract class RenderingSurfaceBase extends TypedEventTarget<RenderingSurfaceEvents> {\n    /**\n     * List of viewports bound to the current surface.\n     */\n    readonly viewports: Array<Viewport> = [];\n\n    /**\n     *\n     */\n    #last_draw_data: DecodedFrame | null = null;\n\n    /**\n     * Normalized dimensions and offset of the surface relative to the remote rendering surface.\n     */\n    relative_rect: RelativeRect = new RelativeRect({ left: 0, top: 0, width: 1, height: 1 });\n\n    /**\n     * Dimensions of the surface.\n     */\n    get dimensions(): Vec2 {\n        return [this.width, this.height];\n    }\n\n    /**\n     * Width of the surface.\n     */\n    abstract get width(): number;\n\n    /**\n     * Height of the surface.\n     */\n    abstract get height(): number;\n\n    /**\n     * Returns the bounding rectangle of the surface.\n     */\n    abstract getBoundingRect(): Rect;\n\n    /**\n     * Adds a viewport to the current surface.\n     *\n     * Note that the viewport knows which section of the surface it should draw to using\n     * its {@link Viewport.relative_rect} property.\n     *\n     * @param params\n     * @param params.viewport - The viewport to add.\n     */\n    addViewport({ viewport }: { viewport: Viewport }): void {\n        this.viewports.push(viewport);\n    }\n\n    /**\n     * Removes a viewport from the current surface.\n     *\n     * @param params\n     * @param params.viewport - The viewport to remove.\n     */\n    removeViewport({ viewport }: { viewport: Viewport }): void {\n        const index = this.viewports.indexOf(viewport);\n        if (index !== -1) {\n            this.viewports.splice(index, 1);\n        }\n    }\n\n    /**\n     * Releases the resources associated with the current surface.\n     */\n    release(): void {\n        this.#last_draw_data = null;\n        for (const viewport of this.viewports) {\n            viewport.release();\n        }\n    }\n\n    /**\n     * Returns whether the current surface is valid.\n     */\n    isValid(): boolean {\n        return this.viewports.length > 0 && this.viewports.every(v => v.isValid());\n    }\n\n    /**\n     * Draws the portions of the frame associated with the viewports to the backing element.\n     * Keeps a reference to the last frame drawn.\n     *\n     * @param params\n     * @param params.decoded_frame - The frame to draw.\n     */\n    drawFrame({ decoded_frame }: { decoded_frame: DecodedFrame }): void {\n        this.#last_draw_data = decoded_frame;\n        this._drawFrame({ decoded_frame });\n    }\n\n    /**\n     * Redraws the last frame.\n     */\n    redrawLastFrame(): void {\n        if (this.#last_draw_data !== null) {\n            this._drawFrame({ decoded_frame: this.#last_draw_data });\n        }\n    }\n\n    /**\n     * @internal\n     * Returns the viewport configurations for the current surface.\n     */\n    _getViewportConfigs({\n        width,\n        height,\n    }: {\n        width: number;\n        height: number;\n    }): Array<Commands.ViewportConfig & { z_index: number }> {\n        if (!this.isValid()) {\n            throw new Error(\"Invalid config\");\n        }\n\n        const offset_in_remote_surface = [this.relative_rect.left * width, this.relative_rect.top * height];\n\n        return this.viewports.map(viewport => ({\n            camera_rtid: viewport.camera_projection!.camera_entity.rtid,\n            left: (offset_in_remote_surface[0] + viewport.relative_rect.left * this.width) / width,\n            top: (offset_in_remote_surface[1] + viewport.relative_rect.top * this.height) / height,\n            width: viewport.width / width,\n            height: viewport.height / height,\n            render_target_index: viewport.render_target_index,\n            z_index: viewport.z_index,\n        }));\n    }\n\n    /**\n     * @internal\n     *\n     * Draws the portions of the frame associated with the viewports to the backing element.\n     *\n     * @param params\n     * @param params.decoded_frame - The frame to draw.\n     */\n    protected abstract _drawFrame({ decoded_frame }: { decoded_frame: DecodedFrame }): void;\n}\n", "import { Rect } from \"./Rect\";\nimport { RenderingSurfaceBase } from \"./RenderingSurfaceBase\";\n\n/**\n * A virtual rendering surface.\n *\n * A virtual surface is a surface that is not backed by a physical canvas.\n * It is used to represent a surface that is not directly rendered to the screen.\n *\n * Its main usecase is for video recording, where the frame rendered by the server is consumed\n * as is and put directly into a video file.\n *\n * @category Rendering Surfaces\n */\nexport class VirtualSurface extends RenderingSurfaceBase {\n    /**\n     * The bounding rectangle of the surface.\n     */\n    readonly #rect: Rect;\n\n    /**\n     * Width of the surface.\n     */\n    get width(): number {\n        return this.#rect.width;\n    }\n\n    /**\n     * Height of the surface.\n     */\n    get height(): number {\n        return this.#rect.height;\n    }\n\n    /**\n     * Creates a new virtual surface.\n     */\n    constructor({ width, height }: { width: number; height: number }) {\n        super();\n        this.#rect = new Rect({ width, height });\n    }\n\n    /**\n     * Returns the bounding rectangle of the surface.\n     */\n    getBoundingRect(): Rect {\n        return this.#rect;\n    }\n\n    /**\n     * @internal\n     *\n     * Do nothing.\n     */\n    protected _drawFrame(): void {}\n}\n", "import type { Vec2i } from \"@3dverse/livelink.core\";\n\n/**\n * @internal\n *\n * A helper class auto resizing a canvas with debouncing.\n */\nexport class CanvasAutoResizer {\n    /**\n     * The observed canvas.\n     */\n    readonly #canvas: HTMLCanvasElement;\n\n    /**\n     * Observer for resize events.\n     */\n    readonly #observer: ResizeObserver;\n\n    /**\n     * Debounce timeout to avoid spamming the resize command.\n     */\n    #resize_debounce_timeout: ReturnType<typeof setTimeout> | null = null;\n\n    /**\n     * Debounce timeout duration.\n     */\n    #resize_debounce_timeout_duration_in_ms = 500 as const;\n\n    /**\n     * Callback to call when the canvas is resized.\n     */\n    #onResizedCallback: ({ old_size, new_size }: { old_size: Vec2i; new_size: Vec2i }) => void;\n\n    /**\n     * Constructs an auto resizer for the provided canvas.\n     */\n    constructor({\n        canvas,\n        onResized,\n    }: {\n        canvas: HTMLCanvasElement;\n        onResized: ({ old_size, new_size }: { old_size: Vec2i; new_size: Vec2i }) => void;\n    }) {\n        this.#canvas = canvas;\n        this.#observer = new ResizeObserver(this.#onResized);\n        this.#onResizedCallback = onResized;\n\n        // My watch begins...\n        this.#observer.observe(this.#canvas);\n    }\n\n    /**\n     *\n     */\n    release(): void {\n        this.#observer.disconnect();\n    }\n\n    /**\n     * Callback called by the observer when the canvas is resized.\n     */\n    #onResized = (): void => {\n        if (this.#resize_debounce_timeout) {\n            clearTimeout(this.#resize_debounce_timeout);\n        }\n\n        this.#resize_debounce_timeout = setTimeout(this.#resize, this.#resize_debounce_timeout_duration_in_ms);\n    };\n\n    /**\n     * Debounced callback to actually resize the canvas and send an event.\n     */\n    #resize = (): void => {\n        const old_size: Vec2i = [this.#canvas.width, this.#canvas.height];\n\n        this.#canvas.width = this.#canvas.clientWidth;\n        this.#canvas.height = this.#canvas.clientHeight;\n\n        const new_size: Vec2i = [this.#canvas.width, this.#canvas.height];\n\n        if (this.#canvas.width === 0 || this.#canvas.height === 0) {\n            return;\n        }\n\n        if (!this.#haveDimensionsChanged(old_size, new_size)) {\n            return;\n        }\n\n        this.#onResizedCallback({ old_size, new_size });\n    };\n\n    /**\n     *\n     */\n    #haveDimensionsChanged(old_size: Vec2i, new_size: Vec2i): boolean {\n        return old_size.some((element, i) => element !== new_size[i]);\n    }\n}\n", "/**\n * An event that is fired when a rendering surface is resized.\n *\n * @event\n * @noInheritDoc\n * @category Rendering Surfaces\n */\nexport class RenderingSurfaceResizedEvent extends Event {\n    /**\n     * @internal\n     */\n    constructor() {\n        super(\"on-rendering-surface-resized\");\n    }\n}\n\n/**\n * @event\n * @category Rendering Surfaces\n */\nexport type RenderingSurfaceEvents = {\n    \"on-rendering-surface-resized\": RenderingSurfaceResizedEvent;\n};\n", "import { Context2D } from \"../contexts/Context2D\";\nimport { ContextWebGL } from \"../contexts/ContextWebGL\";\nimport { CanvasAutoResizer } from \"./CanvasAutoResizer\";\nimport { RenderingSurfaceBase } from \"./RenderingSurfaceBase\";\nimport { Rect, RelativeRect } from \"./Rect\";\n\nimport type { Vec2i } from \"@3dverse/livelink.core\";\nimport type { ContextProvider } from \"../contexts/ContextProvider\";\nimport { RenderingSurfaceResizedEvent } from \"./RenderingSurfaceEvents\";\nimport { DecodedFrame } from \"../streaming/EncodedFrameConsumer\";\n\n/**\n * @category Rendering Contexts\n */\nexport type CanvasContextAttributes =\n    | CanvasRenderingContext2DSettings\n    | (WebGLContextAttributes & { xrCompatible?: boolean });\n\n/**\n * @category Rendering Contexts\n */\nexport type CanvasContextType = \"2d\" | \"webgl\" | \"webgl2\";\n\n/**\n * A rendering surface backed by an HTML canvas.\n *\n * The context can be specified as either 2D, WebGL or WebGL2 along with its attributes.\n *\n * The canvas is automatically resized to match the size of the HTML element it is attached to.\n *\n * @category Rendering Surfaces\n */\nexport class RenderingSurface extends RenderingSurfaceBase {\n    /**\n     * HTML canvas on which we display the final composited frame.\n     */\n    #canvas: HTMLCanvasElement;\n\n    /**\n     * The context used to draw the frame.\n     */\n    #context: ContextProvider;\n\n    /**\n     * The auto resizer for the canvas.\n     */\n    #auto_resizer: CanvasAutoResizer;\n\n    /**\n     * Width of the surface.\n     */\n    get width(): number {\n        return this.#canvas.clientWidth;\n    }\n\n    /**\n     * Height of the surface.\n     */\n    get height(): number {\n        return this.#canvas.clientHeight;\n    }\n\n    /**\n     * HTML canvas on which the final frame is displayed.\n     */\n    get canvas(): HTMLCanvasElement {\n        return this.#canvas;\n    }\n\n    /**\n     * Creates a new rendering surface.\n     *\n     * @param params\n     * @param params.canvas_element - The HTML canvas element or its id.\n     * @param params.context_type - The type of context to create.\n     * @param params.context_attributes - The attributes of the context.\n     */\n    constructor({\n        canvas_element,\n        context_type,\n        context_attributes,\n    }: {\n        canvas_element: string | HTMLCanvasElement;\n    } & (\n        | { context_type: \"2d\"; context_attributes?: CanvasRenderingContext2DSettings }\n        | {\n              context_type: \"webgl\" | \"webgl2\";\n              context_attributes?: WebGLContextAttributes & { xrCompatible?: boolean };\n          }\n    )) {\n        super();\n\n        const canvas = typeof canvas_element === \"string\" ? document.getElementById(canvas_element) : canvas_element;\n\n        if (canvas === null) {\n            throw new Error(`Cannot find canvas ${canvas_element}`);\n        }\n\n        if (canvas.nodeName !== \"CANVAS\") {\n            throw new Error(`HTML element ${canvas_element} is a '${canvas.nodeName}', it MUST be CANVAS`);\n        }\n\n        this.#canvas = canvas as HTMLCanvasElement;\n        switch (context_type) {\n            case \"2d\":\n                this.#context = new Context2D(this.#canvas);\n                break;\n            case \"webgl\":\n            case \"webgl2\":\n                this.#context = new ContextWebGL(this.#canvas, context_type, context_attributes);\n                break;\n        }\n\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.#auto_resizer = new CanvasAutoResizer({ canvas: this.canvas, onResized: this.#onCanvasResized });\n        this.#context.refreshSize();\n    }\n\n    /**\n     * Releases the resources associated with the surface.\n     */\n    override release(): void {\n        super.release();\n\n        this.#auto_resizer.release();\n        this.#context.release();\n    }\n\n    /**\n     * Returns the context of the surface.\n     */\n    getContext<ContextType extends ContextProvider>(): ContextType {\n        return this.#context as ContextType;\n    }\n\n    /**\n     * Returns the bounding rectangle of the surface.\n     */\n    getBoundingRect(): Rect {\n        const rect = this.canvas.getClientRects()[0];\n        // If the canvas css uses em or % positioning values or the web browser page is zoomed, then the rect might\n        // have floating point values that would differ from the canvas element clientWidth & clientHeight used by\n        // RenderingSurfaceBase.getViewportConfigs(rect.width, rect.height). So it needs to be ceiled to prevent\n        // normalized width or height superior to 1 in the viewport config.\n        if (rect) {\n            rect.x = Math.ceil(rect.x);\n            rect.y = Math.ceil(rect.y);\n            rect.width = Math.ceil(rect.width);\n            rect.height = Math.ceil(rect.height);\n        }\n        return new Rect(rect ?? { width: this.canvas.width, height: this.canvas.height });\n    }\n\n    /**\n     * Draws a frame to the surface.\n     *\n     * @param params\n     * @param params.frame - The frame to draw.\n     * @param params.meta_data - The metadata associated with the frame.\n     */\n    _drawFrame({ decoded_frame }: { decoded_frame: DecodedFrame }): void {\n        this.#context.drawFrameSection({\n            frame_section: {\n                pixels: decoded_frame.pixels,\n                dimensions_in_pixels: decoded_frame.dimensions_in_pixels,\n                meta_data: decoded_frame.meta_data,\n                section: this.relative_rect,\n            },\n            viewport: RelativeRect.default,\n        });\n\n        for (const viewport of this.viewports) {\n            const overlayFrame = viewport._drawOverlays();\n            if (!overlayFrame) {\n                continue;\n            }\n\n            this.#context.drawFrameSection({\n                frame_section: {\n                    pixels: overlayFrame,\n                    dimensions_in_pixels: [overlayFrame.width, overlayFrame.height],\n                    meta_data: decoded_frame.meta_data,\n                    section: RelativeRect.default,\n                },\n                viewport: viewport.relative_rect,\n            });\n        }\n    }\n\n    /**\n     * Resizes the surface.\n     */\n    #onCanvasResized = (_: { old_size: Vec2i; new_size: Vec2i }): void => {\n        this.#context.refreshSize();\n        this._dispatchEvent(new RenderingSurfaceResizedEvent());\n\n        for (const viewport of this.viewports) {\n            viewport._onResize();\n        }\n    };\n}\n", "//------------------------------------------------------------------------------\nimport { Rect, RelativeRect } from \"./Rect\";\nimport { Entity } from \"../../scene/Entity\";\nimport { CanvasContextType } from \"./RenderingSurface\";\nimport { ContextProvider } from \"../contexts/ContextProvider\";\nimport { RenderingSurfaceBase } from \"./RenderingSurfaceBase\";\nimport { RenderingSurfaceResizedEvent } from \"./RenderingSurfaceEvents\";\nimport { DecodedFrame } from \"../streaming/EncodedFrameConsumer\";\n\n/**\n * @category Rendering Surfaces\n */\nexport class OffscreenSurface<ContextType extends CanvasContextType, ContextOptions> extends RenderingSurfaceBase {\n    /**\n     * Virtual canvas on which we display the final composited frame.\n     */\n    #canvas: HTMLCanvasElement;\n\n    /**\n     *\n     */\n    #context: ContextProvider;\n\n    /**\n     *\n     */\n    #resolution_scale: number;\n\n    /**\n     *\n     */\n    constructor({\n        width,\n        height,\n        context_constructor,\n        context_type,\n        context_options,\n        resolution_scale = 1.0,\n    }: {\n        width: number;\n        height: number;\n        context_constructor: new (\n            canvas: HTMLCanvasElement | OffscreenCanvas,\n            context_type: ContextType,\n            options?: ContextOptions,\n        ) => ContextProvider;\n        context_type: ContextType;\n        context_options?: ContextOptions;\n        resolution_scale: number;\n    }) {\n        super();\n\n        this.#canvas = document.createElement(\"canvas\");\n        this.#canvas.width = width;\n        this.#canvas.height = height;\n        this.#context = new context_constructor(this.#canvas, context_type, context_options);\n        this.#resolution_scale = resolution_scale;\n    }\n\n    /**\n     *\n     */\n    get width(): number {\n        return Math.floor(this.#canvas.width * this.#resolution_scale);\n    }\n    /**\n     *\n     */\n    get height(): number {\n        return Math.floor(this.#canvas.height * this.#resolution_scale);\n    }\n\n    /**\n     *\n     */\n    get context(): ContextProvider {\n        return this.#context;\n    }\n\n    /**\n     *\n     */\n    get cameras(): readonly Entity[] {\n        return this.viewports\n            .map(v => (v.camera_projection?.camera_entity ? v.camera_projection.camera_entity : null))\n            .filter(c => c !== null);\n    }\n\n    /**\n     *\n     */\n    override release(): void {\n        super.release();\n        this.#context.release();\n    }\n\n    /**\n     * @internal\n     */\n    protected _drawFrame({ decoded_frame }: { decoded_frame: DecodedFrame }): void {\n        this.#context.drawFrameSection({\n            frame_section: {\n                pixels: decoded_frame.pixels,\n                section: this.relative_rect,\n                dimensions_in_pixels: decoded_frame.dimensions_in_pixels,\n                meta_data: decoded_frame.meta_data,\n            },\n            viewport: RelativeRect.default,\n        });\n    }\n\n    /**\n     *\n     */\n    getBoundingRect(): Rect {\n        return new Rect({ width: this.width, height: this.height });\n    }\n\n    /**\n     *\n     */\n    resize(width: number, height: number): void {\n        this.#canvas.width = width;\n        this.#canvas.height = height;\n        this.#context.refreshSize();\n    }\n\n    /**\n     *\n     */\n    get resolution_scale(): number {\n        return this.#resolution_scale;\n    }\n\n    /**\n     *\n     */\n    set resolution_scale(scale: number) {\n        if (this.#resolution_scale !== scale) {\n            this.#resolution_scale = scale;\n            this._dispatchEvent(new RenderingSurfaceResizedEvent());\n        }\n    }\n}\n", "export type * from \"@3dverse/livelink.core\";\n\nexport * from \"./Livelink\";\n\nexport * from \"./session/Client\";\nexport * from \"./session/Session\";\nexport * from \"./session/ClientInfo\";\nexport * from \"./session/SessionInfo\";\nexport * from \"./session/SessionEvents\";\n\nexport * from \"./scene/Scene\";\nexport * from \"./scene/Entity\";\nexport * from \"./scene/EntityEvents\";\nexport * from \"./scene/ScriptEvents\";\n\nexport * from \"./rendering/camera/Viewport\";\nexport * from \"./rendering/camera/ViewportEvents\";\nexport * from \"./rendering/camera/CameraController\";\nexport * from \"./rendering/camera/CameraControllerPreset\";\nexport * as CameraControllerPresets from \"./rendering/camera/CameraControllerPresets\";\nexport * from \"./rendering/camera/CameraProjection\";\n\nexport * from \"./rendering/streaming/FrameMetaData\";\nexport * from \"./rendering/streaming/SoftwareDecoder\";\nexport * from \"./rendering/streaming/WebCodecsDecoder\";\nexport * from \"./rendering/streaming/EncodedFrameConsumer\";\nexport * from \"./rendering/streaming/DecodedFrameConsumer\";\n\nexport * from \"./rendering/contexts/Context2D\";\nexport * from \"./rendering/contexts/ContextWebGL\";\nexport * from \"./rendering/contexts/ContextProvider\";\n\nexport * from \"./rendering/surfaces/Rect\";\nexport * from \"./rendering/surfaces/VirtualSurface\";\nexport * from \"./rendering/surfaces/RenderingSurface\";\nexport * from \"./rendering/surfaces/OffscreenSurface\";\nexport * from \"./rendering/surfaces/OverlayInterface\";\nexport * from \"./rendering/surfaces/RenderingSurfaceBase\";\nexport * from \"./rendering/surfaces/RenderingSurfaceEvents\";\n\nexport * from \"./inputs/Mouse\";\nexport * from \"./inputs/GamepadInputRelay\";\nexport * from \"./inputs/Keyboard\";\n\nexport type { Transform, Aabb } from \"./scene/EntityTransformHandler\";\n\n//------------------------------------------------------------------------------\ndeclare global {\n    interface Window {\n        __LIVELINK__: Record<string, string>;\n    }\n}\n\nif (typeof window !== \"undefined\") {\n    if (!window.__LIVELINK__) {\n        window.__LIVELINK__ = {};\n    }\n\n    if (Object.prototype.hasOwnProperty.call(window.__LIVELINK__, PACKAGE_NAME)) {\n        console.warn(\"\u26A0\uFE0F WARNING \u26A0\uFE0F Multiple instances of Livelink being imported.\");\n    } else {\n        window.__LIVELINK__[PACKAGE_NAME] = LIVELINK_VERSION;\n    }\n}\n"],
  "mappings": "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",
  "names": ["import_react", "require_YUVCanvas", "__commonJSMin", "exports", "module", "root", "factory", "YUVCanvas", "parOptions", "par", "gl", "texturePosBuffer", "uTexturePosBuffer", "vTexturePosBuffer", "yTextureRef", "uTextureRef", "vTextureRef", "yData", "uData", "vData", "width", "height", "yDataPerRow", "yRowCnt", "uDataPerRow", "uRowCnt", "vDataPerRow", "vRowCnt", "tTop", "tLeft", "tBottom", "tRight", "texturePosValues", "uTexturePosValues", "vTexturePosValues", "textureRef", "data", "dataPerRow", "rowCnt", "canvas", "validContextNames", "nameIndex", "contextName", "vertexShaderScript", "fragmentShaderScript", "YUV2RGB", "vertexShader", "fragmentShader", "program", "YUV2RGBRef", "fakeAlphaEnabledRef", "vertexPosBuffer", "vertexPosRef", "animationTime", "timePassed", "stepTime", "aniFun", "mul", "neg", "pos", "texturePosRef", "uTexturePosRef", "vTexturePosRef", "ySamplerRef", "uSamplerRef", "vSamplerRef", "samplerRef", "croppingParams", "argbData", "ctx", "imageData", "isNode", "DynamicLoader", "_DynamicLoader", "#core", "target", "#importPromise", "#importCore", "dynamicImport", "#createImporter", "LivelinkCore", "TARGET_COLOR", "moduleURL", "source", "vm", "convertRawFrameMetaDataToFrameMetaData", "raw_frame_meta_data", "client_id", "entity_registry", "viewports", "meta_data", "client_meta_data", "is_current_client", "viewport_meta_data", "camera_entity", "viewport", "v", "getWorldPosition", "getWorldQuaternion", "worldMatrix", "quaternion", "m11", "m12", "m13", "m21", "m22", "m23", "m31", "m32", "m33", "trace", "s", "Rect", "_a", "left", "top", "right", "bottom", "#isValid", "InvalidSizeError", "rect", "OutOfBoundsError", "parentRect", "RelativeRect", "#areValuesRelative", "element", "parent", "relativePos", "PRECISION", "_RelativeRect", "RemoteFrameProxy", "core", "#surfaces", "#dimensions", "#size_multiple", "#needs_resize", "#onFrameLayoutModified", "#computeSurfaceSize", "#config", "#next_multiple", "n", "multiple", "result", "surface", "decoded_frame", "#addViewport", "index", "codec", "HEVC_MACROBLOCK_SIZE", "a", "b", "#addSurface", "offset", "#computeBoundingRect", "new_dimensions", "#computeSurfaceDimensions", "min", "max", "clientRect", "common_exports", "__export", "ARRAY_TYPE", "EPSILON", "RANDOM", "equals", "setMatrixArrayType", "toRadian", "type", "degree", "y", "i", "mat3_exports", "add", "adjoint", "clone", "copy", "create", "determinant", "exactEquals", "frob", "fromMat2d", "fromMat4", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "normalFromMat4", "projection", "rotate", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "out", "m00", "m01", "m02", "m10", "m20", "a01", "a02", "a12", "a00", "a10", "a11", "a20", "a21", "a22", "b01", "b11", "b21", "det", "b00", "b02", "b10", "b12", "b20", "b22", "x", "rad", "c", "q", "z", "w", "x2", "y2", "z2", "xx", "yx", "yy", "zx", "zy", "zz", "wx", "wy", "wz", "a03", "a13", "a23", "a30", "a31", "a32", "a33", "b03", "b04", "b05", "b06", "b07", "b08", "b09", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "mat4_exports", "fromQuat2", "fromRotationTranslation", "fromRotationTranslationScale", "fromRotationTranslationScaleOrigin", "fromXRotation", "fromYRotation", "fromZRotation", "frustum", "getRotation", "getScaling", "getTranslation", "lookAt", "ortho", "orthoNO", "orthoZO", "perspective", "perspectiveFromFieldOfView", "perspectiveNO", "perspectiveZO", "rotateX", "rotateY", "rotateZ", "targetTo", "m03", "m30", "axis", "len", "t", "xy", "xz", "yz", "translation", "bx", "by", "bz", "bw", "ax", "ay", "az", "aw", "magnitude", "mat", "scaling", "is1", "is2", "is3", "sm11", "sm12", "sm13", "sm21", "sm22", "sm23", "sm31", "sm32", "sm33", "S", "sx", "sy", "sz", "o", "ox", "oy", "oz", "out0", "out1", "out2", "out4", "out5", "out6", "out8", "out9", "out10", "near", "far", "rl", "tb", "nf", "fovy", "aspect", "f", "fov", "upTan", "downTan", "leftTan", "rightTan", "xScale", "yScale", "lr", "bt", "eye", "center", "up", "x0", "x1", "y0", "y1", "z0", "z1", "eyex", "eyey", "eyez", "upx", "upy", "upz", "centerx", "centery", "centerz", "a9", "a14", "a15", "b9", "b13", "b14", "b15", "quat_exports", "calculateW", "conjugate", "dot", "exp", "fromEuler", "fromMat3", "getAngle", "getAxisAngle", "length", "lerp", "ln", "normalize", "pow", "random", "rotationTo", "setAxes", "setAxisAngle", "slerp", "sqlerp", "sqrLen", "squaredLength", "vec3_exports", "angle", "bezier", "ceil", "cross", "dist", "distance", "div", "divide", "floor", "forEach", "hermite", "inverse", "negate", "round", "scaleAndAdd", "sqrDist", "squaredDistance", "transformMat3", "transformMat4", "transformQuat", "zero", "d", "factorTimes2", "factor1", "factor2", "factor3", "factor4", "inverseFactor", "inverseFactorTimesTwo", "r", "zScale", "m", "qx", "qy", "qz", "qw", "uvx", "uvy", "uvz", "uuvx", "uuvy", "uuvz", "w2", "p", "mag1", "mag2", "mag", "cosine", "vec", "stride", "count", "fn", "arg", "l", "out_axis", "dotproduct", "et", "omega", "cosom", "sinom", "scale0", "scale1", "u1", "u2", "u3", "sqrt1MinusU1", "sqrtU1", "invDot", "fTrace", "fRoot", "j", "k", "halfToRad", "cx", "cy", "cz", "tmpvec3", "xUnitVec3", "yUnitVec3", "temp1", "temp2", "matr", "view", "TypedEventTarget", "#event_target", "event_name", "listener", "options", "event", "EntityBase", "euid", "value", "components", "component_name", "EntityUpdatedEvent", "change_source", "new_components", "updated_components", "deleted_components", "component", "EntityVisibilityChangedEvent", "is_visible", "quaternionToEuler", "euler", "sinr_cosp", "cosr_cosp", "sinp", "copySign", "siny_cosp", "cosy_cosp", "radian", "quaternionFromEuler", "eulers", "roll", "pitch", "yaw", "cp", "sp", "cr", "sr", "EntityTransformHandler", "local_transform", "#global_transform", "#global_transform_proxy", "#local_transform", "#local_transform_proxy", "#ls_to_ws", "#ws_to_ls", "#parent", "#is_global_transform_dirty", "#last_update_id", "#last_parent_update_id", "#is_dirty", "#computeGlobalPosition", "#computeGlobalOrientation", "#computeGlobalScale", "#computeGlobalEulerOrientation", "LocalTransformHandler", "GlobalTransformHandler", "longest_edge_length", "local_aabb", "aabb_min", "aabb_max", "vertices", "vertex", "test_vertices", "test_vertex", "_parent", "global_transform", "local_orientation", "orientation", "local_position", "quat", "local_scale", "entity", "#position", "#orientation", "#eulerOrientation", "#scale", "createProxyHandler", "prop", "returnValue", "_entity", "ComponentHandler", "_ComponentHandler", "_component_name", "ScriptEventReceived", "emitter_entity", "data_object", "ScriptEventEmitted", "scene", "target_rtids", "#scene", "#target_rtids", "#target_entities", "entity_rtid", "Entity", "#dirty_components", "#deleted_components", "#script_event_received_event_target", "#script_event_emitted_event_target", "#auto_broadcast", "#is_visible", "state", "event_map_id", "onReceived", "onEmitted", "client_uuid", "script_ids", "script_id", "dispatch_event", "key", "#unsafeSetComponentValue", "isNewComponent", "script_event_received_event", "ref", "#createComponentProxy", "#unsafeGetComponentValue", "existing_component", "proxy", "sanitized_value", "op_prio", "is_operator", "op", "has_greater_precedence", "op1", "op2", "compute_rpn", "filter_value", "tokens", "output", "operators", "token", "EntityRegistry", "#entities", "#entity_rtid_lut", "#entity_euid_lut", "#dirty_entities", "#entities_to_persist", "existingEntity", "entities", "entity_euid", "update_command", "#updateBroadcastList", "component_names", "broadcast_data", "Scene", "#pending_entity_requests", "#resolveEntityResponse", "entity_response", "#resolveEntityAncestors", "ancestors", "current_parent", "ancestor", "emitter_rtid", "target_entity", "name", "lineage", "entity_cores", "components_array", "entity_uuid", "linkage", "foundEntity", "uuid", "entity_reponses", "foundEntities", "entity_responses", "#resolveEntityResponses", "keep_old_selection", "e", "target_entities", "rpn", "enabled", "entity_names", "mandatory_components", "forbidden_components", "promise", "script_uuid", "Client", "client_info", "#client_info", "#camera_rtids", "#cursor_data", "rtid", "TO_REMOVE__ViewportsAddedEvent", "DisconnectedEvent", "reason", "InactivityWarningEvent", "seconds_remaining", "reset_timer", "ActivityDetectedEvent", "ClientJoinedEvent", "client", "ClientLeftEvent", "Session", "session_info", "created", "is_guest", "_i_instances", "#gateway_url", "#session_key", "#clients", "#clients_pending_identification", "_", "scene_id", "is_transient", "res", "Livelink", "_Session", "session_selector", "sessions", "session_id", "guest_token", "#authentication_headers", "session_token", "endpoint_info", "protocol", "port", "client_data", "#handleExistingClient", "#handleNewClient", "#removeDisconnectedClients", "#fetchClientInfo", "error", "#onClientJoined", "client_ids", "#onClientLeft", "Mouse", "instance", "#instance", "#is_locked", "#last_mouse_position", "#viewport_map", "#onMouseDown", "position", "#getMousePosition", "input_data", "#getMouseData", "#onMouseUp", "#onMouseMove", "#onPointerLockChange", "viewport_data", "dom_element", "abort_controller", "bufferSize", "bufferWriter", "posX", "posY", "Keyboard", "#onKeyDown", "keyData", "#getKeyData", "#onKeyUp", "#resetInputs", "keyCode", "#getLayoutAgnosticKeyCode", "KeyData", "code", "keyFromCode", "AudioPlayer", "#num_channels", "#sample_rate", "#bit_depth", "#global_volume", "#audio_context", "#next_start_time", "packet", "samples", "sample_count", "#scheduleAudio", "#getBuffer", "buffer", "channel", "channelData", "XInputMaskMap", "GamepadButton", "GamepadAxis", "GamepadJoystick", "computeButtonReading", "currentReading", "button", "isPressed", "mask", "GamepadInputRelay", "#index", "#reading", "#sendAxis", "joystick", "buttonsReading", "#sendButtons", "buttons", "PhysicalGamepad", "physicalIndex", "#input_scan_frequency", "#input_scan_timeout", "#input_relay", "#physical_index", "#onWindowFocused", "#setScanTimeout", "#handleInput", "gamepad", "#tryClearScanTimeout", "GamepadsRegistry", "#physical_gamepads", "#last_gamepad_index", "#onGamepadConnected", "#onGamepadDisconnected", "gamepads", "session", "#codec", "#remote_frame_proxy", "#encoded_frame_consumer", "#audio_player", "#mouse", "#keyboard", "#gamepads_registry", "#update_interval", "#broadcast_interval", "#onFrameReceived", "encoded_frame", "#onAudioReceived", "#onEntitiesUpdated", "updated_entities", "#TO_REMOVE__readyCallback", "#TO_REMOVE__refreshViewportTimeout", "_Livelink", "#connect", "#uninstallEventListeners", "client_config", "encoded_frame_consumer", "#startUpdateLoop", "controller", "partial_pose", "input_state", "size", "remote_size", "viewport_configs", "screenSpaceRayQuery", "frame_width", "frame_height", "relative_position_on_viewport", "rendering_surface_offset", "viewport_offset_on_frame", "callback", "#installEventListeners", "updatesPerSecond", "broadcastsPerSecond", "update_commands", "EntityHoveredEvent", "hovered_entity", "ws_position", "ws_normal", "EntityPickedEvent", "picked_entity", "Viewport", "rendering_surface", "#rendering_surface", "#overlays", "#dom_element", "#camera_projection", "#z_index", "#relative_rect", "#render_target_index", "#picking_enabled", "#hovering_enabled", "#onClick", "cursorData", "#onPointerMove", "overlay", "z_index", "camera_projection", "#TO_REMOVE__markViewportAsReady", "render_target_index", "screen_position", "mode", "world_position", "out_screen_position", "clip_position", "blendedFrame", "overlayFrame", "bounding_rect", "SRGBColorSpace", "LinearSRGBColorSpace", "Vector2", "_Vector2", "scalar", "minVal", "maxVal", "dx", "dy", "alpha", "v1", "v2", "array", "DEG2RAD", "RAD2DEG", "clamp", "euclideanModulo", "Quaternion", "dst", "dstOffset", "src0", "srcOffset0", "src1", "srcOffset1", "w0", "w1", "cos", "dir", "sqrSin", "sin", "tDir", "update", "order", "c1", "c2", "c3", "s1", "s2", "s3", "halfAngle", "te", "vFrom", "vTo", "step", "qax", "qay", "qaz", "qaw", "qbx", "qby", "qbz", "qbw", "qb", "cosHalfTheta", "sqrSinHalfTheta", "sinHalfTheta", "halfTheta", "ratioA", "ratioB", "qa", "sqrt1u1", "sqrtu1", "Vector3", "_Vector3", "_quaternion$1", "ix", "iy", "iz", "iw", "denominator", "planeNormal", "_vector$3", "normal", "theta", "dz", "radius", "phi", "sinPhiRadius", "u", "Box3", "minX", "minY", "minZ", "maxX", "maxY", "maxZ", "points", "il", "halfSize", "_vector$1", "object", "precise", "box", "point", "vector", "sphere", "plane", "triangle", "_center", "_extents", "_v0$1", "_v1$3", "_v2$1", "_f0", "_f1", "_f2", "axes", "satForAxes", "_triangleNormal", "matrix", "_points", "_testAxis", "v0", "extents", "p0", "p1", "p2", "SRGBToLinear", "LinearToSRGB", "FN", "ColorManagement", "colorSpace", "color", "sourceColorSpace", "targetColorSpace", "_colorKeywords", "_rgb", "_hslA", "_hslB", "hue2rgb", "toComponents", "Color", "g", "hex", "h", "style", "handleAlpha", "string", "hue", "saturation", "lightness", "delta", "color1", "color2", "Matrix4", "_Matrix4", "n11", "n12", "n13", "n14", "n21", "n22", "n23", "n24", "n31", "n32", "n33", "n34", "n41", "n42", "n43", "n44", "me", "xAxis", "yAxis", "zAxis", "scaleX", "_v1$2", "scaleY", "scaleZ", "ae", "af", "be", "bf", "ce", "cf", "de", "df", "ac", "ad", "bc", "bd", "_zero", "_one", "_z", "_x", "_y", "a24", "a34", "a41", "a42", "a43", "a44", "b23", "b24", "b31", "b32", "b33", "b34", "b41", "b42", "b43", "b44", "tmp", "t11", "t12", "t13", "t14", "detInv", "scaleXSq", "scaleYSq", "scaleZSq", "tx", "ty", "_m1", "invSX", "invSY", "invSZ", "_matrix", "_quaternion", "Euler", "_Euler", "newOrder", "Spherical", "other", "Vector4", "_Vector4", "MOUSE_BUTTON", "ACTION", "DOLLY_DIRECTION", "PI_2", "PI_HALF", "approxZero", "number", "approxEquals", "roundToStep", "infinityToMaxNumber", "maxNumberToInfinity", "unproject", "camera", "smoothDamp", "current", "currentVelocityRef", "smoothTime", "maxSpeed", "deltaTime", "change", "originalTo", "maxChange", "temp", "smoothDampVec3", "targetX", "targetY", "targetZ", "changeX", "changeY", "changeZ", "originalToX", "originalToY", "originalToZ", "maxChangeSq", "magnitudeSq", "tempX", "tempY", "tempZ", "origMinusCurrentX", "origMinusCurrentY", "origMinusCurrentZ", "outMinusOrigX", "outMinusOrigY", "outMinusOrigZ", "extractClientCoordFromEvent", "pointers", "pointer", "_position", "Camera", "localTransform", "force", "PerspectiveCamera", "lens", "aspectRatio", "OrthographicCamera", "_left", "_right", "_top", "_bottom", "isPerspectiveCamera", "isOrthographicCamera", "notSupportedInOrthographicCamera", "message", "EventDispatcher$1", "listeners", "listenerArray", "VERSION", "TOUCH_DOLLY_FACTOR", "isMac", "_AXIS_Y", "_AXIS_Z", "_v2", "_v3A", "_v3B", "_v3C", "_cameraDirection", "_xColumn", "_yColumn", "_zColumn", "_deltaTarget", "_deltaOffset", "_sphericalA", "_sphericalB", "_box3B", "_quaternionA", "_quaternionB", "CameraControls", "_CameraControls", "deltaX", "deltaY", "dragToOffset", "screenSpacePanning", "truckX", "pedestalY", "targetDistance", "dollyScale", "lastDistance", "clampedDistance", "overflowedDistance", "zoomScale", "lastZoom", "zoom", "isPerspective", "dragStartPosition", "lastDragPosition", "dollyStart", "onPointerDown", "el", "elRect", "mouseButton", "zombiePointer", "onPointerMove", "onPointerUp", "startDragging", "pointerId", "dragging", "endDragging", "lastScrollTimeStamp", "onMouseWheel", "now", "deltaYFactor", "onContextMenu", "lockedPointer", "dollyX", "dollyY", "dollyDirection", "dollyDelta", "onPointerLockChange", "onPointerLockError", "_c", "domElement", "azimuthAngle", "polarAngle", "boundaryEnclosesCamera", "interactiveArea", "enableTransition", "resolveImmediately", "zoomStep", "to", "aabb", "cover", "paddingLeft", "paddingRight", "paddingBottom", "paddingTop", "promises", "rotation", "viewFromPolar", "bb", "bbSize", "boundingSphere", "distanceToFit", "diameter", "positionX", "positionY", "positionZ", "positionAX", "positionAY", "positionAZ", "targetAX", "targetAY", "targetAZ", "positionBX", "positionBY", "positionBZ", "targetBX", "targetBY", "targetBZ", "targetA", "positionA", "targetB", "positionB", "deltaTheta", "deltaPhi", "deltaRadius", "cameraToPoint", "box3", "viewportOrX", "depth", "boundingRectAspect", "vFOV", "hFOV", "receiveEndValue", "cameraDirection", "side", "deltaTarget", "deltaOffset", "deltaZoom", "dollyControlAmount", "planeX", "planeY", "worldToScreen", "lerpRatio", "cursor", "newTargetEnd", "isMin", "isMax", "dollyAmount", "targetEndDiff", "worldCursorPosition", "prevPlaneConstant", "newPlaneConstant", "pullBack", "updated", "json", "obj", "activePointer", "friction", "offsetLength2", "newTarget", "deltaClampedTarget", "deltaClampedTargetLength2", "offsetFactor", "heightHalf", "widthHalf", "zoomInv", "resolve", "onResolve", "_domElement", "HOLD_EVENT_TYPE", "EventDispatcher", "Hold", "holdIntervalDelay", "cb", "KeyboardKeyHold", "onKeydown", "isInputEvent", "onKeyup", "KEYCODE", "KeyboardFlyControls", "cameraControls", "clock", "move", "_KeyboardFlyControls", "down", "shift", "ctrl", "Clock", "autoStart", "diff", "newTime", "CameraControllerPresets_exports", "fly", "orbital", "pointer_locked_orbital", "CameraController", "activate", "preset", "getLens", "#camera_entity", "#viewport", "#clock", "#orbit_on_cursor", "#lock_pointer", "#onCameraUpdate", "#isPointerLockActive", "#unlockPointer", "#onPointerLockError", "#onMouseDownLock", "#onMouseMoveLock", "#onMouseUpLock", "_event", "on_drag_threshold_in_pixels", "down_position", "clientX", "clientY", "#lockPointer", "#onPointerDown", "#isPointerRotateAction", "#safePickAndSetOrbitPoint", "#onPointerUp", "#blockPointerMoveEvent", "#deepMerge", "#initController", "_d", "_e", "_f", "sources", "isObject", "targetValue", "sourceValue", "forward_target_distance", "forward", "keyboard_fly_controls", "speed_multiplier", "ownerDocument", "#isPointerAction", "touch_actions", "mouse_actions", "action", "mouse_action", "ROTATE", "TOUCH_ROTATE", "TOUCH_ZOOM_ROTATE", "TOUCH_DOLLY_ROTATE", "#pickAndSetOrbitPoint", "azimuth", "polar", "INFINITE_FAR_VALUE", "CameraProjection", "#world_position", "#world_orientation", "#clip_from_view_matrix", "#view_from_clip_matrix", "#clip_from_world_matrix", "#world_from_view_matrix", "#onEntityUpdated", "#checkCameraEntityValidity", "out_clip_position", "out_world_position", "#screenPositionToClipPosition", "#computeRayWithPerspectiveProjection", "#computeRayWithOrthographicProjection", "#computePerspectiveProjection", "#computeOrthographicProjection", "frame_camera_transform", "tmp_matrix", "view_from_world_matrix", "ray", "zNear", "zFar", "affinedMatrix", "global", "initglobal", "wasmBinaryFile", "getModule", "par_broadwayOnHeadersDecoded", "par_broadwayOnPictureDecoded", "Module", "moduleOverrides", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "ENVIRONMENT_IS_SHELL", "assert", "url", "xhr", "onload", "onerror", "title", "STACK_ALIGN", "staticAlloc", "staticSealed", "ret", "STATICTOP", "alignMemory", "factor", "asm2wasmImports", "functionPointers", "GLOBAL_BASE", "ABORT", "EXITSTATUS", "condition", "text", "abort", "Pointer_stringify", "ptr", "hasUtf", "HEAPU8", "MAX_CHUNK", "curr", "UTF8ToString", "UTF8Decoder", "UTF8ArrayToString", "u8Array", "idx", "endPtr", "u0", "u4", "u5", "ch", "UTF16Decoder", "WASM_PAGE_SIZE", "ASMJS_PAGE_SIZE", "alignUp", "HEAP8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateGlobalBuffer", "buf", "updateGlobalBufferViews", "STATIC_BASE", "STACK_BASE", "STACKTOP", "STACK_MAX", "DYNAMIC_BASE", "DYNAMICTOP_PTR", "abortOnCannotGrowMemory", "TOTAL_MEMORY", "enlargeMemory", "TOTAL_STACK", "getTotalMemory", "callRuntimeCallbacks", "callbacks", "func", "__ATPRERUN__", "__ATINIT__", "__ATMAIN__", "__ATEXIT__", "__ATPOSTRUN__", "runtimeInitialized", "runtimeExited", "preRun", "addOnPreRun", "ensureInitRuntime", "preMain", "exitRuntime", "postRun", "addOnPostRun", "Math_abs", "Math_cos", "Math_sin", "Math_tan", "Math_acos", "Math_asin", "Math_atan", "Math_atan2", "Math_exp", "Math_log", "Math_sqrt", "Math_ceil", "Math_floor", "Math_pow", "Math_imul", "Math_fround", "Math_round", "Math_min", "Math_max", "Math_clz32", "Math_trunc", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "dataURIPrefix", "isDataURI", "filename", "integrateWasmJS", "wasmTextFile", "asmjsCodeFile", "wasmPageSize", "info", "mergeMemory", "newBuffer", "oldBuffer", "oldView", "newView", "fixImports", "imports", "getBinary", "err", "getBinaryPromise", "response", "reject", "doNativeWasm", "env", "providedBuffer", "receiveInstance", "receiveInstantiatedSource", "instantiateArrayBuffer", "receiver", "binary", "asmjsReallocBuffer", "wasmReallocBuffer", "PAGE_MULTIPLE", "old", "oldSize", "finalMethod", "TABLE_SIZE", "MAX_TABLE_SIZE", "STATIC_BUMP", "SYSCALLS", "varargs", "low", "high", "___syscall140", "which", "stream", "offset_high", "offset_low", "whence", "___syscall146", "iov", "iovcnt", "___syscall54", "___syscall6", "_broadwayOnHeadersDecoded", "_broadwayOnPictureDecoded", "$buffer", "_emscripten_memcpy_big", "dest", "src", "num", "___setErrNo", "asm", "_broadwayCreateStream", "_broadwayExit", "_broadwayGetMajorVersion", "_broadwayGetMinorVersion", "_broadwayInit", "_broadwayPlayStream", "ExitStatus", "initialStackTop", "runCaller", "run", "args", "doRun", "exit", "implicit", "what", "resultModule", "moduleIsReady", "cbFun", "moduleReady", "nowValue", "Decoder", "asmInstance", "fakeWindow", "toU8Array", "toU32Array", "onPicFun", "infos", "doInfo", "getAsm", "copyU8", "ignore", "$sliceInfo", "sliceInfo", "sliceInfoAr", "ModuleCallback", "MAX_STREAM_BUFFER_LENGTH", "bufferedCalls", "typedAr", "parInfo", "copyDoneFun", "sliceNum", "nals", "foundSomething", "lastFound", "lastStart", "startPos", "currentSlice", "playAr", "bi", "asmInstances", "parWidth", "parHeight", "idStr", "lumaSize", "chromaSize", "inpSize", "outSize", "cacheSize", "chunkSize", "heapSize", "heap", "asmFactory", "stdlib", "foreign", "imul", "out32", "inp", "mem", "mem32", "inpStart", "outStart", "widthFour", "cacheStart", "init", "doit", "ystart", "ustart", "vstart", "yn", "line", "col", "usave", "vsave", "ostart", "cacheAdr", "yuv2rgbcalc", "isWorker", "reuseMemory", "sliceMode", "sliceCnt", "lastSliceNum", "awaiting", "pile", "memAr", "getMem", "copySlice", "infoAr", "length4", "plane2", "plane3", "copy16", "parBegin", "parEnd", "begin", "end", "copy8", "copyChunk", "sliceMsgFun", "setSliceCnt", "parSliceCnt", "decoder", "copyStart", "lastBuf", "timeDecoding", "startDecoding", "finishDecoding", "Decoder_default", "import_YUVCanvas", "EncodedFrameConsumer", "decoded_frame_consumer", "#decoded_frame_consumer", "#applyFrameMetaData", "#setNotControlledCamerasGlobalTransform", "world_orientation", "SoftwareDecoder", "#broadway_sw_decoder", "#offscreen_canvas", "#yuv_canvas", "#onFrameDecoded", "yChannelSize", "uvChannelSize", "frame_dimensions", "WebCodecsDecoder", "#decoder", "#video_decoder_config", "#first_frame", "#meta_data_map", "#last_frame", "#codecs", "supportedConfig", "_WebCodecsDecoder", "#findSupportedConfig", "chunk", "codecs", "config", "hardwareAccelerations", "hardwareAcceleration", "hXXX_codec", "ContextProvider", "Context2D", "context_attributes", "context", "frame_section", "frame_offset_left", "frame_offset_top", "viewport_offset_left", "viewport_offset_top", "viewport_width", "viewport_height", "ContextWebGL", "version", "fb", "ls", "lo", "vertex_shader_source", "vertex_shader", "fragment_shader_source", "fragment_shader", "shader_program", "vertex_buffer", "position_attribute_location", "texture_uniform_location", "RenderingSurfaceBase", "#last_draw_data", "offset_in_remote_surface", "CanvasAutoResizer", "_a", "canvas", "onResized", "#canvas", "#observer", "#resize_debounce_timeout", "#resize_debounce_timeout_duration_in_ms", "#onResizedCallback", "#onResized", "#resize", "old_size", "new_size", "#haveDimensionsChanged", "element", "i", "RenderingSurfaceResizedEvent", "RenderingSurface", "RenderingSurfaceBase", "canvas_element", "context_type", "context_attributes", "#context", "#auto_resizer", "#onCanvasResized", "_", "viewport", "Context2D", "ContextWebGL", "rect", "Rect", "decoded_frame", "RelativeRect", "overlayFrame", "import_react", "import_react", "import_react", "import_react", "import_react", "LivelinkContext", "createContext", "LivelinkProvider", "sceneId", "sessionId", "isTransient", "token", "LoadingPanel", "InactivityWarningPanel", "ConnectionErrorPanel", "autoJoinExisting", "clientType", "children", "instance", "setInstance", "useState", "isConnecting", "setIsConnecting", "isConnectionLost", "setIsConnectionLost", "inactivityWarning", "setInactivityWarning", "connectionError", "setConnectionError", "connectionPromises", "useRef", "disconnect", "useCallback", "useEffect", "connect", "session", "LivelinkInstance", "getOrCreateConnectionPromise", "params", "key", "getConnectionPromiseKey", "promise", "abort_controller", "onActivityDetected", "configureClient", "error", "onDisconnectedHandler", "event", "React", "configure", "webcodec", "useEntity", "entityProvider", "watchedComponents", "useContext", "entity", "setEntity", "isPending", "setIsPending", "forceUpdate", "useReducer", "x", "findEntityQuery", "foundEntity", "alwaysUpdate", "neverUpdate", "triggerUpdate", "useClients", "clients", "setClients", "onClientsChanged", "useCameraEntity", "props", "name", "position", "_orientation", "_eulerOrientation", "renderGraphRef", "settings", "renderTargetIndex", "_perspective_lens", "orientation", "eulerOrientation", "orthographic_lens", "perspective_lens", "cameraEntity", "CanvasContext", "Canvas", "contextType", "contextAttributes", "width", "height", "parentCanvas", "renderingSurface", "setRenderingSurface", "canvasRef", "rect", "surface", "RenderingSurface", "computeCanvasContainerStyle", "ViewportContext", "Viewport", "forwardRef", "setHoveredEntity", "setPickedEntity", "ref", "client", "cameraIndex", "otherProps", "canvas", "parentZIndex", "viewport", "setViewport", "clientCameraEntity", "setClientCameraEntity", "camera", "setCamera", "viewportDomElement", "useImperativeHandle", "onResize", "resizeObserver", "zIndex", "cameraEntities", "onEntityPicked", "e", "onEntityHovered", "CameraControllerContext", "CameraController", "preset", "CameraControllerPresets", "cameraController", "setCameraController", "controller", "DefaultCameraController", "Recorder", "fileOptions", "recorderOptions", "streamOptions", "recordTime", "setRecordTime", "isRecording", "setIsRecording", "mediaRecorder", "useMemo", "stream", "fileHandle", "fileStream", "interval", "prev", "EPSILON", "ARRAY_TYPE", "RANDOM", "degree", "y", "i", "vec3_exports", "__export", "add", "angle", "bezier", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "hermite", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotateX", "rotateY", "rotateZ", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "transformQuat", "zero", "out", "a", "z", "b", "ax", "ay", "az", "bx", "by", "bz", "t", "c", "d", "factorTimes2", "factor1", "factor2", "factor3", "factor4", "inverseFactor", "inverseFactorTimesTwo", "r", "zScale", "m", "w", "q", "qx", "qy", "qz", "qw", "uvx", "uvy", "uvz", "uuvx", "uuvy", "uuvz", "w2", "rad", "p", "mag1", "mag2", "mag", "cosine", "a0", "a1", "a2", "b0", "b1", "b2", "vec", "stride", "offset", "count", "fn", "arg", "createReact3DElementFactory", "overlay", "React3DElement", "_a", "#updateTranslation", "prevProps", "v", "state", "transformStyle", "createPortal", "_React3DElement", "anchor_x", "anchor_y", "INFINITE_FAR_VALUE", "ReactOverlay", "container", "#elements", "#viewport", "#factory", "react_element", "elements", "projection", "#projectElementOnScreen", "z_index", "screen_position", "#computeElementScale", "is_visible", "scale_factor", "near", "OverlayContext", "DOM3DOverlay", "containerRef", "setOverlay", "DOM3DElement", "worldPosition", "anchor", "scaleFactor", "DOMEntity", "setWorldPosition", "isVisible", "setIsVisible", "updatePosition", "updateVisibility"]
}

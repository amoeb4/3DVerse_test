import {
  __privateAdd,
  __privateGet,
  __privateMethod,
  __privateSet,
  __privateWrapper,
  __publicField
} from "./chunk-WOOG5QLI.js";

// node_modules/@3dverse/livelink/dist/index.mjs
var Ls = Object.create;
var rn = Object.defineProperty;
var Vs = Object.getOwnPropertyDescriptor;
var Us = Object.getOwnPropertyNames;
var ks = Object.getPrototypeOf;
var Is = Object.prototype.hasOwnProperty;
var Ns = (i8, t) => () => (t || i8((t = { exports: {} }).exports, t), t.exports);
var de = (i8, t) => {
  for (var e in t) rn(i8, e, { get: t[e], enumerable: true });
};
var Bs = (i8, t, e, n) => {
  if (t && typeof t == "object" || typeof t == "function") for (let r of Us(t)) !Is.call(i8, r) && r !== e && rn(i8, r, { get: () => t[r], enumerable: !(n = Vs(t, r)) || n.enumerable });
  return i8;
};
var Hs = (i8, t, e) => (e = i8 != null ? Ls(ks(i8)) : {}, Bs(t || !i8 || !i8.__esModule ? rn(e, "default", { value: i8, enumerable: true }) : e, i8));
var rs = Ns((kn, ns) => {
  "use strict";
  (function(i8, t) {
    typeof define == "function" && define.amd ? define([], t) : typeof kn == "object" ? ns.exports = t() : i8.YUVCanvas = t();
  })(kn, function() {
    function i8(t) {
      t = t || {}, this.canvasElement = t.canvas || document.createElement("canvas"), this.contextOptions = t.contextOptions, this.type = t.type || "yuv420", this.customYUV444 = t.customYUV444, this.conversionType = t.conversionType || "rec601", this.width = t.width || 640, this.height = t.height || 320, this.animationTime = t.animationTime || 0, this.canvasElement.width = this.width, this.canvasElement.height = this.height, this.fakeAlphaEnabled = t.fakeAlphaEnabled === true ? 1 : 0, this.initContextGL(), this.contextGL && (this.initProgram(), this.initBuffers(), this.initTextures()), this.type === "yuv420" ? this.drawNextOuptutPictureGL = function(e) {
        var n = this.contextGL, r = this.texturePosBuffer, s = this.uTexturePosBuffer, o = this.vTexturePosBuffer, a = this.yTextureRef, h = this.uTextureRef, c = this.vTextureRef, l = e.yData, d = e.uData, m = e.vData, u = this.width, p = this.height, f = e.yDataPerRow || u, _ = e.yRowCnt || p, y = e.uDataPerRow || u / 2, M = e.uRowCnt || p / 2, v = e.vDataPerRow || y, x = e.vRowCnt || M;
        n.viewport(0, 0, this.viewportWidth || u, this.viewportHeight || p);
        var E = 0, w = 0, C = p / _, S = u / f, P = new Float32Array([S, E, w, E, S, C, w, C]);
        n.bindBuffer(n.ARRAY_BUFFER, r), n.bufferData(n.ARRAY_BUFFER, P, n.DYNAMIC_DRAW), this.customYUV444 ? (C = p / M, S = u / y) : (C = p / 2 / M, S = u / 2 / y);
        var R = new Float32Array([S, E, w, E, S, C, w, C]);
        n.bindBuffer(n.ARRAY_BUFFER, s), n.bufferData(n.ARRAY_BUFFER, R, n.DYNAMIC_DRAW), this.customYUV444 ? (C = p / x, S = u / v) : (C = p / 2 / x, S = u / 2 / v);
        var F = new Float32Array([S, E, w, E, S, C, w, C]);
        n.bindBuffer(n.ARRAY_BUFFER, o), n.bufferData(n.ARRAY_BUFFER, F, n.DYNAMIC_DRAW), n.activeTexture(n.TEXTURE0), n.bindTexture(n.TEXTURE_2D, a), n.texImage2D(n.TEXTURE_2D, 0, n.LUMINANCE, f, _, 0, n.LUMINANCE, n.UNSIGNED_BYTE, l), n.activeTexture(n.TEXTURE1), n.bindTexture(n.TEXTURE_2D, h), n.texImage2D(n.TEXTURE_2D, 0, n.LUMINANCE, y, M, 0, n.LUMINANCE, n.UNSIGNED_BYTE, d), n.activeTexture(n.TEXTURE2), n.bindTexture(n.TEXTURE_2D, c), n.texImage2D(n.TEXTURE_2D, 0, n.LUMINANCE, v, x, 0, n.LUMINANCE, n.UNSIGNED_BYTE, m), n.drawArrays(n.TRIANGLE_STRIP, 0, 4);
      } : this.type === "yuv422" && (this.drawNextOuptutPictureGL = function(e) {
        var n = this.contextGL, r = this.texturePosBuffer, s = this.textureRef, o = e.data, a = this.width, h = this.height, c = e.dataPerRow || a * 2, l = e.rowCnt || h;
        n.viewport(0, 0, a, h);
        var d = 0, m = 0, u = h / l, p = a / (c / 2), f = new Float32Array([p, d, m, d, p, u, m, u]);
        n.bindBuffer(n.ARRAY_BUFFER, r), n.bufferData(n.ARRAY_BUFFER, f, n.DYNAMIC_DRAW), n.uniform2f(n.getUniformLocation(this.shaderProgram, "resolution"), c, h), n.activeTexture(n.TEXTURE0), n.bindTexture(n.TEXTURE_2D, s), n.texImage2D(n.TEXTURE_2D, 0, n.LUMINANCE, c, l, 0, n.LUMINANCE, n.UNSIGNED_BYTE, o), n.drawArrays(n.TRIANGLE_STRIP, 0, 4);
      });
    }
    return i8.prototype.isWebGL = function() {
      return this.contextGL;
    }, i8.prototype.initContextGL = function() {
      for (var t = this.canvasElement, e = null, n = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"], r = 0; !e && r < n.length; ) {
        var s = n[r];
        try {
          this.contextOptions ? e = t.getContext(s, this.contextOptions) : e = t.getContext(s);
        } catch {
          e = null;
        }
        (!e || typeof e.getParameter != "function") && (e = null), ++r;
      }
      this.contextGL = e;
    }, i8.prototype.initProgram = function() {
      var t = this.contextGL, e, n;
      this.type === "yuv420" ? (e = ["attribute vec4 vertexPos;", "attribute vec4 texturePos;", "attribute vec4 uTexturePos;", "attribute vec4 vTexturePos;", "varying vec2 textureCoord;", "varying vec2 uTextureCoord;", "varying vec2 vTextureCoord;", "void main()", "{", "  gl_Position = vertexPos;", "  textureCoord = texturePos.xy;", "  uTextureCoord = uTexturePos.xy;", "  vTextureCoord = vTexturePos.xy;", "}"].join(`
`), n = ["precision highp float;", "varying highp vec2 textureCoord;", "varying highp vec2 uTextureCoord;", "varying highp vec2 vTextureCoord;", "uniform sampler2D ySampler;", "uniform sampler2D uSampler;", "uniform sampler2D vSampler;", "uniform mat4 YUV2RGB;", "uniform int fakeAlphaEnabled;", "void main(void) {", "  highp float y = texture2D(ySampler,  textureCoord).r;", "  highp float u = texture2D(uSampler,  uTextureCoord).r;", "  highp float v = texture2D(vSampler,  vTextureCoord).r;", "  gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;", "  if(fakeAlphaEnabled == 1) {", "     highp float maxIntensity = max(max(gl_FragColor.r, gl_FragColor.g), gl_FragColor.b);", "     if(maxIntensity < 0.1) gl_FragColor.a = maxIntensity;", "  }", "}"].join(`
`)) : this.type === "yuv422" && (e = ["attribute vec4 vertexPos;", "attribute vec4 texturePos;", "varying vec2 textureCoord;", "void main()", "{", "  gl_Position = vertexPos;", "  textureCoord = texturePos.xy;", "}"].join(`
`), n = ["precision highp float;", "varying highp vec2 textureCoord;", "uniform sampler2D sampler;", "uniform highp vec2 resolution;", "uniform mat4 YUV2RGB;", "uniform int fakeAlphaEnabled;", "void main(void) {", "  highp float texPixX = 1.0 / resolution.x;", "  highp float logPixX = 2.0 / resolution.x;", "  highp float logHalfPixX = 4.0 / resolution.x;", "  highp float steps = floor(textureCoord.x / logPixX);", "  highp float uvSteps = floor(textureCoord.x / logHalfPixX);", "  highp float y = texture2D(sampler, vec2((logPixX * steps) + texPixX, textureCoord.y)).r;", "  highp float u = texture2D(sampler, vec2((logHalfPixX * uvSteps), textureCoord.y)).r;", "  highp float v = texture2D(sampler, vec2((logHalfPixX * uvSteps) + texPixX + texPixX, textureCoord.y)).r;", "  gl_FragColor = vec4(y, u, v, 1.0) * YUV2RGB;", "  if(fakeAlphaEnabled == 1) {", "     highp float maxIntensity = max(max(gl_FragColor.r, gl_FragColor.g), gl_FragColor.b);", "     if(maxIntensity < 0.1) gl_FragColor.a = maxIntensity;", "  }", "}"].join(`
`));
      var r = [];
      this.conversionType == "rec709" ? r = [1.16438, 0, 1.79274, -0.97295, 1.16438, -0.21325, -0.53291, 0.30148, 1.16438, 2.1124, 0, -1.1334, 0, 0, 0, 1] : r = [1.16438, 0, 1.59603, -0.87079, 1.16438, -0.39176, -0.81297, 0.52959, 1.16438, 2.01723, 0, -1.08139, 0, 0, 0, 1];
      var s = t.createShader(t.VERTEX_SHADER);
      t.shaderSource(s, e), t.compileShader(s), t.getShaderParameter(s, t.COMPILE_STATUS) || console.error("Vertex shader failed to compile: " + t.getShaderInfoLog(s));
      var o = t.createShader(t.FRAGMENT_SHADER);
      t.shaderSource(o, n), t.compileShader(o), t.getShaderParameter(o, t.COMPILE_STATUS) || console.error("Fragment shader failed to compile: " + t.getShaderInfoLog(o));
      var a = t.createProgram();
      t.attachShader(a, s), t.attachShader(a, o), t.linkProgram(a), t.getProgramParameter(a, t.LINK_STATUS) || console.error("Program failed to compile: " + t.getProgramInfoLog(a)), t.useProgram(a);
      var h = t.getUniformLocation(a, "YUV2RGB");
      t.uniformMatrix4fv(h, false, r);
      var c = t.getUniformLocation(a, "fakeAlphaEnabled");
      t.uniform1i(c, this.fakeAlphaEnabled), this.shaderProgram = a;
    }, i8.prototype.initBuffers = function() {
      var t = this.contextGL, e = this.shaderProgram, n = t.createBuffer();
      t.bindBuffer(t.ARRAY_BUFFER, n), t.bufferData(t.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), t.STATIC_DRAW);
      var r = t.getAttribLocation(e, "vertexPos");
      if (t.enableVertexAttribArray(r), t.vertexAttribPointer(r, 2, t.FLOAT, false, 0, 0), this.animationTime) {
        var s = this.animationTime, o = 0, a = 15, h = function() {
          o += a;
          var f = 1 * o / s;
          o >= s ? f = 1 : setTimeout(h, a);
          var _ = -1 * f, y = 1 * f, M = t.createBuffer();
          t.bindBuffer(t.ARRAY_BUFFER, M), t.bufferData(t.ARRAY_BUFFER, new Float32Array([y, y, _, y, y, _, _, _]), t.STATIC_DRAW);
          var v = t.getAttribLocation(e, "vertexPos");
          t.enableVertexAttribArray(v), t.vertexAttribPointer(v, 2, t.FLOAT, false, 0, 0);
          try {
            t.drawArrays(t.TRIANGLE_STRIP, 0, 4);
          } catch {
          }
        };
        h();
      }
      var c = t.createBuffer();
      t.bindBuffer(t.ARRAY_BUFFER, c), t.bufferData(t.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), t.STATIC_DRAW);
      var l = t.getAttribLocation(e, "texturePos");
      if (t.enableVertexAttribArray(l), t.vertexAttribPointer(l, 2, t.FLOAT, false, 0, 0), this.texturePosBuffer = c, this.type === "yuv420") {
        var d = t.createBuffer();
        t.bindBuffer(t.ARRAY_BUFFER, d), t.bufferData(t.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), t.STATIC_DRAW);
        var m = t.getAttribLocation(e, "uTexturePos");
        t.enableVertexAttribArray(m), t.vertexAttribPointer(m, 2, t.FLOAT, false, 0, 0), this.uTexturePosBuffer = d;
        var u = t.createBuffer();
        t.bindBuffer(t.ARRAY_BUFFER, u), t.bufferData(t.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), t.STATIC_DRAW);
        var p = t.getAttribLocation(e, "vTexturePos");
        t.enableVertexAttribArray(p), t.vertexAttribPointer(p, 2, t.FLOAT, false, 0, 0), this.vTexturePosBuffer = u;
      }
    }, i8.prototype.initTextures = function() {
      var t = this.contextGL, e = this.shaderProgram;
      if (this.type === "yuv420") {
        var n = this.initTexture(), r = t.getUniformLocation(e, "ySampler");
        t.uniform1i(r, 0), this.yTextureRef = n;
        var s = this.initTexture(), o = t.getUniformLocation(e, "uSampler");
        t.uniform1i(o, 1), this.uTextureRef = s;
        var a = this.initTexture(), h = t.getUniformLocation(e, "vSampler");
        t.uniform1i(h, 2), this.vTextureRef = a;
      } else if (this.type === "yuv422") {
        var c = this.initTexture(), l = t.getUniformLocation(e, "sampler");
        t.uniform1i(l, 0), this.textureRef = c;
      }
    }, i8.prototype.initTexture = function() {
      var t = this.contextGL, e = t.createTexture();
      return t.bindTexture(t.TEXTURE_2D, e), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), t.bindTexture(t.TEXTURE_2D, null), e;
    }, i8.prototype.drawNextOutputPicture = function(t, e, n, r) {
      var s = this.contextGL;
      s ? this.drawNextOuptutPictureGL(t, e, n, r) : this.drawNextOuptutPictureRGBA(t, e, n, r);
    }, i8.prototype.drawNextOuptutPictureRGBA = function(t, e, o, r) {
      var s = this.canvasElement, o = null, a = r, h = s.getContext("2d"), c = h.getImageData(0, 0, t, e);
      c.data.set(a), o === null ? h.putImageData(c, 0, 0) : h.putImageData(c, -o.left, -o.top, 0, 0, o.width, o.height);
    }, i8;
  });
});
var Ys = typeof process < "u" && process.versions != null && process.versions.node != null;
var _a, _t, _i, _zt_static, e_fn, n_fn;
var sn = (_a = class {
  static get Core() {
    if (!__privateGet(_a, _t)) throw new Error("Livelink core not initialized");
    return __privateGet(_a, _t);
  }
  static load(t = "prod") {
    var _a42;
    return __privateGet(_a, _i) || __privateSet(_a, _i, __privateMethod(_a42 = _a, _zt_static, e_fn).call(_a42, t)), __privateGet(_a, _i);
  }
  constructor() {
  }
}, _t = new WeakMap(), _i = new WeakMap(), _zt_static = new WeakSet(), e_fn = async function(t) {
  var _a42;
  let e = await __privateMethod(_a42 = _a, _zt_static, n_fn).call(_a42, t), { LivelinkCore: n } = await e();
  __privateSet(_a, _t, n);
  let r = { prod: "#FFC700", dev: "#36D399", debug: "#FB4949" };
  console.info(`%c Livelink Core initialized 🚀 %c ${n.VERSION} %c ${n.COMMIT_SHA} %c${t}`, "background: #080A12; color: #FFC700; font-weight: bold; padding: 8px; padding-right: 164px; border-radius: 16px; margin: 16px 0 16px 0", "background: #9EA6D6; color: #0A1018; font-weight: bold; padding: 1px; padding-right: 0px; margin-left: -160px; border-radius: 16px 0 0 16px;", "background: #6973A8; color: #0A1018; font-weight: bold; padding: 1px; padding-left: 0; border-radius: 0 16px 16px 0;", `background: ${r[t]}; color: #000; font-weight: bold; padding: 6px 16px; border: 4px solid #080A12; border-radius: 16px; margin-left: 16px`);
}, n_fn = async function(t) {
  let e = "https://cdn.3dverse.com/livelink/core/1.0/" + (t !== "prod" ? `core.${t}.mjs` : "core.mjs");
  if (!Ys) return new Function("return import('" + e + "')");
  let n = await (await fetch(e)).text(), r = await new Function("return import('node:vm')")();
  return r.SourceTextModule ? (console.info("Using experimental VM SourceTextModule to load Livelink core"), async () => {
    let s = new r.SourceTextModule(n, { identifier: e });
    return await s.link(() => {
    }), await s.evaluate(), s.namespace;
  }) : new Function("return import('data:text/javascript;base64," + btoa(n) + "')");
}, __privateAdd(_a, _zt_static), __privateAdd(_a, _t, null), __privateAdd(_a, _i, null), _a);
typeof window < "u" && (window.__LIVELINK__ || (window.__LIVELINK__ = {}), Object.prototype.hasOwnProperty.call(window.__LIVELINK__, "@3dverse/livelink.core") ? console.warn("⚠️ WARNING ⚠️ Multiple instances of Livelink Core being imported.") : window.__LIVELINK__["@3dverse/livelink.core"] = "1.1.4");
function Qn({ raw_frame_meta_data: i8, client_id: t, entity_registry: e, viewports: n }) {
  let r = { renderer_timestamp: i8.renderer_timestamp, frame_counter: i8.frame_counter, viewport_layout_camera_entities: [], other_clients_camera_entities: [] };
  for (let s of i8.clients) {
    let o = s.client_id === t;
    for (let a of s.viewports) {
      let h = e.get({ entity_rtid: a.camera_rtid });
      if (!h) continue;
      let c = n.find((l) => {
        var _a42;
        return ((_a42 = l.camera_projection) == null ? void 0 : _a42.camera_entity.rtid) === h.rtid;
      });
      if (o) {
        c && r.viewport_layout_camera_entities.push({ camera_entity: h, world_from_view_matrix: a.ws_from_ls, world_position: Zn(a.ws_from_ls), world_orientation: Kn(a.ws_from_ls), viewport: c });
        continue;
      }
      c && c.is_camera_controlled_by_current_client || r.other_clients_camera_entities.push({ camera_entity: h, world_from_view_matrix: a.ws_from_ls, world_position: Zn(a.ws_from_ls), world_orientation: Kn(a.ws_from_ls) });
    }
  }
  return r;
}
function Zn(i8) {
  return [i8[12], i8[13], i8[14]];
}
function Kn(i8) {
  let t = [0, 0, 0, 0], e = i8[0], n = i8[1], r = i8[2], s = i8[4], o = i8[5], a = i8[6], h = i8[8], c = i8[9], l = i8[10], d = e + o + l;
  if (d > 0) {
    let m = 0.5 / Math.sqrt(d + 1);
    t[3] = 0.25 / m, t[0] = (a - c) * m, t[1] = (h - r) * m, t[2] = (n - s) * m;
  } else if (e > o && e > l) {
    let m = 2 * Math.sqrt(1 + e - o - l);
    t[3] = (a - c) / m, t[0] = 0.25 * m, t[1] = (n + s) / m, t[2] = (r + h) / m;
  } else if (o > l) {
    let m = 2 * Math.sqrt(1 + o - e - l);
    t[3] = (h - r) / m, t[0] = (n + s) / m, t[1] = 0.25 * m, t[2] = (a + c) / m;
  } else {
    let m = 2 * Math.sqrt(1 + l - e - o);
    t[3] = (n - s) / m, t[0] = (r + h) / m, t[1] = (a + c) / m, t[2] = 0.25 * m;
  }
  return t;
}
var _Ft_instances, t_fn, _a2;
var Ft = (_a2 = class {
  constructor({ left: t = 0, top: e = 0, right: n, bottom: r, width: s, height: o }) {
    __privateAdd(this, _Ft_instances);
    __publicField(this, "left");
    __publicField(this, "top");
    __publicField(this, "right");
    __publicField(this, "bottom");
    __publicField(this, "width");
    __publicField(this, "height");
    __privateMethod(this, _Ft_instances, t_fn).call(this, { left: t, top: e, right: n, bottom: r, width: s, height: o }) || console.error("Invalid rect", this), this.left = t, this.top = e, this.right = n !== void 0 ? n : t + s, this.bottom = r !== void 0 ? r : e + o, this.width = s !== void 0 ? s : n - t, this.height = o !== void 0 ? o : r - e;
  }
}, _Ft_instances = new WeakSet(), t_fn = function({ left: t = 0, top: e = 0, right: n, bottom: r, width: s, height: o }) {
  return !(t < 0 || e < 0 || n !== void 0 && n < 0 || r !== void 0 && r < 0 || s !== void 0 && s < 0 || o !== void 0 && o < 0 || n === void 0 && s === void 0 || r === void 0 && o === void 0 || n !== void 0 && t >= n || r !== void 0 && e >= r || s !== void 0 && n !== void 0 && t + s !== n || o !== void 0 && r !== void 0 && e + o !== r);
}, _a2);
var on = class extends Error {
  constructor(t) {
    super(`Element has an invalid size : [${t.width} x ${t.height}]`);
    __publicField(this, "rect");
    this.rect = t;
  }
};
var an = class extends Error {
  constructor(t, e) {
    super("Element MUST be contained into its parent bounds.");
    __publicField(this, "rect");
    __publicField(this, "parentRect");
    this.rect = t, this.parentRect = e;
  }
};
var _a3, _i_instances, t_fn2;
var dt = (_a3 = class extends Ft {
  constructor({ left: t = 0, top: e = 0, right: n, bottom: r, width: s = 1, height: o = 1 }) {
    super({ left: t, top: e, right: n, bottom: r, width: s, height: o });
    __privateAdd(this, _i_instances);
    __privateMethod(this, _i_instances, t_fn2).call(this) || console.error("Relative rect values must fall in [0,1] range", this);
  }
  static from_dom_elements({ element: t, parent: e }) {
    let n = t.getBoundingClientRect(), r = e.getBoundingClientRect();
    if (!n.width || !n.height) throw new on(n);
    let s = { left: n.left - r.left, top: n.top - r.top };
    if (s.left < 0 || s.top < 0 || s.left + n.width > r.left + r.width || s.top + n.height > r.top + r.height) throw new an(n, r);
    let o = 6;
    return new _a3({ left: parseFloat((s.left / r.width).toPrecision(o)), top: parseFloat((s.top / r.height).toPrecision(o)), width: parseFloat((n.width / r.width).toPrecision(o)), height: parseFloat((n.height / r.height).toPrecision(o)) });
  }
}, _i_instances = new WeakSet(), t_fn2 = function() {
  return this.left < 1 && this.top < 1 && this.right <= 1 && this.bottom <= 1 && this.width <= 1 && this.height <= 1;
}, __publicField(_a3, "default", Object.freeze(new _a3({ left: 0, top: 0, width: 1, height: 1 }))), _a3);
var _t2, _i2, _e, _n, _r, _Ze_instances, o_get, s_fn, a_fn, c_fn, _h, _l, d_fn, m_fn, u_fn, _a4;
var Ze = (_a4 = class {
  constructor(t) {
    __privateAdd(this, _Ze_instances);
    __privateAdd(this, _t2);
    __privateAdd(this, _i2, []);
    __privateAdd(this, _e, [0, 0]);
    __privateAdd(this, _n, [32, 32]);
    __privateAdd(this, _r, true);
    __privateAdd(this, _h, () => {
      __privateMethod(this, _Ze_instances, d_fn).call(this), __privateGet(this, _t2).isConfigured() && __privateMethod(this, _Ze_instances, s_fn).call(this) && (__privateGet(this, _r) && (__privateGet(this, _e), __privateGet(this, _t2)._resize({ size: __privateGet(this, _e) }), __privateSet(this, _r, false)), __privateGet(this, _Ze_instances, o_get), __privateGet(this, _t2)._setViewports({ viewport_configs: __privateGet(this, _Ze_instances, o_get) }));
    });
    __privateAdd(this, _l, (t, e) => Math.floor(t) + (Math.floor(t) % e === 0 ? 0 : e - Math.floor(t) % e));
    __privateSet(this, _t2, t);
  }
  get dimensions() {
    return __privateGet(this, _e);
  }
  get width() {
    return __privateGet(this, _e)[0];
  }
  get height() {
    return __privateGet(this, _e)[1];
  }
  get viewports() {
    let t = [];
    for (let e of __privateGet(this, _i2)) t.push(...e.viewports);
    return t;
  }
  init() {
    __privateGet(this, _h).call(this);
  }
  release() {
    for (let t of __privateGet(this, _i2)) t.release();
  }
  consumeDecodedFrame({ decoded_frame: t }) {
    for (let e of __privateGet(this, _i2)) e.drawFrame({ decoded_frame: t });
  }
  addViewport({ viewport: t }) {
    __privateMethod(this, _Ze_instances, a_fn).call(this, { viewport: t }), __privateGet(this, _h).call(this);
  }
  addViewports({ viewports: t }) {
    for (let e of t) __privateMethod(this, _Ze_instances, a_fn).call(this, { viewport: e });
    __privateGet(this, _h).call(this);
  }
  removeViewport({ viewport: t }) {
    let e = __privateGet(this, _i2).indexOf(t.rendering_surface);
    if (e === -1) throw new Error("Viewport without registered surface");
    let n = __privateGet(this, _i2)[e];
    n.removeViewport({ viewport: t }), t.release(), n.viewports.length === 0 && (n.removeEventListener("on-rendering-surface-resized", __privateGet(this, _h)), n.release(), __privateGet(this, _i2).splice(e, 1)), __privateGet(this, _h).call(this);
  }
  _computeRemoteCanvasSize({ codec: t }) {
    if (t === "h265") {
      let e = [64, 64];
      __privateSet(this, _n, e), __privateMethod(this, _Ze_instances, d_fn).call(this);
    }
    return __privateGet(this, _e);
  }
}, _t2 = new WeakMap(), _i2 = new WeakMap(), _e = new WeakMap(), _n = new WeakMap(), _r = new WeakMap(), _Ze_instances = new WeakSet(), o_get = function() {
  let t = [];
  for (let e of __privateGet(this, _i2)) t.push(...e._getViewportConfigs({ width: this.width, height: this.height }));
  return t.sort((e, n) => e.z_index - n.z_index);
}, s_fn = function() {
  return __privateGet(this, _i2).every((t) => t.isValid());
}, a_fn = function({ viewport: t }) {
  t.rendering_surface.addViewport({ viewport: t }), !__privateGet(this, _i2).includes(t.rendering_surface) && __privateMethod(this, _Ze_instances, c_fn).call(this, { surface: t.rendering_surface });
}, c_fn = function({ surface: t }) {
  t.addEventListener("on-rendering-surface-resized", __privateGet(this, _h)), __privateGet(this, _i2).push(t);
}, _h = new WeakMap(), _l = new WeakMap(), d_fn = function() {
  let { offset: t, width: e, height: n } = __privateMethod(this, _Ze_instances, m_fn).call(this), r = [__privateGet(this, _l).call(this, e, __privateGet(this, _n)[0]), __privateGet(this, _l).call(this, n, __privateGet(this, _n)[1])];
  __privateGet(this, _r) || __privateSet(this, _r, r[0] != __privateGet(this, _e)[0] || r[1] != this.dimensions[1]), __privateSet(this, _e, r), __privateMethod(this, _Ze_instances, u_fn).call(this, { offset: t, width: __privateGet(this, _e)[0], height: __privateGet(this, _e)[1] });
}, m_fn = function() {
  let t = [Number.MAX_VALUE, Number.MAX_VALUE], e = [0, 0];
  for (let s of __privateGet(this, _i2)) {
    let o = s.getBoundingRect();
    t[0] = Math.min(t[0], o.left), t[1] = Math.min(t[1], o.top), e[0] = Math.max(e[0], o.right), e[1] = Math.max(e[1], o.bottom);
  }
  let n = e[0] - t[0], r = e[1] - t[1];
  return { offset: t, width: n, height: r };
}, u_fn = function({ offset: t, width: e, height: n }) {
  for (let r of __privateGet(this, _i2)) {
    let s = r.getBoundingRect();
    r.relative_rect = new dt({ left: (s.left - t[0]) / e, top: (s.top - t[1]) / n, width: (s.right - s.left) / e, height: (s.bottom - s.top) / n });
  }
}, _a4);
var Vt = {};
de(Vt, { ARRAY_TYPE: () => q, EPSILON: () => k, RANDOM: () => Lt, equals: () => Xs, setMatrixArrayType: () => Gs, toRadian: () => js });
var k = 1e-6;
var q = typeof Float32Array < "u" ? Float32Array : Array;
var Lt = Math.random;
function Gs(i8) {
  q = i8;
}
var qs = Math.PI / 180;
function js(i8) {
  return i8 * qs;
}
function Xs(i8, t) {
  return Math.abs(i8 - t) <= k * Math.max(1, Math.abs(i8), Math.abs(t));
}
Math.hypot || (Math.hypot = function() {
  for (var i8 = 0, t = arguments.length; t--; ) i8 += arguments[t] * arguments[t];
  return Math.sqrt(i8);
});
var me = {};
de(me, { add: () => yo, adjoint: () => io, clone: () => Zs, copy: () => Ks, create: () => hn, determinant: () => no, equals: () => Eo, exactEquals: () => xo, frob: () => fo, fromMat2d: () => lo, fromMat4: () => Ws, fromQuat: () => mo, fromRotation: () => ho, fromScaling: () => co, fromTranslation: () => ao, fromValues: () => Qs, identity: () => Js, invert: () => eo, mul: () => wo, multiply: () => $n, multiplyScalar: () => vo, multiplyScalarAndAdd: () => go, normalFromMat4: () => uo, projection: () => po, rotate: () => so, scale: () => oo, set: () => $s, str: () => _o, sub: () => Co, subtract: () => Jn, translate: () => ro, transpose: () => to });
function hn() {
  var i8 = new q(9);
  return q != Float32Array && (i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[5] = 0, i8[6] = 0, i8[7] = 0), i8[0] = 1, i8[4] = 1, i8[8] = 1, i8;
}
function Ws(i8, t) {
  return i8[0] = t[0], i8[1] = t[1], i8[2] = t[2], i8[3] = t[4], i8[4] = t[5], i8[5] = t[6], i8[6] = t[8], i8[7] = t[9], i8[8] = t[10], i8;
}
function Zs(i8) {
  var t = new q(9);
  return t[0] = i8[0], t[1] = i8[1], t[2] = i8[2], t[3] = i8[3], t[4] = i8[4], t[5] = i8[5], t[6] = i8[6], t[7] = i8[7], t[8] = i8[8], t;
}
function Ks(i8, t) {
  return i8[0] = t[0], i8[1] = t[1], i8[2] = t[2], i8[3] = t[3], i8[4] = t[4], i8[5] = t[5], i8[6] = t[6], i8[7] = t[7], i8[8] = t[8], i8;
}
function Qs(i8, t, e, n, r, s, o, a, h) {
  var c = new q(9);
  return c[0] = i8, c[1] = t, c[2] = e, c[3] = n, c[4] = r, c[5] = s, c[6] = o, c[7] = a, c[8] = h, c;
}
function $s(i8, t, e, n, r, s, o, a, h, c) {
  return i8[0] = t, i8[1] = e, i8[2] = n, i8[3] = r, i8[4] = s, i8[5] = o, i8[6] = a, i8[7] = h, i8[8] = c, i8;
}
function Js(i8) {
  return i8[0] = 1, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 1, i8[5] = 0, i8[6] = 0, i8[7] = 0, i8[8] = 1, i8;
}
function to(i8, t) {
  if (i8 === t) {
    var e = t[1], n = t[2], r = t[5];
    i8[1] = t[3], i8[2] = t[6], i8[3] = e, i8[5] = t[7], i8[6] = n, i8[7] = r;
  } else i8[0] = t[0], i8[1] = t[3], i8[2] = t[6], i8[3] = t[1], i8[4] = t[4], i8[5] = t[7], i8[6] = t[2], i8[7] = t[5], i8[8] = t[8];
  return i8;
}
function eo(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = t[4], a = t[5], h = t[6], c = t[7], l = t[8], d = l * o - a * c, m = -l * s + a * h, u = c * s - o * h, p = e * d + n * m + r * u;
  return p ? (p = 1 / p, i8[0] = d * p, i8[1] = (-l * n + r * c) * p, i8[2] = (a * n - r * o) * p, i8[3] = m * p, i8[4] = (l * e - r * h) * p, i8[5] = (-a * e + r * s) * p, i8[6] = u * p, i8[7] = (-c * e + n * h) * p, i8[8] = (o * e - n * s) * p, i8) : null;
}
function io(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = t[4], a = t[5], h = t[6], c = t[7], l = t[8];
  return i8[0] = o * l - a * c, i8[1] = r * c - n * l, i8[2] = n * a - r * o, i8[3] = a * h - s * l, i8[4] = e * l - r * h, i8[5] = r * s - e * a, i8[6] = s * c - o * h, i8[7] = n * h - e * c, i8[8] = e * o - n * s, i8;
}
function no(i8) {
  var t = i8[0], e = i8[1], n = i8[2], r = i8[3], s = i8[4], o = i8[5], a = i8[6], h = i8[7], c = i8[8];
  return t * (c * s - o * h) + e * (-c * r + o * a) + n * (h * r - s * a);
}
function $n(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = t[3], a = t[4], h = t[5], c = t[6], l = t[7], d = t[8], m = e[0], u = e[1], p = e[2], f = e[3], _ = e[4], y = e[5], M = e[6], v = e[7], x = e[8];
  return i8[0] = m * n + u * o + p * c, i8[1] = m * r + u * a + p * l, i8[2] = m * s + u * h + p * d, i8[3] = f * n + _ * o + y * c, i8[4] = f * r + _ * a + y * l, i8[5] = f * s + _ * h + y * d, i8[6] = M * n + v * o + x * c, i8[7] = M * r + v * a + x * l, i8[8] = M * s + v * h + x * d, i8;
}
function ro(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = t[3], a = t[4], h = t[5], c = t[6], l = t[7], d = t[8], m = e[0], u = e[1];
  return i8[0] = n, i8[1] = r, i8[2] = s, i8[3] = o, i8[4] = a, i8[5] = h, i8[6] = m * n + u * o + c, i8[7] = m * r + u * a + l, i8[8] = m * s + u * h + d, i8;
}
function so(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = t[3], a = t[4], h = t[5], c = t[6], l = t[7], d = t[8], m = Math.sin(e), u = Math.cos(e);
  return i8[0] = u * n + m * o, i8[1] = u * r + m * a, i8[2] = u * s + m * h, i8[3] = u * o - m * n, i8[4] = u * a - m * r, i8[5] = u * h - m * s, i8[6] = c, i8[7] = l, i8[8] = d, i8;
}
function oo(i8, t, e) {
  var n = e[0], r = e[1];
  return i8[0] = n * t[0], i8[1] = n * t[1], i8[2] = n * t[2], i8[3] = r * t[3], i8[4] = r * t[4], i8[5] = r * t[5], i8[6] = t[6], i8[7] = t[7], i8[8] = t[8], i8;
}
function ao(i8, t) {
  return i8[0] = 1, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 1, i8[5] = 0, i8[6] = t[0], i8[7] = t[1], i8[8] = 1, i8;
}
function ho(i8, t) {
  var e = Math.sin(t), n = Math.cos(t);
  return i8[0] = n, i8[1] = e, i8[2] = 0, i8[3] = -e, i8[4] = n, i8[5] = 0, i8[6] = 0, i8[7] = 0, i8[8] = 1, i8;
}
function co(i8, t) {
  return i8[0] = t[0], i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = t[1], i8[5] = 0, i8[6] = 0, i8[7] = 0, i8[8] = 1, i8;
}
function lo(i8, t) {
  return i8[0] = t[0], i8[1] = t[1], i8[2] = 0, i8[3] = t[2], i8[4] = t[3], i8[5] = 0, i8[6] = t[4], i8[7] = t[5], i8[8] = 1, i8;
}
function mo(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = e + e, a = n + n, h = r + r, c = e * o, l = n * o, d = n * a, m = r * o, u = r * a, p = r * h, f = s * o, _ = s * a, y = s * h;
  return i8[0] = 1 - d - p, i8[3] = l - y, i8[6] = m + _, i8[1] = l + y, i8[4] = 1 - c - p, i8[7] = u - f, i8[2] = m - _, i8[5] = u + f, i8[8] = 1 - c - d, i8;
}
function uo(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = t[4], a = t[5], h = t[6], c = t[7], l = t[8], d = t[9], m = t[10], u = t[11], p = t[12], f = t[13], _ = t[14], y = t[15], M = e * a - n * o, v = e * h - r * o, x = e * c - s * o, E = n * h - r * a, w = n * c - s * a, C = r * c - s * h, S = l * f - d * p, P = l * _ - m * p, R = l * y - u * p, F = d * _ - m * f, O = d * y - u * f, V = m * y - u * _, A = M * V - v * O + x * F + E * R - w * P + C * S;
  return A ? (A = 1 / A, i8[0] = (a * V - h * O + c * F) * A, i8[1] = (h * R - o * V - c * P) * A, i8[2] = (o * O - a * R + c * S) * A, i8[3] = (r * O - n * V - s * F) * A, i8[4] = (e * V - r * R + s * P) * A, i8[5] = (n * R - e * O - s * S) * A, i8[6] = (f * C - _ * w + y * E) * A, i8[7] = (_ * x - p * C - y * v) * A, i8[8] = (p * w - f * x + y * M) * A, i8) : null;
}
function po(i8, t, e) {
  return i8[0] = 2 / t, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = -2 / e, i8[5] = 0, i8[6] = -1, i8[7] = 1, i8[8] = 1, i8;
}
function _o(i8) {
  return "mat3(" + i8[0] + ", " + i8[1] + ", " + i8[2] + ", " + i8[3] + ", " + i8[4] + ", " + i8[5] + ", " + i8[6] + ", " + i8[7] + ", " + i8[8] + ")";
}
function fo(i8) {
  return Math.hypot(i8[0], i8[1], i8[2], i8[3], i8[4], i8[5], i8[6], i8[7], i8[8]);
}
function yo(i8, t, e) {
  return i8[0] = t[0] + e[0], i8[1] = t[1] + e[1], i8[2] = t[2] + e[2], i8[3] = t[3] + e[3], i8[4] = t[4] + e[4], i8[5] = t[5] + e[5], i8[6] = t[6] + e[6], i8[7] = t[7] + e[7], i8[8] = t[8] + e[8], i8;
}
function Jn(i8, t, e) {
  return i8[0] = t[0] - e[0], i8[1] = t[1] - e[1], i8[2] = t[2] - e[2], i8[3] = t[3] - e[3], i8[4] = t[4] - e[4], i8[5] = t[5] - e[5], i8[6] = t[6] - e[6], i8[7] = t[7] - e[7], i8[8] = t[8] - e[8], i8;
}
function vo(i8, t, e) {
  return i8[0] = t[0] * e, i8[1] = t[1] * e, i8[2] = t[2] * e, i8[3] = t[3] * e, i8[4] = t[4] * e, i8[5] = t[5] * e, i8[6] = t[6] * e, i8[7] = t[7] * e, i8[8] = t[8] * e, i8;
}
function go(i8, t, e, n) {
  return i8[0] = t[0] + e[0] * n, i8[1] = t[1] + e[1] * n, i8[2] = t[2] + e[2] * n, i8[3] = t[3] + e[3] * n, i8[4] = t[4] + e[4] * n, i8[5] = t[5] + e[5] * n, i8[6] = t[6] + e[6] * n, i8[7] = t[7] + e[7] * n, i8[8] = t[8] + e[8] * n, i8;
}
function xo(i8, t) {
  return i8[0] === t[0] && i8[1] === t[1] && i8[2] === t[2] && i8[3] === t[3] && i8[4] === t[4] && i8[5] === t[5] && i8[6] === t[6] && i8[7] === t[7] && i8[8] === t[8];
}
function Eo(i8, t) {
  var e = i8[0], n = i8[1], r = i8[2], s = i8[3], o = i8[4], a = i8[5], h = i8[6], c = i8[7], l = i8[8], d = t[0], m = t[1], u = t[2], p = t[3], f = t[4], _ = t[5], y = t[6], M = t[7], v = t[8];
  return Math.abs(e - d) <= k * Math.max(1, Math.abs(e), Math.abs(d)) && Math.abs(n - m) <= k * Math.max(1, Math.abs(n), Math.abs(m)) && Math.abs(r - u) <= k * Math.max(1, Math.abs(r), Math.abs(u)) && Math.abs(s - p) <= k * Math.max(1, Math.abs(s), Math.abs(p)) && Math.abs(o - f) <= k * Math.max(1, Math.abs(o), Math.abs(f)) && Math.abs(a - _) <= k * Math.max(1, Math.abs(a), Math.abs(_)) && Math.abs(h - y) <= k * Math.max(1, Math.abs(h), Math.abs(y)) && Math.abs(c - M) <= k * Math.max(1, Math.abs(c), Math.abs(M)) && Math.abs(l - v) <= k * Math.max(1, Math.abs(l), Math.abs(v));
}
var wo = $n;
var Co = Jn;
var J = {};
de(J, { add: () => aa, adjoint: () => Oo, clone: () => To, copy: () => bo, create: () => Mo, determinant: () => Do, equals: () => da, exactEquals: () => la, frob: () => oa, fromQuat: () => Ko, fromQuat2: () => qo, fromRotation: () => Bo, fromRotationTranslation: () => ir, fromRotationTranslationScale: () => Wo, fromRotationTranslationScaleOrigin: () => Zo, fromScaling: () => No, fromTranslation: () => Io, fromValues: () => Ro, fromXRotation: () => Ho, fromYRotation: () => Yo, fromZRotation: () => Go, frustum: () => Qo, getRotation: () => Xo, getScaling: () => nr, getTranslation: () => jo, identity: () => tr, invert: () => Po, lookAt: () => na, mul: () => ma, multiply: () => er, multiplyScalar: () => ha, multiplyScalarAndAdd: () => ca, ortho: () => ea, orthoNO: () => sr, orthoZO: () => ia, perspective: () => $o, perspectiveFromFieldOfView: () => ta, perspectiveNO: () => rr, perspectiveZO: () => Jo, rotate: () => Lo, rotateX: () => Vo, rotateY: () => Uo, rotateZ: () => ko, scale: () => Fo, set: () => Ao, str: () => sa, sub: () => ua, subtract: () => or, targetTo: () => ra, translate: () => zo, transpose: () => So });
function Mo() {
  var i8 = new q(16);
  return q != Float32Array && (i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0), i8[0] = 1, i8[5] = 1, i8[10] = 1, i8[15] = 1, i8;
}
function To(i8) {
  var t = new q(16);
  return t[0] = i8[0], t[1] = i8[1], t[2] = i8[2], t[3] = i8[3], t[4] = i8[4], t[5] = i8[5], t[6] = i8[6], t[7] = i8[7], t[8] = i8[8], t[9] = i8[9], t[10] = i8[10], t[11] = i8[11], t[12] = i8[12], t[13] = i8[13], t[14] = i8[14], t[15] = i8[15], t;
}
function bo(i8, t) {
  return i8[0] = t[0], i8[1] = t[1], i8[2] = t[2], i8[3] = t[3], i8[4] = t[4], i8[5] = t[5], i8[6] = t[6], i8[7] = t[7], i8[8] = t[8], i8[9] = t[9], i8[10] = t[10], i8[11] = t[11], i8[12] = t[12], i8[13] = t[13], i8[14] = t[14], i8[15] = t[15], i8;
}
function Ro(i8, t, e, n, r, s, o, a, h, c, l, d, m, u, p, f) {
  var _ = new q(16);
  return _[0] = i8, _[1] = t, _[2] = e, _[3] = n, _[4] = r, _[5] = s, _[6] = o, _[7] = a, _[8] = h, _[9] = c, _[10] = l, _[11] = d, _[12] = m, _[13] = u, _[14] = p, _[15] = f, _;
}
function Ao(i8, t, e, n, r, s, o, a, h, c, l, d, m, u, p, f, _) {
  return i8[0] = t, i8[1] = e, i8[2] = n, i8[3] = r, i8[4] = s, i8[5] = o, i8[6] = a, i8[7] = h, i8[8] = c, i8[9] = l, i8[10] = d, i8[11] = m, i8[12] = u, i8[13] = p, i8[14] = f, i8[15] = _, i8;
}
function tr(i8) {
  return i8[0] = 1, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = 1, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[10] = 1, i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0, i8[15] = 1, i8;
}
function So(i8, t) {
  if (i8 === t) {
    var e = t[1], n = t[2], r = t[3], s = t[6], o = t[7], a = t[11];
    i8[1] = t[4], i8[2] = t[8], i8[3] = t[12], i8[4] = e, i8[6] = t[9], i8[7] = t[13], i8[8] = n, i8[9] = s, i8[11] = t[14], i8[12] = r, i8[13] = o, i8[14] = a;
  } else i8[0] = t[0], i8[1] = t[4], i8[2] = t[8], i8[3] = t[12], i8[4] = t[1], i8[5] = t[5], i8[6] = t[9], i8[7] = t[13], i8[8] = t[2], i8[9] = t[6], i8[10] = t[10], i8[11] = t[14], i8[12] = t[3], i8[13] = t[7], i8[14] = t[11], i8[15] = t[15];
  return i8;
}
function Po(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = t[4], a = t[5], h = t[6], c = t[7], l = t[8], d = t[9], m = t[10], u = t[11], p = t[12], f = t[13], _ = t[14], y = t[15], M = e * a - n * o, v = e * h - r * o, x = e * c - s * o, E = n * h - r * a, w = n * c - s * a, C = r * c - s * h, S = l * f - d * p, P = l * _ - m * p, R = l * y - u * p, F = d * _ - m * f, O = d * y - u * f, V = m * y - u * _, A = M * V - v * O + x * F + E * R - w * P + C * S;
  return A ? (A = 1 / A, i8[0] = (a * V - h * O + c * F) * A, i8[1] = (r * O - n * V - s * F) * A, i8[2] = (f * C - _ * w + y * E) * A, i8[3] = (m * w - d * C - u * E) * A, i8[4] = (h * R - o * V - c * P) * A, i8[5] = (e * V - r * R + s * P) * A, i8[6] = (_ * x - p * C - y * v) * A, i8[7] = (l * C - m * x + u * v) * A, i8[8] = (o * O - a * R + c * S) * A, i8[9] = (n * R - e * O - s * S) * A, i8[10] = (p * w - f * x + y * M) * A, i8[11] = (d * x - l * w - u * M) * A, i8[12] = (a * P - o * F - h * S) * A, i8[13] = (e * F - n * P + r * S) * A, i8[14] = (f * v - p * E - _ * M) * A, i8[15] = (l * E - d * v + m * M) * A, i8) : null;
}
function Oo(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = t[4], a = t[5], h = t[6], c = t[7], l = t[8], d = t[9], m = t[10], u = t[11], p = t[12], f = t[13], _ = t[14], y = t[15];
  return i8[0] = a * (m * y - u * _) - d * (h * y - c * _) + f * (h * u - c * m), i8[1] = -(n * (m * y - u * _) - d * (r * y - s * _) + f * (r * u - s * m)), i8[2] = n * (h * y - c * _) - a * (r * y - s * _) + f * (r * c - s * h), i8[3] = -(n * (h * u - c * m) - a * (r * u - s * m) + d * (r * c - s * h)), i8[4] = -(o * (m * y - u * _) - l * (h * y - c * _) + p * (h * u - c * m)), i8[5] = e * (m * y - u * _) - l * (r * y - s * _) + p * (r * u - s * m), i8[6] = -(e * (h * y - c * _) - o * (r * y - s * _) + p * (r * c - s * h)), i8[7] = e * (h * u - c * m) - o * (r * u - s * m) + l * (r * c - s * h), i8[8] = o * (d * y - u * f) - l * (a * y - c * f) + p * (a * u - c * d), i8[9] = -(e * (d * y - u * f) - l * (n * y - s * f) + p * (n * u - s * d)), i8[10] = e * (a * y - c * f) - o * (n * y - s * f) + p * (n * c - s * a), i8[11] = -(e * (a * u - c * d) - o * (n * u - s * d) + l * (n * c - s * a)), i8[12] = -(o * (d * _ - m * f) - l * (a * _ - h * f) + p * (a * m - h * d)), i8[13] = e * (d * _ - m * f) - l * (n * _ - r * f) + p * (n * m - r * d), i8[14] = -(e * (a * _ - h * f) - o * (n * _ - r * f) + p * (n * h - r * a)), i8[15] = e * (a * m - h * d) - o * (n * m - r * d) + l * (n * h - r * a), i8;
}
function Do(i8) {
  var t = i8[0], e = i8[1], n = i8[2], r = i8[3], s = i8[4], o = i8[5], a = i8[6], h = i8[7], c = i8[8], l = i8[9], d = i8[10], m = i8[11], u = i8[12], p = i8[13], f = i8[14], _ = i8[15], y = t * o - e * s, M = t * a - n * s, v = t * h - r * s, x = e * a - n * o, E = e * h - r * o, w = n * h - r * a, C = c * p - l * u, S = c * f - d * u, P = c * _ - m * u, R = l * f - d * p, F = l * _ - m * p, O = d * _ - m * f;
  return y * O - M * F + v * R + x * P - E * S + w * C;
}
function er(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = t[3], a = t[4], h = t[5], c = t[6], l = t[7], d = t[8], m = t[9], u = t[10], p = t[11], f = t[12], _ = t[13], y = t[14], M = t[15], v = e[0], x = e[1], E = e[2], w = e[3];
  return i8[0] = v * n + x * a + E * d + w * f, i8[1] = v * r + x * h + E * m + w * _, i8[2] = v * s + x * c + E * u + w * y, i8[3] = v * o + x * l + E * p + w * M, v = e[4], x = e[5], E = e[6], w = e[7], i8[4] = v * n + x * a + E * d + w * f, i8[5] = v * r + x * h + E * m + w * _, i8[6] = v * s + x * c + E * u + w * y, i8[7] = v * o + x * l + E * p + w * M, v = e[8], x = e[9], E = e[10], w = e[11], i8[8] = v * n + x * a + E * d + w * f, i8[9] = v * r + x * h + E * m + w * _, i8[10] = v * s + x * c + E * u + w * y, i8[11] = v * o + x * l + E * p + w * M, v = e[12], x = e[13], E = e[14], w = e[15], i8[12] = v * n + x * a + E * d + w * f, i8[13] = v * r + x * h + E * m + w * _, i8[14] = v * s + x * c + E * u + w * y, i8[15] = v * o + x * l + E * p + w * M, i8;
}
function zo(i8, t, e) {
  var n = e[0], r = e[1], s = e[2], o, a, h, c, l, d, m, u, p, f, _, y;
  return t === i8 ? (i8[12] = t[0] * n + t[4] * r + t[8] * s + t[12], i8[13] = t[1] * n + t[5] * r + t[9] * s + t[13], i8[14] = t[2] * n + t[6] * r + t[10] * s + t[14], i8[15] = t[3] * n + t[7] * r + t[11] * s + t[15]) : (o = t[0], a = t[1], h = t[2], c = t[3], l = t[4], d = t[5], m = t[6], u = t[7], p = t[8], f = t[9], _ = t[10], y = t[11], i8[0] = o, i8[1] = a, i8[2] = h, i8[3] = c, i8[4] = l, i8[5] = d, i8[6] = m, i8[7] = u, i8[8] = p, i8[9] = f, i8[10] = _, i8[11] = y, i8[12] = o * n + l * r + p * s + t[12], i8[13] = a * n + d * r + f * s + t[13], i8[14] = h * n + m * r + _ * s + t[14], i8[15] = c * n + u * r + y * s + t[15]), i8;
}
function Fo(i8, t, e) {
  var n = e[0], r = e[1], s = e[2];
  return i8[0] = t[0] * n, i8[1] = t[1] * n, i8[2] = t[2] * n, i8[3] = t[3] * n, i8[4] = t[4] * r, i8[5] = t[5] * r, i8[6] = t[6] * r, i8[7] = t[7] * r, i8[8] = t[8] * s, i8[9] = t[9] * s, i8[10] = t[10] * s, i8[11] = t[11] * s, i8[12] = t[12], i8[13] = t[13], i8[14] = t[14], i8[15] = t[15], i8;
}
function Lo(i8, t, e, n) {
  var r = n[0], s = n[1], o = n[2], a = Math.hypot(r, s, o), h, c, l, d, m, u, p, f, _, y, M, v, x, E, w, C, S, P, R, F, O, V, A, z;
  return a < k ? null : (a = 1 / a, r *= a, s *= a, o *= a, h = Math.sin(e), c = Math.cos(e), l = 1 - c, d = t[0], m = t[1], u = t[2], p = t[3], f = t[4], _ = t[5], y = t[6], M = t[7], v = t[8], x = t[9], E = t[10], w = t[11], C = r * r * l + c, S = s * r * l + o * h, P = o * r * l - s * h, R = r * s * l - o * h, F = s * s * l + c, O = o * s * l + r * h, V = r * o * l + s * h, A = s * o * l - r * h, z = o * o * l + c, i8[0] = d * C + f * S + v * P, i8[1] = m * C + _ * S + x * P, i8[2] = u * C + y * S + E * P, i8[3] = p * C + M * S + w * P, i8[4] = d * R + f * F + v * O, i8[5] = m * R + _ * F + x * O, i8[6] = u * R + y * F + E * O, i8[7] = p * R + M * F + w * O, i8[8] = d * V + f * A + v * z, i8[9] = m * V + _ * A + x * z, i8[10] = u * V + y * A + E * z, i8[11] = p * V + M * A + w * z, t !== i8 && (i8[12] = t[12], i8[13] = t[13], i8[14] = t[14], i8[15] = t[15]), i8);
}
function Vo(i8, t, e) {
  var n = Math.sin(e), r = Math.cos(e), s = t[4], o = t[5], a = t[6], h = t[7], c = t[8], l = t[9], d = t[10], m = t[11];
  return t !== i8 && (i8[0] = t[0], i8[1] = t[1], i8[2] = t[2], i8[3] = t[3], i8[12] = t[12], i8[13] = t[13], i8[14] = t[14], i8[15] = t[15]), i8[4] = s * r + c * n, i8[5] = o * r + l * n, i8[6] = a * r + d * n, i8[7] = h * r + m * n, i8[8] = c * r - s * n, i8[9] = l * r - o * n, i8[10] = d * r - a * n, i8[11] = m * r - h * n, i8;
}
function Uo(i8, t, e) {
  var n = Math.sin(e), r = Math.cos(e), s = t[0], o = t[1], a = t[2], h = t[3], c = t[8], l = t[9], d = t[10], m = t[11];
  return t !== i8 && (i8[4] = t[4], i8[5] = t[5], i8[6] = t[6], i8[7] = t[7], i8[12] = t[12], i8[13] = t[13], i8[14] = t[14], i8[15] = t[15]), i8[0] = s * r - c * n, i8[1] = o * r - l * n, i8[2] = a * r - d * n, i8[3] = h * r - m * n, i8[8] = s * n + c * r, i8[9] = o * n + l * r, i8[10] = a * n + d * r, i8[11] = h * n + m * r, i8;
}
function ko(i8, t, e) {
  var n = Math.sin(e), r = Math.cos(e), s = t[0], o = t[1], a = t[2], h = t[3], c = t[4], l = t[5], d = t[6], m = t[7];
  return t !== i8 && (i8[8] = t[8], i8[9] = t[9], i8[10] = t[10], i8[11] = t[11], i8[12] = t[12], i8[13] = t[13], i8[14] = t[14], i8[15] = t[15]), i8[0] = s * r + c * n, i8[1] = o * r + l * n, i8[2] = a * r + d * n, i8[3] = h * r + m * n, i8[4] = c * r - s * n, i8[5] = l * r - o * n, i8[6] = d * r - a * n, i8[7] = m * r - h * n, i8;
}
function Io(i8, t) {
  return i8[0] = 1, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = 1, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[10] = 1, i8[11] = 0, i8[12] = t[0], i8[13] = t[1], i8[14] = t[2], i8[15] = 1, i8;
}
function No(i8, t) {
  return i8[0] = t[0], i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = t[1], i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[10] = t[2], i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0, i8[15] = 1, i8;
}
function Bo(i8, t, e) {
  var n = e[0], r = e[1], s = e[2], o = Math.hypot(n, r, s), a, h, c;
  return o < k ? null : (o = 1 / o, n *= o, r *= o, s *= o, a = Math.sin(t), h = Math.cos(t), c = 1 - h, i8[0] = n * n * c + h, i8[1] = r * n * c + s * a, i8[2] = s * n * c - r * a, i8[3] = 0, i8[4] = n * r * c - s * a, i8[5] = r * r * c + h, i8[6] = s * r * c + n * a, i8[7] = 0, i8[8] = n * s * c + r * a, i8[9] = r * s * c - n * a, i8[10] = s * s * c + h, i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0, i8[15] = 1, i8);
}
function Ho(i8, t) {
  var e = Math.sin(t), n = Math.cos(t);
  return i8[0] = 1, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = n, i8[6] = e, i8[7] = 0, i8[8] = 0, i8[9] = -e, i8[10] = n, i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0, i8[15] = 1, i8;
}
function Yo(i8, t) {
  var e = Math.sin(t), n = Math.cos(t);
  return i8[0] = n, i8[1] = 0, i8[2] = -e, i8[3] = 0, i8[4] = 0, i8[5] = 1, i8[6] = 0, i8[7] = 0, i8[8] = e, i8[9] = 0, i8[10] = n, i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0, i8[15] = 1, i8;
}
function Go(i8, t) {
  var e = Math.sin(t), n = Math.cos(t);
  return i8[0] = n, i8[1] = e, i8[2] = 0, i8[3] = 0, i8[4] = -e, i8[5] = n, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[10] = 1, i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0, i8[15] = 1, i8;
}
function ir(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = t[3], a = n + n, h = r + r, c = s + s, l = n * a, d = n * h, m = n * c, u = r * h, p = r * c, f = s * c, _ = o * a, y = o * h, M = o * c;
  return i8[0] = 1 - (u + f), i8[1] = d + M, i8[2] = m - y, i8[3] = 0, i8[4] = d - M, i8[5] = 1 - (l + f), i8[6] = p + _, i8[7] = 0, i8[8] = m + y, i8[9] = p - _, i8[10] = 1 - (l + u), i8[11] = 0, i8[12] = e[0], i8[13] = e[1], i8[14] = e[2], i8[15] = 1, i8;
}
function qo(i8, t) {
  var e = new q(3), n = -t[0], r = -t[1], s = -t[2], o = t[3], a = t[4], h = t[5], c = t[6], l = t[7], d = n * n + r * r + s * s + o * o;
  return d > 0 ? (e[0] = (a * o + l * n + h * s - c * r) * 2 / d, e[1] = (h * o + l * r + c * n - a * s) * 2 / d, e[2] = (c * o + l * s + a * r - h * n) * 2 / d) : (e[0] = (a * o + l * n + h * s - c * r) * 2, e[1] = (h * o + l * r + c * n - a * s) * 2, e[2] = (c * o + l * s + a * r - h * n) * 2), ir(i8, t, e), i8;
}
function jo(i8, t) {
  return i8[0] = t[12], i8[1] = t[13], i8[2] = t[14], i8;
}
function nr(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[4], o = t[5], a = t[6], h = t[8], c = t[9], l = t[10];
  return i8[0] = Math.hypot(e, n, r), i8[1] = Math.hypot(s, o, a), i8[2] = Math.hypot(h, c, l), i8;
}
function Xo(i8, t) {
  var e = new q(3);
  nr(e, t);
  var n = 1 / e[0], r = 1 / e[1], s = 1 / e[2], o = t[0] * n, a = t[1] * r, h = t[2] * s, c = t[4] * n, l = t[5] * r, d = t[6] * s, m = t[8] * n, u = t[9] * r, p = t[10] * s, f = o + l + p, _ = 0;
  return f > 0 ? (_ = Math.sqrt(f + 1) * 2, i8[3] = 0.25 * _, i8[0] = (d - u) / _, i8[1] = (m - h) / _, i8[2] = (a - c) / _) : o > l && o > p ? (_ = Math.sqrt(1 + o - l - p) * 2, i8[3] = (d - u) / _, i8[0] = 0.25 * _, i8[1] = (a + c) / _, i8[2] = (m + h) / _) : l > p ? (_ = Math.sqrt(1 + l - o - p) * 2, i8[3] = (m - h) / _, i8[0] = (a + c) / _, i8[1] = 0.25 * _, i8[2] = (d + u) / _) : (_ = Math.sqrt(1 + p - o - l) * 2, i8[3] = (a - c) / _, i8[0] = (m + h) / _, i8[1] = (d + u) / _, i8[2] = 0.25 * _), i8;
}
function Wo(i8, t, e, n) {
  var r = t[0], s = t[1], o = t[2], a = t[3], h = r + r, c = s + s, l = o + o, d = r * h, m = r * c, u = r * l, p = s * c, f = s * l, _ = o * l, y = a * h, M = a * c, v = a * l, x = n[0], E = n[1], w = n[2];
  return i8[0] = (1 - (p + _)) * x, i8[1] = (m + v) * x, i8[2] = (u - M) * x, i8[3] = 0, i8[4] = (m - v) * E, i8[5] = (1 - (d + _)) * E, i8[6] = (f + y) * E, i8[7] = 0, i8[8] = (u + M) * w, i8[9] = (f - y) * w, i8[10] = (1 - (d + p)) * w, i8[11] = 0, i8[12] = e[0], i8[13] = e[1], i8[14] = e[2], i8[15] = 1, i8;
}
function Zo(i8, t, e, n, r) {
  var s = t[0], o = t[1], a = t[2], h = t[3], c = s + s, l = o + o, d = a + a, m = s * c, u = s * l, p = s * d, f = o * l, _ = o * d, y = a * d, M = h * c, v = h * l, x = h * d, E = n[0], w = n[1], C = n[2], S = r[0], P = r[1], R = r[2], F = (1 - (f + y)) * E, O = (u + x) * E, V = (p - v) * E, A = (u - x) * w, z = (1 - (m + y)) * w, N = (_ + M) * w, Q = (p + v) * C, rt = (_ - M) * C, ht = (1 - (m + f)) * C;
  return i8[0] = F, i8[1] = O, i8[2] = V, i8[3] = 0, i8[4] = A, i8[5] = z, i8[6] = N, i8[7] = 0, i8[8] = Q, i8[9] = rt, i8[10] = ht, i8[11] = 0, i8[12] = e[0] + S - (F * S + A * P + Q * R), i8[13] = e[1] + P - (O * S + z * P + rt * R), i8[14] = e[2] + R - (V * S + N * P + ht * R), i8[15] = 1, i8;
}
function Ko(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = e + e, a = n + n, h = r + r, c = e * o, l = n * o, d = n * a, m = r * o, u = r * a, p = r * h, f = s * o, _ = s * a, y = s * h;
  return i8[0] = 1 - d - p, i8[1] = l + y, i8[2] = m - _, i8[3] = 0, i8[4] = l - y, i8[5] = 1 - c - p, i8[6] = u + f, i8[7] = 0, i8[8] = m + _, i8[9] = u - f, i8[10] = 1 - c - d, i8[11] = 0, i8[12] = 0, i8[13] = 0, i8[14] = 0, i8[15] = 1, i8;
}
function Qo(i8, t, e, n, r, s, o) {
  var a = 1 / (e - t), h = 1 / (r - n), c = 1 / (s - o);
  return i8[0] = s * 2 * a, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = s * 2 * h, i8[6] = 0, i8[7] = 0, i8[8] = (e + t) * a, i8[9] = (r + n) * h, i8[10] = (o + s) * c, i8[11] = -1, i8[12] = 0, i8[13] = 0, i8[14] = o * s * 2 * c, i8[15] = 0, i8;
}
function rr(i8, t, e, n, r) {
  var s = 1 / Math.tan(t / 2), o;
  return i8[0] = s / e, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = s, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[11] = -1, i8[12] = 0, i8[13] = 0, i8[15] = 0, r != null && r !== 1 / 0 ? (o = 1 / (n - r), i8[10] = (r + n) * o, i8[14] = 2 * r * n * o) : (i8[10] = -1, i8[14] = -2 * n), i8;
}
var $o = rr;
function Jo(i8, t, e, n, r) {
  var s = 1 / Math.tan(t / 2), o;
  return i8[0] = s / e, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = s, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[11] = -1, i8[12] = 0, i8[13] = 0, i8[15] = 0, r != null && r !== 1 / 0 ? (o = 1 / (n - r), i8[10] = r * o, i8[14] = r * n * o) : (i8[10] = -1, i8[14] = -n), i8;
}
function ta(i8, t, e, n) {
  var r = Math.tan(t.upDegrees * Math.PI / 180), s = Math.tan(t.downDegrees * Math.PI / 180), o = Math.tan(t.leftDegrees * Math.PI / 180), a = Math.tan(t.rightDegrees * Math.PI / 180), h = 2 / (o + a), c = 2 / (r + s);
  return i8[0] = h, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = c, i8[6] = 0, i8[7] = 0, i8[8] = -((o - a) * h * 0.5), i8[9] = (r - s) * c * 0.5, i8[10] = n / (e - n), i8[11] = -1, i8[12] = 0, i8[13] = 0, i8[14] = n * e / (e - n), i8[15] = 0, i8;
}
function sr(i8, t, e, n, r, s, o) {
  var a = 1 / (t - e), h = 1 / (n - r), c = 1 / (s - o);
  return i8[0] = -2 * a, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = -2 * h, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[10] = 2 * c, i8[11] = 0, i8[12] = (t + e) * a, i8[13] = (r + n) * h, i8[14] = (o + s) * c, i8[15] = 1, i8;
}
var ea = sr;
function ia(i8, t, e, n, r, s, o) {
  var a = 1 / (t - e), h = 1 / (n - r), c = 1 / (s - o);
  return i8[0] = -2 * a, i8[1] = 0, i8[2] = 0, i8[3] = 0, i8[4] = 0, i8[5] = -2 * h, i8[6] = 0, i8[7] = 0, i8[8] = 0, i8[9] = 0, i8[10] = c, i8[11] = 0, i8[12] = (t + e) * a, i8[13] = (r + n) * h, i8[14] = s * c, i8[15] = 1, i8;
}
function na(i8, t, e, n) {
  var r, s, o, a, h, c, l, d, m, u, p = t[0], f = t[1], _ = t[2], y = n[0], M = n[1], v = n[2], x = e[0], E = e[1], w = e[2];
  return Math.abs(p - x) < k && Math.abs(f - E) < k && Math.abs(_ - w) < k ? tr(i8) : (l = p - x, d = f - E, m = _ - w, u = 1 / Math.hypot(l, d, m), l *= u, d *= u, m *= u, r = M * m - v * d, s = v * l - y * m, o = y * d - M * l, u = Math.hypot(r, s, o), u ? (u = 1 / u, r *= u, s *= u, o *= u) : (r = 0, s = 0, o = 0), a = d * o - m * s, h = m * r - l * o, c = l * s - d * r, u = Math.hypot(a, h, c), u ? (u = 1 / u, a *= u, h *= u, c *= u) : (a = 0, h = 0, c = 0), i8[0] = r, i8[1] = a, i8[2] = l, i8[3] = 0, i8[4] = s, i8[5] = h, i8[6] = d, i8[7] = 0, i8[8] = o, i8[9] = c, i8[10] = m, i8[11] = 0, i8[12] = -(r * p + s * f + o * _), i8[13] = -(a * p + h * f + c * _), i8[14] = -(l * p + d * f + m * _), i8[15] = 1, i8);
}
function ra(i8, t, e, n) {
  var r = t[0], s = t[1], o = t[2], a = n[0], h = n[1], c = n[2], l = r - e[0], d = s - e[1], m = o - e[2], u = l * l + d * d + m * m;
  u > 0 && (u = 1 / Math.sqrt(u), l *= u, d *= u, m *= u);
  var p = h * m - c * d, f = c * l - a * m, _ = a * d - h * l;
  return u = p * p + f * f + _ * _, u > 0 && (u = 1 / Math.sqrt(u), p *= u, f *= u, _ *= u), i8[0] = p, i8[1] = f, i8[2] = _, i8[3] = 0, i8[4] = d * _ - m * f, i8[5] = m * p - l * _, i8[6] = l * f - d * p, i8[7] = 0, i8[8] = l, i8[9] = d, i8[10] = m, i8[11] = 0, i8[12] = r, i8[13] = s, i8[14] = o, i8[15] = 1, i8;
}
function sa(i8) {
  return "mat4(" + i8[0] + ", " + i8[1] + ", " + i8[2] + ", " + i8[3] + ", " + i8[4] + ", " + i8[5] + ", " + i8[6] + ", " + i8[7] + ", " + i8[8] + ", " + i8[9] + ", " + i8[10] + ", " + i8[11] + ", " + i8[12] + ", " + i8[13] + ", " + i8[14] + ", " + i8[15] + ")";
}
function oa(i8) {
  return Math.hypot(i8[0], i8[1], i8[2], i8[3], i8[4], i8[5], i8[6], i8[7], i8[8], i8[9], i8[10], i8[11], i8[12], i8[13], i8[14], i8[15]);
}
function aa(i8, t, e) {
  return i8[0] = t[0] + e[0], i8[1] = t[1] + e[1], i8[2] = t[2] + e[2], i8[3] = t[3] + e[3], i8[4] = t[4] + e[4], i8[5] = t[5] + e[5], i8[6] = t[6] + e[6], i8[7] = t[7] + e[7], i8[8] = t[8] + e[8], i8[9] = t[9] + e[9], i8[10] = t[10] + e[10], i8[11] = t[11] + e[11], i8[12] = t[12] + e[12], i8[13] = t[13] + e[13], i8[14] = t[14] + e[14], i8[15] = t[15] + e[15], i8;
}
function or(i8, t, e) {
  return i8[0] = t[0] - e[0], i8[1] = t[1] - e[1], i8[2] = t[2] - e[2], i8[3] = t[3] - e[3], i8[4] = t[4] - e[4], i8[5] = t[5] - e[5], i8[6] = t[6] - e[6], i8[7] = t[7] - e[7], i8[8] = t[8] - e[8], i8[9] = t[9] - e[9], i8[10] = t[10] - e[10], i8[11] = t[11] - e[11], i8[12] = t[12] - e[12], i8[13] = t[13] - e[13], i8[14] = t[14] - e[14], i8[15] = t[15] - e[15], i8;
}
function ha(i8, t, e) {
  return i8[0] = t[0] * e, i8[1] = t[1] * e, i8[2] = t[2] * e, i8[3] = t[3] * e, i8[4] = t[4] * e, i8[5] = t[5] * e, i8[6] = t[6] * e, i8[7] = t[7] * e, i8[8] = t[8] * e, i8[9] = t[9] * e, i8[10] = t[10] * e, i8[11] = t[11] * e, i8[12] = t[12] * e, i8[13] = t[13] * e, i8[14] = t[14] * e, i8[15] = t[15] * e, i8;
}
function ca(i8, t, e, n) {
  return i8[0] = t[0] + e[0] * n, i8[1] = t[1] + e[1] * n, i8[2] = t[2] + e[2] * n, i8[3] = t[3] + e[3] * n, i8[4] = t[4] + e[4] * n, i8[5] = t[5] + e[5] * n, i8[6] = t[6] + e[6] * n, i8[7] = t[7] + e[7] * n, i8[8] = t[8] + e[8] * n, i8[9] = t[9] + e[9] * n, i8[10] = t[10] + e[10] * n, i8[11] = t[11] + e[11] * n, i8[12] = t[12] + e[12] * n, i8[13] = t[13] + e[13] * n, i8[14] = t[14] + e[14] * n, i8[15] = t[15] + e[15] * n, i8;
}
function la(i8, t) {
  return i8[0] === t[0] && i8[1] === t[1] && i8[2] === t[2] && i8[3] === t[3] && i8[4] === t[4] && i8[5] === t[5] && i8[6] === t[6] && i8[7] === t[7] && i8[8] === t[8] && i8[9] === t[9] && i8[10] === t[10] && i8[11] === t[11] && i8[12] === t[12] && i8[13] === t[13] && i8[14] === t[14] && i8[15] === t[15];
}
function da(i8, t) {
  var e = i8[0], n = i8[1], r = i8[2], s = i8[3], o = i8[4], a = i8[5], h = i8[6], c = i8[7], l = i8[8], d = i8[9], m = i8[10], u = i8[11], p = i8[12], f = i8[13], _ = i8[14], y = i8[15], M = t[0], v = t[1], x = t[2], E = t[3], w = t[4], C = t[5], S = t[6], P = t[7], R = t[8], F = t[9], O = t[10], V = t[11], A = t[12], z = t[13], N = t[14], Q = t[15];
  return Math.abs(e - M) <= k * Math.max(1, Math.abs(e), Math.abs(M)) && Math.abs(n - v) <= k * Math.max(1, Math.abs(n), Math.abs(v)) && Math.abs(r - x) <= k * Math.max(1, Math.abs(r), Math.abs(x)) && Math.abs(s - E) <= k * Math.max(1, Math.abs(s), Math.abs(E)) && Math.abs(o - w) <= k * Math.max(1, Math.abs(o), Math.abs(w)) && Math.abs(a - C) <= k * Math.max(1, Math.abs(a), Math.abs(C)) && Math.abs(h - S) <= k * Math.max(1, Math.abs(h), Math.abs(S)) && Math.abs(c - P) <= k * Math.max(1, Math.abs(c), Math.abs(P)) && Math.abs(l - R) <= k * Math.max(1, Math.abs(l), Math.abs(R)) && Math.abs(d - F) <= k * Math.max(1, Math.abs(d), Math.abs(F)) && Math.abs(m - O) <= k * Math.max(1, Math.abs(m), Math.abs(O)) && Math.abs(u - V) <= k * Math.max(1, Math.abs(u), Math.abs(V)) && Math.abs(p - A) <= k * Math.max(1, Math.abs(p), Math.abs(A)) && Math.abs(f - z) <= k * Math.max(1, Math.abs(f), Math.abs(z)) && Math.abs(_ - N) <= k * Math.max(1, Math.abs(_), Math.abs(N)) && Math.abs(y - Q) <= k * Math.max(1, Math.abs(y), Math.abs(Q));
}
var ma = er;
var ua = or;
var wt = {};
de(wt, { add: () => ph, calculateW: () => nh, clone: () => lh, conjugate: () => ah, copy: () => mh, create: () => dn, dot: () => zr, equals: () => xh, exactEquals: () => gh, exp: () => Sr, fromEuler: () => hh, fromMat3: () => Or, fromValues: () => dh, getAngle: () => Ja, getAxisAngle: () => $a, identity: () => Qa, invert: () => oh, len: () => yh, length: () => Fr, lerp: () => fh, ln: () => Pr, mul: () => _h2, multiply: () => Ar, normalize: () => mn, pow: () => rh, random: () => sh, rotateX: () => th, rotateY: () => eh, rotateZ: () => ih, rotationTo: () => Eh, scale: () => Dr, set: () => uh, setAxes: () => Ch, setAxisAngle: () => Rr, slerp: () => Je, sqlerp: () => wh, sqrLen: () => vh, squaredLength: () => Lr, str: () => ch });
var L = {};
de(L, { add: () => ya, angle: () => Ua, bezier: () => Sa, ceil: () => va, clone: () => pa, copy: () => _a5, create: () => Ke, cross: () => Se, dist: () => qa, distance: () => dr, div: () => Ga, divide: () => lr, dot: () => $e, equals: () => Ba, exactEquals: () => Na, floor: () => ga, forEach: () => Wa, fromValues: () => Qe, hermite: () => Aa, inverse: () => ba, len: () => ln, length: () => ar, lerp: () => Ra, max: () => Ea, min: () => xa, mul: () => Ya, multiply: () => cr, negate: () => Ta, normalize: () => cn, random: () => Pa, rotateX: () => Fa, rotateY: () => La, rotateZ: () => Va, round: () => wa, scale: () => Ca, scaleAndAdd: () => Ma, set: () => fa, sqrDist: () => ja, sqrLen: () => Xa, squaredDistance: () => mr, squaredLength: () => ur, str: () => Ia, sub: () => Ha, subtract: () => hr, transformMat3: () => Da, transformMat4: () => Oa, transformQuat: () => za, zero: () => ka });
function Ke() {
  var i8 = new q(3);
  return q != Float32Array && (i8[0] = 0, i8[1] = 0, i8[2] = 0), i8;
}
function pa(i8) {
  var t = new q(3);
  return t[0] = i8[0], t[1] = i8[1], t[2] = i8[2], t;
}
function ar(i8) {
  var t = i8[0], e = i8[1], n = i8[2];
  return Math.hypot(t, e, n);
}
function Qe(i8, t, e) {
  var n = new q(3);
  return n[0] = i8, n[1] = t, n[2] = e, n;
}
function _a5(i8, t) {
  return i8[0] = t[0], i8[1] = t[1], i8[2] = t[2], i8;
}
function fa(i8, t, e, n) {
  return i8[0] = t, i8[1] = e, i8[2] = n, i8;
}
function ya(i8, t, e) {
  return i8[0] = t[0] + e[0], i8[1] = t[1] + e[1], i8[2] = t[2] + e[2], i8;
}
function hr(i8, t, e) {
  return i8[0] = t[0] - e[0], i8[1] = t[1] - e[1], i8[2] = t[2] - e[2], i8;
}
function cr(i8, t, e) {
  return i8[0] = t[0] * e[0], i8[1] = t[1] * e[1], i8[2] = t[2] * e[2], i8;
}
function lr(i8, t, e) {
  return i8[0] = t[0] / e[0], i8[1] = t[1] / e[1], i8[2] = t[2] / e[2], i8;
}
function va(i8, t) {
  return i8[0] = Math.ceil(t[0]), i8[1] = Math.ceil(t[1]), i8[2] = Math.ceil(t[2]), i8;
}
function ga(i8, t) {
  return i8[0] = Math.floor(t[0]), i8[1] = Math.floor(t[1]), i8[2] = Math.floor(t[2]), i8;
}
function xa(i8, t, e) {
  return i8[0] = Math.min(t[0], e[0]), i8[1] = Math.min(t[1], e[1]), i8[2] = Math.min(t[2], e[2]), i8;
}
function Ea(i8, t, e) {
  return i8[0] = Math.max(t[0], e[0]), i8[1] = Math.max(t[1], e[1]), i8[2] = Math.max(t[2], e[2]), i8;
}
function wa(i8, t) {
  return i8[0] = Math.round(t[0]), i8[1] = Math.round(t[1]), i8[2] = Math.round(t[2]), i8;
}
function Ca(i8, t, e) {
  return i8[0] = t[0] * e, i8[1] = t[1] * e, i8[2] = t[2] * e, i8;
}
function Ma(i8, t, e, n) {
  return i8[0] = t[0] + e[0] * n, i8[1] = t[1] + e[1] * n, i8[2] = t[2] + e[2] * n, i8;
}
function dr(i8, t) {
  var e = t[0] - i8[0], n = t[1] - i8[1], r = t[2] - i8[2];
  return Math.hypot(e, n, r);
}
function mr(i8, t) {
  var e = t[0] - i8[0], n = t[1] - i8[1], r = t[2] - i8[2];
  return e * e + n * n + r * r;
}
function ur(i8) {
  var t = i8[0], e = i8[1], n = i8[2];
  return t * t + e * e + n * n;
}
function Ta(i8, t) {
  return i8[0] = -t[0], i8[1] = -t[1], i8[2] = -t[2], i8;
}
function ba(i8, t) {
  return i8[0] = 1 / t[0], i8[1] = 1 / t[1], i8[2] = 1 / t[2], i8;
}
function cn(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = e * e + n * n + r * r;
  return s > 0 && (s = 1 / Math.sqrt(s)), i8[0] = t[0] * s, i8[1] = t[1] * s, i8[2] = t[2] * s, i8;
}
function $e(i8, t) {
  return i8[0] * t[0] + i8[1] * t[1] + i8[2] * t[2];
}
function Se(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = e[0], a = e[1], h = e[2];
  return i8[0] = r * h - s * a, i8[1] = s * o - n * h, i8[2] = n * a - r * o, i8;
}
function Ra(i8, t, e, n) {
  var r = t[0], s = t[1], o = t[2];
  return i8[0] = r + n * (e[0] - r), i8[1] = s + n * (e[1] - s), i8[2] = o + n * (e[2] - o), i8;
}
function Aa(i8, t, e, n, r, s) {
  var o = s * s, a = o * (2 * s - 3) + 1, h = o * (s - 2) + s, c = o * (s - 1), l = o * (3 - 2 * s);
  return i8[0] = t[0] * a + e[0] * h + n[0] * c + r[0] * l, i8[1] = t[1] * a + e[1] * h + n[1] * c + r[1] * l, i8[2] = t[2] * a + e[2] * h + n[2] * c + r[2] * l, i8;
}
function Sa(i8, t, e, n, r, s) {
  var o = 1 - s, a = o * o, h = s * s, c = a * o, l = 3 * s * a, d = 3 * h * o, m = h * s;
  return i8[0] = t[0] * c + e[0] * l + n[0] * d + r[0] * m, i8[1] = t[1] * c + e[1] * l + n[1] * d + r[1] * m, i8[2] = t[2] * c + e[2] * l + n[2] * d + r[2] * m, i8;
}
function Pa(i8, t) {
  t = t || 1;
  var e = Lt() * 2 * Math.PI, n = Lt() * 2 - 1, r = Math.sqrt(1 - n * n) * t;
  return i8[0] = Math.cos(e) * r, i8[1] = Math.sin(e) * r, i8[2] = n * t, i8;
}
function Oa(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = e[3] * n + e[7] * r + e[11] * s + e[15];
  return o = o || 1, i8[0] = (e[0] * n + e[4] * r + e[8] * s + e[12]) / o, i8[1] = (e[1] * n + e[5] * r + e[9] * s + e[13]) / o, i8[2] = (e[2] * n + e[6] * r + e[10] * s + e[14]) / o, i8;
}
function Da(i8, t, e) {
  var n = t[0], r = t[1], s = t[2];
  return i8[0] = n * e[0] + r * e[3] + s * e[6], i8[1] = n * e[1] + r * e[4] + s * e[7], i8[2] = n * e[2] + r * e[5] + s * e[8], i8;
}
function za(i8, t, e) {
  var n = e[0], r = e[1], s = e[2], o = e[3], a = t[0], h = t[1], c = t[2], l = r * c - s * h, d = s * a - n * c, m = n * h - r * a, u = r * m - s * d, p = s * l - n * m, f = n * d - r * l, _ = o * 2;
  return l *= _, d *= _, m *= _, u *= 2, p *= 2, f *= 2, i8[0] = a + l + u, i8[1] = h + d + p, i8[2] = c + m + f, i8;
}
function Fa(i8, t, e, n) {
  var r = [], s = [];
  return r[0] = t[0] - e[0], r[1] = t[1] - e[1], r[2] = t[2] - e[2], s[0] = r[0], s[1] = r[1] * Math.cos(n) - r[2] * Math.sin(n), s[2] = r[1] * Math.sin(n) + r[2] * Math.cos(n), i8[0] = s[0] + e[0], i8[1] = s[1] + e[1], i8[2] = s[2] + e[2], i8;
}
function La(i8, t, e, n) {
  var r = [], s = [];
  return r[0] = t[0] - e[0], r[1] = t[1] - e[1], r[2] = t[2] - e[2], s[0] = r[2] * Math.sin(n) + r[0] * Math.cos(n), s[1] = r[1], s[2] = r[2] * Math.cos(n) - r[0] * Math.sin(n), i8[0] = s[0] + e[0], i8[1] = s[1] + e[1], i8[2] = s[2] + e[2], i8;
}
function Va(i8, t, e, n) {
  var r = [], s = [];
  return r[0] = t[0] - e[0], r[1] = t[1] - e[1], r[2] = t[2] - e[2], s[0] = r[0] * Math.cos(n) - r[1] * Math.sin(n), s[1] = r[0] * Math.sin(n) + r[1] * Math.cos(n), s[2] = r[2], i8[0] = s[0] + e[0], i8[1] = s[1] + e[1], i8[2] = s[2] + e[2], i8;
}
function Ua(i8, t) {
  var e = i8[0], n = i8[1], r = i8[2], s = t[0], o = t[1], a = t[2], h = Math.sqrt(e * e + n * n + r * r), c = Math.sqrt(s * s + o * o + a * a), l = h * c, d = l && $e(i8, t) / l;
  return Math.acos(Math.min(Math.max(d, -1), 1));
}
function ka(i8) {
  return i8[0] = 0, i8[1] = 0, i8[2] = 0, i8;
}
function Ia(i8) {
  return "vec3(" + i8[0] + ", " + i8[1] + ", " + i8[2] + ")";
}
function Na(i8, t) {
  return i8[0] === t[0] && i8[1] === t[1] && i8[2] === t[2];
}
function Ba(i8, t) {
  var e = i8[0], n = i8[1], r = i8[2], s = t[0], o = t[1], a = t[2];
  return Math.abs(e - s) <= k * Math.max(1, Math.abs(e), Math.abs(s)) && Math.abs(n - o) <= k * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - a) <= k * Math.max(1, Math.abs(r), Math.abs(a));
}
var Ha = hr;
var Ya = cr;
var Ga = lr;
var qa = dr;
var ja = mr;
var ln = ar;
var Xa = ur;
var Wa = function() {
  var i8 = Ke();
  return function(t, e, n, r, s, o) {
    var a, h;
    for (e || (e = 3), n || (n = 0), r ? h = Math.min(r * e + n, t.length) : h = t.length, a = n; a < h; a += e) i8[0] = t[a], i8[1] = t[a + 1], i8[2] = t[a + 2], s(i8, i8, o), t[a] = i8[0], t[a + 1] = i8[1], t[a + 2] = i8[2];
    return t;
  };
}();
function Za() {
  var i8 = new q(4);
  return q != Float32Array && (i8[0] = 0, i8[1] = 0, i8[2] = 0, i8[3] = 0), i8;
}
function pr(i8) {
  var t = new q(4);
  return t[0] = i8[0], t[1] = i8[1], t[2] = i8[2], t[3] = i8[3], t;
}
function _r2(i8, t, e, n) {
  var r = new q(4);
  return r[0] = i8, r[1] = t, r[2] = e, r[3] = n, r;
}
function fr(i8, t) {
  return i8[0] = t[0], i8[1] = t[1], i8[2] = t[2], i8[3] = t[3], i8;
}
function yr(i8, t, e, n, r) {
  return i8[0] = t, i8[1] = e, i8[2] = n, i8[3] = r, i8;
}
function vr(i8, t, e) {
  return i8[0] = t[0] + e[0], i8[1] = t[1] + e[1], i8[2] = t[2] + e[2], i8[3] = t[3] + e[3], i8;
}
function gr(i8, t, e) {
  return i8[0] = t[0] * e, i8[1] = t[1] * e, i8[2] = t[2] * e, i8[3] = t[3] * e, i8;
}
function xr(i8) {
  var t = i8[0], e = i8[1], n = i8[2], r = i8[3];
  return Math.hypot(t, e, n, r);
}
function Er(i8) {
  var t = i8[0], e = i8[1], n = i8[2], r = i8[3];
  return t * t + e * e + n * n + r * r;
}
function wr(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = e * e + n * n + r * r + s * s;
  return o > 0 && (o = 1 / Math.sqrt(o)), i8[0] = e * o, i8[1] = n * o, i8[2] = r * o, i8[3] = s * o, i8;
}
function Cr(i8, t) {
  return i8[0] * t[0] + i8[1] * t[1] + i8[2] * t[2] + i8[3] * t[3];
}
function Mr(i8, t, e, n) {
  var r = t[0], s = t[1], o = t[2], a = t[3];
  return i8[0] = r + n * (e[0] - r), i8[1] = s + n * (e[1] - s), i8[2] = o + n * (e[2] - o), i8[3] = a + n * (e[3] - a), i8;
}
function Tr(i8, t) {
  return i8[0] === t[0] && i8[1] === t[1] && i8[2] === t[2] && i8[3] === t[3];
}
function br(i8, t) {
  var e = i8[0], n = i8[1], r = i8[2], s = i8[3], o = t[0], a = t[1], h = t[2], c = t[3];
  return Math.abs(e - o) <= k * Math.max(1, Math.abs(e), Math.abs(o)) && Math.abs(n - a) <= k * Math.max(1, Math.abs(n), Math.abs(a)) && Math.abs(r - h) <= k * Math.max(1, Math.abs(r), Math.abs(h)) && Math.abs(s - c) <= k * Math.max(1, Math.abs(s), Math.abs(c));
}
var Ac = function() {
  var i8 = Za();
  return function(t, e, n, r, s, o) {
    var a, h;
    for (e || (e = 4), n || (n = 0), r ? h = Math.min(r * e + n, t.length) : h = t.length, a = n; a < h; a += e) i8[0] = t[a], i8[1] = t[a + 1], i8[2] = t[a + 2], i8[3] = t[a + 3], s(i8, i8, o), t[a] = i8[0], t[a + 1] = i8[1], t[a + 2] = i8[2], t[a + 3] = i8[3];
    return t;
  };
}();
function dn() {
  var i8 = new q(4);
  return q != Float32Array && (i8[0] = 0, i8[1] = 0, i8[2] = 0), i8[3] = 1, i8;
}
function Qa(i8) {
  return i8[0] = 0, i8[1] = 0, i8[2] = 0, i8[3] = 1, i8;
}
function Rr(i8, t, e) {
  e = e * 0.5;
  var n = Math.sin(e);
  return i8[0] = n * t[0], i8[1] = n * t[1], i8[2] = n * t[2], i8[3] = Math.cos(e), i8;
}
function $a(i8, t) {
  var e = Math.acos(t[3]) * 2, n = Math.sin(e / 2);
  return n > k ? (i8[0] = t[0] / n, i8[1] = t[1] / n, i8[2] = t[2] / n) : (i8[0] = 1, i8[1] = 0, i8[2] = 0), e;
}
function Ja(i8, t) {
  var e = zr(i8, t);
  return Math.acos(2 * e * e - 1);
}
function Ar(i8, t, e) {
  var n = t[0], r = t[1], s = t[2], o = t[3], a = e[0], h = e[1], c = e[2], l = e[3];
  return i8[0] = n * l + o * a + r * c - s * h, i8[1] = r * l + o * h + s * a - n * c, i8[2] = s * l + o * c + n * h - r * a, i8[3] = o * l - n * a - r * h - s * c, i8;
}
function th(i8, t, e) {
  e *= 0.5;
  var n = t[0], r = t[1], s = t[2], o = t[3], a = Math.sin(e), h = Math.cos(e);
  return i8[0] = n * h + o * a, i8[1] = r * h + s * a, i8[2] = s * h - r * a, i8[3] = o * h - n * a, i8;
}
function eh(i8, t, e) {
  e *= 0.5;
  var n = t[0], r = t[1], s = t[2], o = t[3], a = Math.sin(e), h = Math.cos(e);
  return i8[0] = n * h - s * a, i8[1] = r * h + o * a, i8[2] = s * h + n * a, i8[3] = o * h - r * a, i8;
}
function ih(i8, t, e) {
  e *= 0.5;
  var n = t[0], r = t[1], s = t[2], o = t[3], a = Math.sin(e), h = Math.cos(e);
  return i8[0] = n * h + r * a, i8[1] = r * h - n * a, i8[2] = s * h + o * a, i8[3] = o * h - s * a, i8;
}
function nh(i8, t) {
  var e = t[0], n = t[1], r = t[2];
  return i8[0] = e, i8[1] = n, i8[2] = r, i8[3] = Math.sqrt(Math.abs(1 - e * e - n * n - r * r)), i8;
}
function Sr(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = Math.sqrt(e * e + n * n + r * r), a = Math.exp(s), h = o > 0 ? a * Math.sin(o) / o : 0;
  return i8[0] = e * h, i8[1] = n * h, i8[2] = r * h, i8[3] = a * Math.cos(o), i8;
}
function Pr(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = Math.sqrt(e * e + n * n + r * r), a = o > 0 ? Math.atan2(o, s) / o : 0;
  return i8[0] = e * a, i8[1] = n * a, i8[2] = r * a, i8[3] = 0.5 * Math.log(e * e + n * n + r * r + s * s), i8;
}
function rh(i8, t, e) {
  return Pr(i8, t), Dr(i8, i8, e), Sr(i8, i8), i8;
}
function Je(i8, t, e, n) {
  var r = t[0], s = t[1], o = t[2], a = t[3], h = e[0], c = e[1], l = e[2], d = e[3], m, u, p, f, _;
  return u = r * h + s * c + o * l + a * d, u < 0 && (u = -u, h = -h, c = -c, l = -l, d = -d), 1 - u > k ? (m = Math.acos(u), p = Math.sin(m), f = Math.sin((1 - n) * m) / p, _ = Math.sin(n * m) / p) : (f = 1 - n, _ = n), i8[0] = f * r + _ * h, i8[1] = f * s + _ * c, i8[2] = f * o + _ * l, i8[3] = f * a + _ * d, i8;
}
function sh(i8) {
  var t = Lt(), e = Lt(), n = Lt(), r = Math.sqrt(1 - t), s = Math.sqrt(t);
  return i8[0] = r * Math.sin(2 * Math.PI * e), i8[1] = r * Math.cos(2 * Math.PI * e), i8[2] = s * Math.sin(2 * Math.PI * n), i8[3] = s * Math.cos(2 * Math.PI * n), i8;
}
function oh(i8, t) {
  var e = t[0], n = t[1], r = t[2], s = t[3], o = e * e + n * n + r * r + s * s, a = o ? 1 / o : 0;
  return i8[0] = -e * a, i8[1] = -n * a, i8[2] = -r * a, i8[3] = s * a, i8;
}
function ah(i8, t) {
  return i8[0] = -t[0], i8[1] = -t[1], i8[2] = -t[2], i8[3] = t[3], i8;
}
function Or(i8, t) {
  var e = t[0] + t[4] + t[8], n;
  if (e > 0) n = Math.sqrt(e + 1), i8[3] = 0.5 * n, n = 0.5 / n, i8[0] = (t[5] - t[7]) * n, i8[1] = (t[6] - t[2]) * n, i8[2] = (t[1] - t[3]) * n;
  else {
    var r = 0;
    t[4] > t[0] && (r = 1), t[8] > t[r * 3 + r] && (r = 2);
    var s = (r + 1) % 3, o = (r + 2) % 3;
    n = Math.sqrt(t[r * 3 + r] - t[s * 3 + s] - t[o * 3 + o] + 1), i8[r] = 0.5 * n, n = 0.5 / n, i8[3] = (t[s * 3 + o] - t[o * 3 + s]) * n, i8[s] = (t[s * 3 + r] + t[r * 3 + s]) * n, i8[o] = (t[o * 3 + r] + t[r * 3 + o]) * n;
  }
  return i8;
}
function hh(i8, t, e, n) {
  var r = 0.5 * Math.PI / 180;
  t *= r, e *= r, n *= r;
  var s = Math.sin(t), o = Math.cos(t), a = Math.sin(e), h = Math.cos(e), c = Math.sin(n), l = Math.cos(n);
  return i8[0] = s * h * l - o * a * c, i8[1] = o * a * l + s * h * c, i8[2] = o * h * c - s * a * l, i8[3] = o * h * l + s * a * c, i8;
}
function ch(i8) {
  return "quat(" + i8[0] + ", " + i8[1] + ", " + i8[2] + ", " + i8[3] + ")";
}
var lh = pr;
var dh = _r2;
var mh = fr;
var uh = yr;
var ph = vr;
var _h2 = Ar;
var Dr = gr;
var zr = Cr;
var fh = Mr;
var Fr = xr;
var yh = Fr;
var Lr = Er;
var vh = Lr;
var mn = wr;
var gh = Tr;
var xh = br;
var Eh = function() {
  var i8 = Ke(), t = Qe(1, 0, 0), e = Qe(0, 1, 0);
  return function(n, r, s) {
    var o = $e(r, s);
    return o < -0.999999 ? (Se(i8, t, r), ln(i8) < 1e-6 && Se(i8, e, r), cn(i8, i8), Rr(n, i8, Math.PI), n) : o > 0.999999 ? (n[0] = 0, n[1] = 0, n[2] = 0, n[3] = 1, n) : (Se(i8, r, s), n[0] = i8[0], n[1] = i8[1], n[2] = i8[2], n[3] = 1 + o, mn(n, n));
  };
}();
var wh = function() {
  var i8 = dn(), t = dn();
  return function(e, n, r, s, o, a) {
    return Je(i8, n, o, a), Je(t, r, s, a), Je(e, i8, t, 2 * a * (1 - a)), e;
  };
}();
var Ch = function() {
  var i8 = hn();
  return function(t, e, n, r) {
    return i8[0] = n[0], i8[3] = n[1], i8[6] = n[2], i8[1] = r[0], i8[4] = r[1], i8[7] = r[2], i8[2] = -e[0], i8[5] = -e[1], i8[8] = -e[2], mn(t, Or(t, i8));
  };
}();
var _t3, _a6;
var mt = (_a6 = class {
  constructor() {
    __privateAdd(this, _t3, new EventTarget());
  }
  addEventListener(t, e, n) {
    __privateGet(this, _t3).addEventListener(t, e, n);
  }
  removeEventListener(t, e, n) {
    __privateGet(this, _t3).removeEventListener(t, e, n);
  }
  _dispatchEvent(t) {
    return __privateGet(this, _t3).dispatchEvent(t);
  }
}, _t3 = new WeakMap(), _a6);
var _a7, _t4;
var ti = (_a7 = class extends mt {
  constructor({ euid: t }) {
    super();
    __privateAdd(this, _t4);
    __privateSet(this, _t4, { euid: t });
  }
  get _core() {
    return __privateGet(this, _t4);
  }
  get euid() {
    return __privateGet(this, _t4).euid;
  }
  get animation_controller() {
    return __privateGet(this, _t4).animation_controller;
  }
  set animation_controller(t) {
    __privateGet(this, _t4).animation_controller = this._setComponentValue({ ref: __privateGet(this, _t4).animation_controller, component_name: "animation_controller", value: t });
  }
  get animation_sequence_controller() {
    return __privateGet(this, _t4).animation_sequence_controller;
  }
  set animation_sequence_controller(t) {
    __privateGet(this, _t4).animation_sequence_controller = this._setComponentValue({ ref: __privateGet(this, _t4).animation_sequence_controller, component_name: "animation_sequence_controller", value: t });
  }
  get bone() {
    return __privateGet(this, _t4).bone;
  }
  set bone(t) {
    __privateGet(this, _t4).bone = this._setComponentValue({ ref: __privateGet(this, _t4).bone, component_name: "bone", value: t });
  }
  get box_geometry() {
    return __privateGet(this, _t4).box_geometry;
  }
  set box_geometry(t) {
    __privateGet(this, _t4).box_geometry = this._setComponentValue({ ref: __privateGet(this, _t4).box_geometry, component_name: "box_geometry", value: t });
  }
  get camera() {
    return __privateGet(this, _t4).camera;
  }
  set camera(t) {
    __privateGet(this, _t4).camera = this._setComponentValue({ ref: __privateGet(this, _t4).camera, component_name: "camera", value: t });
  }
  get capsule_geometry() {
    return __privateGet(this, _t4).capsule_geometry;
  }
  set capsule_geometry(t) {
    __privateGet(this, _t4).capsule_geometry = this._setComponentValue({ ref: __privateGet(this, _t4).capsule_geometry, component_name: "capsule_geometry", value: t });
  }
  get character_controller() {
    return __privateGet(this, _t4).character_controller;
  }
  set character_controller(t) {
    __privateGet(this, _t4).character_controller = this._setComponentValue({ ref: __privateGet(this, _t4).character_controller, component_name: "character_controller", value: t });
  }
  get collision_geometry_ref() {
    return __privateGet(this, _t4).collision_geometry_ref;
  }
  set collision_geometry_ref(t) {
    __privateGet(this, _t4).collision_geometry_ref = this._setComponentValue({ ref: __privateGet(this, _t4).collision_geometry_ref, component_name: "collision_geometry_ref", value: t });
  }
  get constraint() {
    return __privateGet(this, _t4).constraint;
  }
  set constraint(t) {
    __privateGet(this, _t4).constraint = this._setComponentValue({ ref: __privateGet(this, _t4).constraint, component_name: "constraint", value: t });
  }
  get constraint_actuator() {
    return __privateGet(this, _t4).constraint_actuator;
  }
  set constraint_actuator(t) {
    __privateGet(this, _t4).constraint_actuator = this._setComponentValue({ ref: __privateGet(this, _t4).constraint_actuator, component_name: "constraint_actuator", value: t });
  }
  get culling_geometry() {
    return __privateGet(this, _t4).culling_geometry;
  }
  set culling_geometry(t) {
    __privateGet(this, _t4).culling_geometry = this._setComponentValue({ ref: __privateGet(this, _t4).culling_geometry, component_name: "culling_geometry", value: t });
  }
  get cylinder_geometry() {
    return __privateGet(this, _t4).cylinder_geometry;
  }
  set cylinder_geometry(t) {
    __privateGet(this, _t4).cylinder_geometry = this._setComponentValue({ ref: __privateGet(this, _t4).cylinder_geometry, component_name: "cylinder_geometry", value: t });
  }
  get debug_name() {
    return __privateGet(this, _t4).debug_name;
  }
  set debug_name(t) {
    __privateGet(this, _t4).debug_name = this._setComponentValue({ ref: __privateGet(this, _t4).debug_name, component_name: "debug_name", value: t });
  }
  get decal_projector() {
    return __privateGet(this, _t4).decal_projector;
  }
  set decal_projector(t) {
    __privateGet(this, _t4).decal_projector = this._setComponentValue({ ref: __privateGet(this, _t4).decal_projector, component_name: "decal_projector", value: t });
  }
  get environment() {
    return __privateGet(this, _t4).environment;
  }
  set environment(t) {
    __privateGet(this, _t4).environment = this._setComponentValue({ ref: __privateGet(this, _t4).environment, component_name: "environment", value: t });
  }
  get joint() {
    return __privateGet(this, _t4).joint;
  }
  set joint(t) {
    __privateGet(this, _t4).joint = this._setComponentValue({ ref: __privateGet(this, _t4).joint, component_name: "joint", value: t });
  }
  get label() {
    return __privateGet(this, _t4).label;
  }
  set label(t) {
    __privateGet(this, _t4).label = this._setComponentValue({ ref: __privateGet(this, _t4).label, component_name: "label", value: t });
  }
  get lineage() {
    return __privateGet(this, _t4).lineage;
  }
  set lineage(t) {
    __privateGet(this, _t4).lineage = this._setComponentValue({ ref: __privateGet(this, _t4).lineage, component_name: "lineage", value: t });
  }
  get local_aabb() {
    return __privateGet(this, _t4).local_aabb;
  }
  set local_aabb(t) {
    __privateGet(this, _t4).local_aabb = this._setComponentValue({ ref: __privateGet(this, _t4).local_aabb, component_name: "local_aabb", value: t });
  }
  get material() {
    return __privateGet(this, _t4).material;
  }
  set material(t) {
    __privateGet(this, _t4).material = this._setComponentValue({ ref: __privateGet(this, _t4).material, component_name: "material", value: t });
  }
  get material_ref() {
    return __privateGet(this, _t4).material_ref;
  }
  set material_ref(t) {
    __privateGet(this, _t4).material_ref = this._setComponentValue({ ref: __privateGet(this, _t4).material_ref, component_name: "material_ref", value: t });
  }
  get measure() {
    return __privateGet(this, _t4).measure;
  }
  set measure(t) {
    __privateGet(this, _t4).measure = this._setComponentValue({ ref: __privateGet(this, _t4).measure, component_name: "measure", value: t });
  }
  get mesh_ref() {
    return __privateGet(this, _t4).mesh_ref;
  }
  set mesh_ref(t) {
    __privateGet(this, _t4).mesh_ref = this._setComponentValue({ ref: __privateGet(this, _t4).mesh_ref, component_name: "mesh_ref", value: t });
  }
  get orthographic_lens() {
    return __privateGet(this, _t4).orthographic_lens;
  }
  set orthographic_lens(t) {
    __privateGet(this, _t4).orthographic_lens = this._setComponentValue({ ref: __privateGet(this, _t4).orthographic_lens, component_name: "orthographic_lens", value: t });
  }
  get overrider() {
    return __privateGet(this, _t4).overrider;
  }
  set overrider(t) {
    __privateGet(this, _t4).overrider = this._setComponentValue({ ref: __privateGet(this, _t4).overrider, component_name: "overrider", value: t });
  }
  get perspective_lens() {
    return __privateGet(this, _t4).perspective_lens;
  }
  set perspective_lens(t) {
    __privateGet(this, _t4).perspective_lens = this._setComponentValue({ ref: __privateGet(this, _t4).perspective_lens, component_name: "perspective_lens", value: t });
  }
  get physics_material() {
    return __privateGet(this, _t4).physics_material;
  }
  set physics_material(t) {
    __privateGet(this, _t4).physics_material = this._setComponentValue({ ref: __privateGet(this, _t4).physics_material, component_name: "physics_material", value: t });
  }
  get plane_geometry() {
    return __privateGet(this, _t4).plane_geometry;
  }
  set plane_geometry(t) {
    __privateGet(this, _t4).plane_geometry = this._setComponentValue({ ref: __privateGet(this, _t4).plane_geometry, component_name: "plane_geometry", value: t });
  }
  get point_cloud_ref() {
    return __privateGet(this, _t4).point_cloud_ref;
  }
  set point_cloud_ref(t) {
    __privateGet(this, _t4).point_cloud_ref = this._setComponentValue({ ref: __privateGet(this, _t4).point_cloud_ref, component_name: "point_cloud_ref", value: t });
  }
  get point_light() {
    return __privateGet(this, _t4).point_light;
  }
  set point_light(t) {
    __privateGet(this, _t4).point_light = this._setComponentValue({ ref: __privateGet(this, _t4).point_light, component_name: "point_light", value: t });
  }
  get reflection_probe() {
    return __privateGet(this, _t4).reflection_probe;
  }
  set reflection_probe(t) {
    __privateGet(this, _t4).reflection_probe = this._setComponentValue({ ref: __privateGet(this, _t4).reflection_probe, component_name: "reflection_probe", value: t });
  }
  get rigid_body() {
    return __privateGet(this, _t4).rigid_body;
  }
  set rigid_body(t) {
    __privateGet(this, _t4).rigid_body = this._setComponentValue({ ref: __privateGet(this, _t4).rigid_body, component_name: "rigid_body", value: t });
  }
  get rigid_body_actuator() {
    return __privateGet(this, _t4).rigid_body_actuator;
  }
  set rigid_body_actuator(t) {
    __privateGet(this, _t4).rigid_body_actuator = this._setComponentValue({ ref: __privateGet(this, _t4).rigid_body_actuator, component_name: "rigid_body_actuator", value: t });
  }
  get scene_ref() {
    return __privateGet(this, _t4).scene_ref;
  }
  set scene_ref(t) {
    __privateGet(this, _t4).scene_ref = this._setComponentValue({ ref: __privateGet(this, _t4).scene_ref, component_name: "scene_ref", value: t });
  }
  get script_map() {
    return __privateGet(this, _t4).script_map;
  }
  set script_map(t) {
    __privateGet(this, _t4).script_map = this._setComponentValue({ ref: __privateGet(this, _t4).script_map, component_name: "script_map", value: t });
  }
  get shadow_caster() {
    return __privateGet(this, _t4).shadow_caster;
  }
  set shadow_caster(t) {
    __privateGet(this, _t4).shadow_caster = this._setComponentValue({ ref: __privateGet(this, _t4).shadow_caster, component_name: "shadow_caster", value: t });
  }
  get skeleton_ref() {
    return __privateGet(this, _t4).skeleton_ref;
  }
  set skeleton_ref(t) {
    __privateGet(this, _t4).skeleton_ref = this._setComponentValue({ ref: __privateGet(this, _t4).skeleton_ref, component_name: "skeleton_ref", value: t });
  }
  get sound_ref() {
    return __privateGet(this, _t4).sound_ref;
  }
  set sound_ref(t) {
    __privateGet(this, _t4).sound_ref = this._setComponentValue({ ref: __privateGet(this, _t4).sound_ref, component_name: "sound_ref", value: t });
  }
  get sphere_geometry() {
    return __privateGet(this, _t4).sphere_geometry;
  }
  set sphere_geometry(t) {
    __privateGet(this, _t4).sphere_geometry = this._setComponentValue({ ref: __privateGet(this, _t4).sphere_geometry, component_name: "sphere_geometry", value: t });
  }
  get spline() {
    return __privateGet(this, _t4).spline;
  }
  set spline(t) {
    __privateGet(this, _t4).spline = this._setComponentValue({ ref: __privateGet(this, _t4).spline, component_name: "spline", value: t });
  }
  get spot_light() {
    return __privateGet(this, _t4).spot_light;
  }
  set spot_light(t) {
    __privateGet(this, _t4).spot_light = this._setComponentValue({ ref: __privateGet(this, _t4).spot_light, component_name: "spot_light", value: t });
  }
  get stereoscopic_lens() {
    return __privateGet(this, _t4).stereoscopic_lens;
  }
  set stereoscopic_lens(t) {
    __privateGet(this, _t4).stereoscopic_lens = this._setComponentValue({ ref: __privateGet(this, _t4).stereoscopic_lens, component_name: "stereoscopic_lens", value: t });
  }
  get tags() {
    return __privateGet(this, _t4).tags;
  }
  set tags(t) {
    __privateGet(this, _t4).tags = this._setComponentValue({ ref: __privateGet(this, _t4).tags, component_name: "tags", value: t });
  }
  get vehicle_controller() {
    return __privateGet(this, _t4).vehicle_controller;
  }
  set vehicle_controller(t) {
    __privateGet(this, _t4).vehicle_controller = this._setComponentValue({ ref: __privateGet(this, _t4).vehicle_controller, component_name: "vehicle_controller", value: t });
  }
  get volume_filter() {
    return __privateGet(this, _t4).volume_filter;
  }
  set volume_filter(t) {
    __privateGet(this, _t4).volume_filter = this._setComponentValue({ ref: __privateGet(this, _t4).volume_filter, component_name: "volume_filter", value: t });
  }
  get volume_material_ref() {
    return __privateGet(this, _t4).volume_material_ref;
  }
  set volume_material_ref(t) {
    __privateGet(this, _t4).volume_material_ref = this._setComponentValue({ ref: __privateGet(this, _t4).volume_material_ref, component_name: "volume_material_ref", value: t });
  }
  get volume_ref() {
    return __privateGet(this, _t4).volume_ref;
  }
  set volume_ref(t) {
    __privateGet(this, _t4).volume_ref = this._setComponentValue({ ref: __privateGet(this, _t4).volume_ref, component_name: "volume_ref", value: t });
  }
  toJSON() {
    let { euid: t, ...e } = __privateGet(this, _t4);
    return { euid: { value: t.value }, ...e };
  }
  _unsafeSetComponentValue({ component_name: t, value: e }) {
    __privateGet(this, _t4)[t] = e;
  }
}, _t4 = new WeakMap(), __publicField(_a7, "component_names", ["animation_controller", "animation_sequence_controller", "bone", "box_geometry", "camera", "capsule_geometry", "character_controller", "collision_geometry_ref", "constraint", "constraint_actuator", "culling_geometry", "cylinder_geometry", "debug_name", "decal_projector", "environment", "joint", "label", "lineage", "local_aabb", "material", "material_ref", "measure", "mesh_ref", "orthographic_lens", "overrider", "perspective_lens", "physics_material", "plane_geometry", "point_cloud_ref", "point_light", "reflection_probe", "rigid_body", "rigid_body_actuator", "scene_ref", "script_map", "shadow_caster", "skeleton_ref", "sound_ref", "sphere_geometry", "spline", "spot_light", "stereoscopic_lens", "tags", "vehicle_controller", "volume_filter", "volume_material_ref", "volume_ref"]), _a7);
var Gt = class extends Event {
  constructor({ change_source: t, new_components: e, updated_components: n, deleted_components: r }) {
    super("on-entity-updated");
    __publicField(this, "change_source");
    __publicField(this, "new_components");
    __publicField(this, "updated_components");
    __publicField(this, "deleted_components");
    this.change_source = t, this.new_components = e, this.updated_components = n, this.deleted_components = r;
  }
  isAnyComponentDirty({ components: t }) {
    return this.new_components.some((e) => t.includes(e)) || this.updated_components.some((e) => t.includes(e)) || this.deleted_components.some((e) => t.includes(e));
  }
};
var Pe = class extends Event {
  constructor({ is_visible: t }) {
    super("on-entity-visibility-changed");
    __publicField(this, "is_visible");
    this.is_visible = t;
  }
};
function ie([i8, t, e, n]) {
  let r = { roll: 0, pitch: 0, yaw: 0 }, s = { x: i8, y: t, z: e, w: n }, o = 2 * (s.w * s.x + s.y * s.z), a = 1 - 2 * (s.x * s.x + s.y * s.y);
  r.roll = Math.atan2(o, a);
  let h = 2 * (s.w * s.y - s.z * s.x);
  Math.abs(h) >= 1 ? r.pitch = Vr(Math.PI / 2, h) : r.pitch = Math.asin(h);
  let c = 2 * (s.w * s.z + s.x * s.y), l = 1 - 2 * (s.y * s.y + s.z * s.z);
  return r.yaw = Math.atan2(c, l), [r.roll, r.pitch, r.yaw].map((d) => d * 180 / Math.PI);
}
function ei(i8) {
  let [t, e, n] = i8.map((l) => l * Math.PI / 180), r = Math.cos(n / 2), s = Math.sin(n / 2), o = Math.cos(e / 2), a = Math.sin(e / 2), h = Math.cos(t / 2), c = Math.sin(t / 2);
  return [r * o * c - s * a * h, s * o * c + r * a * h, s * o * h - r * a * c, r * o * h + s * a * c];
}
function Vr(i8, t) {
  return t < 0 ? -Math.abs(i8) : Math.abs(i8);
}
var _t5, _i3, _e2, _n2, _r3, _o2, _s, _a8, _c, _h3, _ii_instances, l_get, l_set, d_fn2, m_fn2, u_fn2, p_fn, _a9;
var ii = (_a9 = class extends ti {
  constructor({ euid: t, local_transform: e, parent: n }) {
    super({ euid: t });
    __privateAdd(this, _ii_instances);
    __privateAdd(this, _t5);
    __privateAdd(this, _i3);
    __privateAdd(this, _e2);
    __privateAdd(this, _n2);
    __privateAdd(this, _r3, J.create());
    __privateAdd(this, _o2, J.create());
    __privateAdd(this, _s, null);
    __privateAdd(this, _a8, true);
    __privateAdd(this, _c, 0);
    __privateAdd(this, _h3, 0);
    __publicField(this, "_recalculateGlobalTransformIfNeeded", () => {
      __privateGet(this, _ii_instances, l_get) && (__privateMethod(this, _ii_instances, d_fn2).call(this), __privateMethod(this, _ii_instances, m_fn2).call(this), __privateMethod(this, _ii_instances, p_fn).call(this), __privateMethod(this, _ii_instances, u_fn2).call(this), this._computeTransformMatrices(), __privateSet(this, _ii_instances, false, l_set));
    });
    __privateSet(this, _s, n), __privateSet(this, _e2, e), __privateSet(this, _t5, { position: [0, 0, 0], orientation: [0, 0, 0, 1], scale: [1, 1, 1], eulerOrientation: [0, 0, 0] }), __privateSet(this, _n2, new un(this, __privateGet(this, _e2))), __privateSet(this, _i3, new pn(this, __privateGet(this, _t5))), this._unsafeSetComponentValue({ component_name: "local_transform", value: __privateGet(this, _e2) });
  }
  get _last_update_id() {
    return __privateGet(this, _c);
  }
  get global_transform() {
    return __privateGet(this, _i3);
  }
  set global_transform(t) {
    this._setGlobalTransform({ global_transform: t, change_source: "local" }), this._markComponentAsDirty({ component_name: "local_transform" });
  }
  get local_transform() {
    return __privateGet(this, _n2);
  }
  set local_transform(t) {
    Object.assign(__privateGet(this, _n2), t);
  }
  get global_aabb() {
    let t = -Number.MAX_VALUE, e = this.local_aabb || { min: [-1, -1, -1], max: [1, 1, 1] }, { min: n, max: r } = e, s = [L.fromValues(n[0], n[1], n[2]), L.fromValues(r[0], n[1], n[2]), L.fromValues(n[0], r[1], n[2]), L.fromValues(n[0], n[1], r[2]), L.fromValues(r[0], r[1], r[2]), L.fromValues(n[0], r[1], r[2]), L.fromValues(r[0], n[1], r[2]), L.fromValues(r[0], r[1], n[2])];
    s.forEach((l) => L.transformMat4(l, l, this.ls_to_ws));
    let o = L.fromValues(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), a = L.fromValues(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE), h = L.create();
    return s.forEach((l) => {
      L.min(o, o, l), L.max(a, a, l), L.add(h, h, l);
    }), L.scale(h, h, 1 / 8), [{ vertex: s[0], test_vertices: [s[1], s[2], s[3]] }, { vertex: s[6], test_vertices: [s[1], s[3], s[4]] }, { vertex: s[5], test_vertices: [s[2], s[3], s[4]] }, { vertex: s[7], test_vertices: [s[1], s[2], s[4]] }].forEach(({ vertex: l, test_vertices: d }) => {
      d.forEach((m) => {
        let u = L.distance(l, m);
        u > t && (t = u);
      });
    }), { min: Array.from(o), max: Array.from(a), center: Array.from(h), longest_edge_length: t };
  }
  get parent() {
    return __privateGet(this, _s);
  }
  set parent(t) {
    throw new Error("Not implemented");
  }
  _setGlobalTransform({ global_transform: t, change_source: e }) {
    t.position && (this._setGlobalPosition(t.position), L.copy(__privateGet(this, _t5).position, t.position)), t.orientation && (this._setGlobalOrientation(t.orientation), wt.copy(__privateGet(this, _t5).orientation, t.orientation)), t.eulerOrientation && (this._setGlobalEulerOrientation(t.eulerOrientation), L.copy(__privateGet(this, _t5).eulerOrientation, t.eulerOrientation)), t.scale && (this._setGlobalScale(t.scale), L.copy(__privateGet(this, _t5).scale, t.scale)), this._computeTransformMatrices(), this._dispatchEvent(new Gt({ change_source: e, updated_components: ["local_transform"], deleted_components: [], new_components: [] }));
  }
  _markGlobalTransformAsDirty() {
    __privateSet(this, _a8, true), this._markLocalTransformAsDirty();
  }
  _markLocalTransformAsDirty() {
    __privateWrapper(this, _c)._++, this._markComponentAsDirty({ component_name: "local_transform" });
  }
  _computeTransformMatrices() {
    J.fromRotationTranslationScale(__privateGet(this, _r3), __privateGet(this, _t5).orientation, __privateGet(this, _t5).position, __privateGet(this, _t5).scale), J.invert(__privateGet(this, _o2), __privateGet(this, _r3));
  }
  _setLocalTransform({ local_transform: t }) {
    t.position && L.copy(__privateGet(this, _e2).position, t.position), t.orientation && wt.copy(__privateGet(this, _e2).orientation, t.orientation), t.eulerOrientation && L.copy(__privateGet(this, _e2).eulerOrientation, t.eulerOrientation), t.scale && L.copy(__privateGet(this, _e2).scale, t.scale), t.globalEulerOrientation && L.copy(__privateGet(this, _e2).globalEulerOrientation, t.globalEulerOrientation), __privateSet(this, _a8, true);
  }
  _setGlobalPosition(t) {
    if (!__privateGet(this, _s)) {
      L.copy(__privateGet(this, _e2).position, t);
      return;
    }
    L.transformMat4(__privateGet(this, _e2).position, t, __privateGet(this, _s).ws_to_ls);
  }
  _setGlobalOrientation(t) {
    if (!__privateGet(this, _s)) {
      wt.copy(__privateGet(this, _e2).orientation, t), L.copy(__privateGet(this, _e2).eulerOrientation, ie(t));
      return;
    }
    let e = wt.conjugate(wt.create(), __privateGet(this, _s).global_transform.orientation), n = __privateGet(this, _e2).orientation;
    wt.multiply(n, e, t), __privateGet(this, _e2).eulerOrientation = ie(n);
  }
  _setGlobalEulerOrientation(t) {
    let e = ei(t);
    this._setGlobalOrientation(e), L.copy(__privateGet(this, _e2).globalEulerOrientation, t);
  }
  _setGlobalScale(t) {
    if (!__privateGet(this, _s)) {
      L.copy(__privateGet(this, _e2).scale, t);
      return;
    }
    L.divide(__privateGet(this, _e2).scale, t, __privateGet(this, _s).global_transform.scale);
  }
  get ls_to_ws() {
    return this._recalculateGlobalTransformIfNeeded(), __privateGet(this, _r3);
  }
  get ws_to_ls() {
    return this._recalculateGlobalTransformIfNeeded(), __privateGet(this, _o2);
  }
}, _t5 = new WeakMap(), _i3 = new WeakMap(), _e2 = new WeakMap(), _n2 = new WeakMap(), _r3 = new WeakMap(), _o2 = new WeakMap(), _s = new WeakMap(), _a8 = new WeakMap(), _c = new WeakMap(), _h3 = new WeakMap(), _ii_instances = new WeakSet(), l_get = function() {
  return __privateGet(this, _s) && (__privateGet(this, _s)._last_update_id !== __privateGet(this, _h3) || __privateGet(__privateGet(this, _s), _ii_instances, l_get)) ? true : __privateGet(this, _a8);
}, l_set = function(t) {
  var _a42;
  __privateSet(this, _a8, t), __privateWrapper(this, _c)._++, __privateSet(this, _h3, ((_a42 = __privateGet(this, _s)) == null ? void 0 : _a42._last_update_id) ?? 0);
}, d_fn2 = function() {
  let t = __privateGet(this, _e2).position;
  return __privateGet(this, _s) ? L.transformMat4(__privateGet(this, _t5).position, t, __privateGet(this, _s).ls_to_ws) : L.copy(__privateGet(this, _t5).position, t);
}, m_fn2 = function() {
  return __privateGet(this, _s) ? wt.multiply(__privateGet(this, _t5).orientation, __privateGet(this, _s).global_transform.orientation, __privateGet(this, _e2).orientation) : wt.copy(__privateGet(this, _t5).orientation, __privateGet(this, _e2).orientation);
}, u_fn2 = function() {
  let n = ei(__privateGet(this, _e2).globalEulerOrientation).every((r, s) => Math.max(r - __privateGet(this, _t5).orientation[s]) < 1e-6) ? __privateGet(this, _e2).globalEulerOrientation : ie(__privateGet(this, _t5).orientation);
  return L.copy(__privateGet(this, _t5).eulerOrientation, n);
}, p_fn = function() {
  let t = __privateGet(this, _e2).scale;
  return __privateGet(this, _s) ? L.multiply(__privateGet(this, _t5).scale, __privateGet(this, _s).global_transform.scale, t) : L.copy(__privateGet(this, _t5).scale, t);
}, _a9);
var _t6, _i4, _e3, _n3, _a10;
var un = (_a10 = class {
  constructor(t, e) {
    __privateAdd(this, _t6);
    __privateAdd(this, _i4);
    __privateAdd(this, _e3);
    __privateAdd(this, _n3);
    let n = () => ({ get: (r, s) => Reflect.get(r, s), set: (r, s, o) => {
      let a = Reflect.set(r, s, o);
      return t._markGlobalTransformAsDirty(), a;
    } });
    __privateSet(this, _t6, new Proxy(e.position, n())), __privateSet(this, _n3, new Proxy(e.scale, n())), __privateSet(this, _i4, new Proxy(e.orientation, { get: (r, s) => e.orientation[s], set: (r, s, o) => {
      let a = Reflect.set(r, s, o);
      return e.eulerOrientation = ie(e.orientation), t._markGlobalTransformAsDirty(), a;
    } })), __privateSet(this, _e3, new Proxy(e.eulerOrientation, { get: (r, s) => e.eulerOrientation[s], set: (r, s, o) => {
      let a = Reflect.set(r, s, o);
      return e.orientation = ei(e.eulerOrientation), t._markGlobalTransformAsDirty(), a;
    } }));
  }
  get position() {
    return __privateGet(this, _t6);
  }
  get orientation() {
    return __privateGet(this, _i4);
  }
  get eulerOrientation() {
    return __privateGet(this, _e3);
  }
  get scale() {
    return __privateGet(this, _n3);
  }
  set position(t) {
    Object.assign(__privateGet(this, _t6), t);
  }
  set orientation(t) {
    Object.assign(__privateGet(this, _i4), t);
  }
  set eulerOrientation(t) {
    Object.assign(__privateGet(this, _e3), t);
  }
  set scale(t) {
    Object.assign(__privateGet(this, _n3), t);
  }
}, _t6 = new WeakMap(), _i4 = new WeakMap(), _e3 = new WeakMap(), _n3 = new WeakMap(), _a10);
var _t7, _i5, _e4, _n4, _a11;
var pn = (_a11 = class {
  constructor(t, e) {
    __privateAdd(this, _t7);
    __privateAdd(this, _i5);
    __privateAdd(this, _e4);
    __privateAdd(this, _n4);
    __privateSet(this, _t7, new Proxy(e.position, { get: (n, r) => (t._recalculateGlobalTransformIfNeeded(), Reflect.get(n, r)), set: (n, r, s) => (Reflect.set(n, r, s), t._setGlobalPosition(n), t._computeTransformMatrices(), t._markLocalTransformAsDirty(), true) })), __privateSet(this, _i5, new Proxy(e.orientation, { get: (n, r) => (t._recalculateGlobalTransformIfNeeded(), Reflect.get(n, r)), set: (n, r, s) => (Reflect.set(n, r, s), t._setGlobalOrientation(n), t._computeTransformMatrices(), t._markLocalTransformAsDirty(), true) })), __privateSet(this, _e4, new Proxy(e.eulerOrientation, { get: (n, r) => (t._recalculateGlobalTransformIfNeeded(), Reflect.get(n, r)), set: (n, r, s) => (Reflect.set(n, r, s), t._setGlobalEulerOrientation(n), t._computeTransformMatrices(), t._markLocalTransformAsDirty(), true) })), __privateSet(this, _n4, new Proxy(e.scale, { get: (n, r) => (t._recalculateGlobalTransformIfNeeded(), Reflect.get(n, r)), set: (n, r, s) => (Reflect.set(n, r, s), t._setGlobalScale(n), t._computeTransformMatrices(), t._markLocalTransformAsDirty(), true) }));
  }
  get position() {
    return __privateGet(this, _t7);
  }
  get orientation() {
    return __privateGet(this, _i5);
  }
  get eulerOrientation() {
    return __privateGet(this, _e4);
  }
  get scale() {
    return __privateGet(this, _n4);
  }
  set position(t) {
    Object.assign(__privateGet(this, _t7), t);
  }
  set orientation(t) {
    Object.assign(__privateGet(this, _i5), t);
  }
  set eulerOrientation(t) {
    Object.assign(__privateGet(this, _e4), t);
  }
  set scale(t) {
    Object.assign(__privateGet(this, _n4), t);
  }
}, _t7 = new WeakMap(), _i5 = new WeakMap(), _e4 = new WeakMap(), _n4 = new WeakMap(), _a11);
var ni = class i {
  constructor(t, e) {
    this._entity = t;
    this._component_name = e;
  }
  get(t, e) {
    return typeof t[e] == "object" || Array.isArray(t[e]) ? new Proxy(t[e], new i(this._entity, this._component_name)) : Reflect.get(t, e);
  }
  set(t, e, n) {
    return this._entity._markComponentAsDirty({ component_name: this._component_name }), Reflect.set(t, e, n);
  }
  deleteProperty(t, e) {
    return this._entity._markComponentAsDirty({ component_name: this._component_name }), Reflect.deleteProperty(t, e);
  }
};
var ri = class extends Event {
  constructor({ event_name: t, emitter_entity: e, data_object: n }) {
    super(t);
    __publicField(this, "emitter_entity");
    __publicField(this, "data_object");
    this.emitter_entity = e, this.data_object = n;
  }
};
var _t8, _i6, _e5, _a12;
var si = (_a12 = class extends Event {
  constructor({ scene: t, event_name: e, emitter_entity: n, target_rtids: r, data_object: s }) {
    super(e);
    __publicField(this, "emitter_entity");
    __publicField(this, "data_object");
    __privateAdd(this, _t8);
    __privateAdd(this, _i6);
    __privateAdd(this, _e5, null);
    __privateSet(this, _t8, t), this.emitter_entity = n, __privateSet(this, _i6, r), this.data_object = s;
  }
  get target_entities() {
    return __privateGet(this, _e5) || __privateSet(this, _e5, Promise.all(__privateGet(this, _i6).map((t) => __privateGet(this, _t8)._findEntity({ entity_rtid: t })))), __privateGet(this, _e5);
  }
}, _t8 = new WeakMap(), _i6 = new WeakMap(), _e5 = new WeakMap(), _a12);
var _t9, _i7, _e6, _n5, _r4, _o3, _s2, _qt_instances, a_fn2, c_fn2, h_fn, _a13;
var qt = (_a13 = class extends ii {
  constructor({ scene: t, parent: e = null, components: n, options: r }) {
    super({ euid: n.euid, parent: e, local_transform: t._sanitizeComponentValue({ component_name: "local_transform", value: n.local_transform }) });
    __privateAdd(this, _qt_instances);
    __privateAdd(this, _t9);
    __privateAdd(this, _i7, /* @__PURE__ */ new Set());
    __privateAdd(this, _e6, /* @__PURE__ */ new Set());
    __privateAdd(this, _n5, new mt());
    __privateAdd(this, _r4, new mt());
    __privateAdd(this, _o3, true);
    __privateAdd(this, _s2, true);
    __privateSet(this, _t9, t), this._mergeComponents({ components: n, dispatch_event: false }), __privateGet(this, _t9)._entity_registry.add({ entity: this }), r && r.auto_broadcast !== void 0 && (this.auto_broadcast = r.auto_broadcast);
  }
  get rtid() {
    return this.euid.rtid;
  }
  get id() {
    return this.euid.value;
  }
  get name() {
    var _a42;
    return ((_a42 = this.debug_name) == null ? void 0 : _a42.value) ?? "<unnamed>";
  }
  get auto_broadcast() {
    return __privateGet(this, _o3);
  }
  set auto_broadcast(t) {
    __privateSet(this, _o3, t), t === false && __privateGet(this, _t9)._entity_registry._removeEntityFromBroadcastList({ entity: this });
  }
  get is_visible() {
    return __privateGet(this, _s2);
  }
  set is_visible(t) {
    __privateGet(this, _t9)._setEntityVisibility({ entity_rtid: this.rtid, is_visible: t }), __privateSet(this, _s2, t), this._dispatchEvent(new Pe({ is_visible: t }));
  }
  get parent() {
    return super.parent;
  }
  set parent(t) {
    super.parent = t;
  }
  get local_transform() {
    return super.local_transform;
  }
  set local_transform(t) {
    super.local_transform = t;
  }
  get global_transform() {
    return super.global_transform;
  }
  set global_transform(t) {
    super.global_transform = t;
  }
  get ls_to_ws() {
    return super.ls_to_ws;
  }
  get ws_to_ls() {
    return super.ws_to_ls;
  }
  get _dirty_components() {
    return Array.from(__privateGet(this, _i7));
  }
  get _deleted_components() {
    return Array.from(__privateGet(this, _e6));
  }
  async getChildren() {
    return await __privateGet(this, _t9)._getChildren({ entity: this });
  }
  addScriptEventListener({ event_map_id: t, event_name: e, onReceived: n, onEmitted: r }) {
    n && __privateGet(this, _n5).addEventListener(t + "/" + e, n), r && __privateGet(this, _r4).addEventListener(t + "/" + e, r);
  }
  removeScriptEventListener({ event_map_id: t, event_name: e, onReceived: n, onEmitted: r }) {
    n && __privateGet(this, _n5).removeEventListener(t + "/" + e, n), r && __privateGet(this, _r4).removeEventListener(t + "/" + e, r);
  }
  async assignClientToScripts({ client_uuid: t }) {
    if (!this.script_map || !this.script_map.elements) throw new Error("Entity has no scripts");
    let e = Object.keys(this.script_map.elements);
    await Promise.all(e.map((n) => __privateGet(this, _t9)._assignClientToScripts({ client_uuid: t, entity_rtid: this.rtid, script_uuid: n })));
  }
  _mergeComponents({ components: t, dispatch_event: e, change_source: n }) {
    for (let r in t) {
      let s = r;
      switch (s) {
        case "euid":
          break;
        case "local_transform":
          this._setLocalTransform({ local_transform: t[s] });
          break;
        default:
          __privateMethod(this, _qt_instances, c_fn2).call(this, { component_name: s, value: t[s] });
          break;
      }
    }
    e && this._dispatchEvent(new Gt({ change_source: n, updated_components: Object.keys(t), deleted_components: [], new_components: [] }));
  }
  _markComponentAsDirty({ component_name: t }) {
    __privateGet(this, _i7).add(t), __privateGet(this, _t9)._entity_registry._addDirtyEntity({ entity: this });
    let e = this[t] === void 0;
    this._dispatchEvent(new Gt({ change_source: "local", updated_components: e ? [] : [t], deleted_components: [], new_components: e ? [t] : [] }));
  }
  _markComponentAsDeleted({ component_name: t }) {
    __privateGet(this, _e6).add(t), __privateGet(this, _t9)._entity_registry._addDirtyEntity({ entity: this }), this._dispatchEvent(new Gt({ change_source: "local", updated_components: [], deleted_components: [t], new_components: [] }));
  }
  _clearDirtyState() {
    __privateGet(this, _i7).clear(), __privateGet(this, _e6).clear();
  }
  _onVisibilityChanged({ is_visible: t }) {
    __privateSet(this, _s2, t), this._dispatchEvent(new Pe({ is_visible: t }));
  }
  _onScriptEventEmitted({ scene: t, event_name: e, target_rtids: n, data_object: r }) {
    __privateGet(this, _r4)._dispatchEvent(new si({ scene: t, event_name: e, emitter_entity: this, target_rtids: n, data_object: r }));
  }
  _onScriptEventReceived({ script_event_received_event: t }) {
    __privateGet(this, _n5)._dispatchEvent(t);
  }
  _setComponentValue({ ref: t, component_name: e, value: n }) {
    if (!(n === void 0 && t === void 0)) {
      if (n === void 0) {
        this._markComponentAsDeleted({ component_name: e }), Reflect.deleteProperty(this, `#${e}`);
        return;
      }
      if (n === "default" && (n = __privateGet(this, _t9)._sanitizeComponentValue({ component_name: e, value: void 0 })), t === void 0) return this._markComponentAsDirty({ component_name: e }), __privateMethod(this, _qt_instances, h_fn).call(this, { component_name: e, value: n });
      if (t !== void 0) return Object.assign(t, n), t;
    }
  }
}, _t9 = new WeakMap(), _i7 = new WeakMap(), _e6 = new WeakMap(), _n5 = new WeakMap(), _r4 = new WeakMap(), _o3 = new WeakMap(), _s2 = new WeakMap(), _qt_instances = new WeakSet(), a_fn2 = function({ component_name: t }) {
  return Reflect.get(this, `#${t}`);
}, c_fn2 = function({ component_name: t, value: e }) {
  let n = __privateMethod(this, _qt_instances, a_fn2).call(this, { component_name: t });
  if (n) {
    Object.assign(n, e);
    return;
  }
  let r = __privateMethod(this, _qt_instances, h_fn).call(this, { component_name: t, value: e });
  this._unsafeSetComponentValue({ component_name: t, value: r });
}, h_fn = function({ component_name: t, value: e }) {
  let n = __privateGet(this, _t9)._sanitizeComponentValue({ component_name: t, value: e });
  return Reflect.set(this, `#${t}`, n), new Proxy(n, new ni(this, t));
}, _a13);
var _n6 = { "!": 3, "&": 2, "|": 1, "^": 1 };
function Mh(i8) {
  return Object.prototype.hasOwnProperty.call(_n6, i8);
}
function Th(i8, t) {
  return _n6[i8] > _n6[t];
}
function Ur(i8) {
  let t = i8.split(" "), e = [], n = [];
  for (let r of t) switch (r) {
    case "!":
    case "&":
    case "|":
    case "^":
      {
        for (; n.length > 0; ) {
          let s = n[n.length - 1];
          if (!Mh(s) || Th(r, s)) break;
          n.pop(), e.push(s);
        }
        n.push(r);
      }
      break;
    case "(":
      n.push(r);
      break;
    case ")":
      {
        for (; n[n.length - 1] !== "("; ) e.push(n.pop());
        console.assert(n[n.length - 1] === "("), n.pop();
      }
      break;
    default:
      e.push(r);
      break;
  }
  for (; n.length !== 0; ) {
    let r = n.pop();
    console.assert(r !== "("), e.push(r);
  }
  return JSON.stringify(e);
}
var _t10, _i8, _e7, _n7, _r5, _oi_instances, o_fn, _a14;
var oi = (_a14 = class {
  constructor() {
    __privateAdd(this, _oi_instances);
    __privateAdd(this, _t10, /* @__PURE__ */ new Set());
    __privateAdd(this, _i8, /* @__PURE__ */ new Map());
    __privateAdd(this, _e7, /* @__PURE__ */ new Map());
    __privateAdd(this, _n7, /* @__PURE__ */ new Set());
    __privateAdd(this, _r5, /* @__PURE__ */ new Map());
  }
  add({ entity: t }) {
    let e = __privateGet(this, _i8).get(t.rtid);
    if (e) throw new Error(`Cannot add entity ${t.name} to the registry, because entity ${e.name} has the same RTID.`);
    __privateGet(this, _t10).add(t), __privateGet(this, _i8).set(t.rtid, t);
    let n = __privateGet(this, _e7).get(t.id);
    n ? n.push(t) : __privateGet(this, _e7).set(t.id, [t]);
  }
  remove({ entity: t }) {
    if (!__privateGet(this, _i8).delete(t.rtid)) throw new Error(`Trying to remove entity ${t.rtid} which has not been registred to the RTID LUT.`);
    let e = __privateGet(this, _e7).get(t.id);
    if (!e) throw new Error(`Trying to remove entity ${t.id} which has not been registered to the EUID LUT.`);
    let n = e.indexOf(t);
    if (n == -1) throw new Error(`Trying to remove entity ${t.id} which has not been registered to the EUID LUT.`);
    if (e.slice(n, 1), e.length === 0 && __privateGet(this, _e7).delete(t.id), !__privateGet(this, _t10).delete(t)) throw new Error(`Trying to remove entity ${t.id} which has not been registered to the registry.`);
  }
  get({ entity_rtid: t }) {
    return __privateGet(this, _i8).get(t) ?? null;
  }
  find({ entity_euid: t }) {
    return __privateGet(this, _e7).get(t) ?? [];
  }
  _addDirtyEntity({ entity: t }) {
    __privateGet(this, _n7).add(t);
  }
  _removeEntityFromBroadcastList({ entity: t }) {
    __privateGet(this, _r5).delete(t);
  }
  _getEntitiesToUpdate() {
    let t = new Array(__privateGet(this, _n7).size), e = 0;
    for (let n of __privateGet(this, _n7)) t[e++] = { entity_components: n._core, dirty_components: n._dirty_components, deleted_components: n._deleted_components }, n.auto_broadcast && __privateMethod(this, _oi_instances, o_fn).call(this, { entity: n }), n._clearDirtyState();
    return __privateGet(this, _n7).clear(), t;
  }
  _getEntitiesToPersist() {
    let t = new Array(__privateGet(this, _r5).size), e = 0;
    for (let [n, r] of __privateGet(this, _r5)) t[e++] = { entity_components: n._core, dirty_components: Array.from(r), deleted_components: [] };
    return __privateGet(this, _r5).clear(), t;
  }
}, _t10 = new WeakMap(), _i8 = new WeakMap(), _e7 = new WeakMap(), _n7 = new WeakMap(), _r5 = new WeakMap(), _oi_instances = new WeakSet(), o_fn = function({ entity: t }) {
  let e = __privateGet(this, _r5).get(t);
  if (!e) __privateGet(this, _r5).set(t, /* @__PURE__ */ new Set([...t._dirty_components]));
  else for (let n of t._dirty_components) e.add(n);
}, _a14);
var _t11, _i9, _ai_instances, e_fn2, _n8, _r6, _a15;
var ai = (_a15 = class {
  constructor(t) {
    __privateAdd(this, _ai_instances);
    __privateAdd(this, _t11);
    __publicField(this, "_entity_registry", new oi());
    __privateAdd(this, _i9, /* @__PURE__ */ new Map());
    __privateAdd(this, _n8, (t) => {
      let e = this._entity_registry.get({ entity_rtid: t.components.euid.rtid });
      if (e) return e;
      let n = t.ancestors ? __privateGet(this, _r6).call(this, t.ancestors) : null;
      return new qt({ scene: this, parent: n, components: t.components });
    });
    __privateAdd(this, _r6, (t) => {
      let e = null;
      for (let n of t) {
        let r = this._entity_registry.get({ entity_rtid: n.components.euid.rtid });
        r ? e = r : e = new qt({ scene: this, parent: e, components: n.components });
      }
      return e;
    });
    __publicField(this, "_onEntityVisibilityChanged", ({ entity_rtid: t, is_visible: e }) => {
      let n = this._entity_registry.get({ entity_rtid: t });
      n && n._onVisibilityChanged({ is_visible: e });
    });
    __publicField(this, "_onScriptEventReceived", ({ emitter_rtid: t, event_name: e, target_rtids: n, data_object: r }) => {
      let s = this._entity_registry.get({ entity_rtid: t });
      s && s._onScriptEventEmitted({ scene: this, event_name: e, target_rtids: n, data_object: r });
      let o = new ri({ event_name: e, emitter_entity: s, data_object: r });
      for (let a of n) {
        let h = this._entity_registry.get({ entity_rtid: a });
        h && h._onScriptEventReceived({ script_event_received_event: o });
      }
    });
    __privateSet(this, _t11, t);
  }
  async newEntity({ name: t, components: e, options: n, parent: r = null }) {
    let s = r ? { parentUUID: r.id } : void 0, o = await __privateGet(this, _t11).createEntities({ components: [{ debug_name: { value: t }, ...e, lineage: s }], delete_on_client_disconnection: (n == null ? void 0 : n.delete_on_client_disconnection) ?? false, is_transient: true });
    return new qt({ scene: this, parent: r, components: o[0], options: n });
  }
  async newEntities({ components_array: t, options: e }) {
    return (await __privateGet(this, _t11).createEntities({ components: t, delete_on_client_disconnection: (e == null ? void 0 : e.delete_on_client_disconnection) ?? false, is_transient: true })).map((r) => new qt({ scene: this, parent: null, components: r, options: e }));
  }
  async findEntity({ entity_uuid: t, linkage: e = [] }) {
    let n = this._entity_registry.find({ entity_euid: t }).find((s) => {
      var _a42, _b, _c5;
      return (((_b = (_a42 = s.lineage) == null ? void 0 : _a42.value) == null ? void 0 : _b.length) ?? 0) === e.length && (((_c5 = s.lineage) == null ? void 0 : _c5.value) ?? []).every((o, a) => o === e[a]);
    });
    if (n) return n;
    let r = await __privateGet(this, _t11).findEntities({ query: { euid: t, linkage: e }, options: { include_ancestors: true } });
    return r.length === 0 ? null : __privateGet(this, _n8).call(this, r[0]);
  }
  async findEntities({ entity_uuid: t }) {
    let e = this._entity_registry.find({ entity_euid: t });
    if (e.length > 0) return e;
    let n = await __privateGet(this, _t11).findEntities({ query: { euid: t }, options: { include_ancestors: true } });
    return __privateMethod(this, _ai_instances, e_fn2).call(this, { entity_responses: n });
  }
  async deleteEntities({ entities: t }) {
    await __privateGet(this, _t11).deleteEntities({ entity_uuids: t.map((e) => e.id) });
    for (let e of t) this._entity_registry.remove({ entity: e });
  }
  async highlightEntities({ entities: t, keep_old_selection: e = false }) {
    __privateGet(this, _t11).highlightEntities({ highlightEntitiesMessage: { entities: t.map((n) => n.rtid), keep_old_selection: e } });
  }
  fireEvent({ event_map_id: t, event_name: e, emitter_entity: n, target_entities: r = [], data_object: s = {} }) {
    __privateGet(this, _t11).fireEvent({ event_map_id: t, event_name: e, emitter_entity: n ? n.rtid : 0n, target_entities: r.map((o) => o.rtid), data_object: s });
  }
  setFilter({ name: t, value: e }) {
    let n = Ur(e);
    __privateGet(this, _t11).setFilter({ name: t, rpn: n });
  }
  toggleFilter({ name: t, enabled: e }) {
    __privateGet(this, _t11).toggleFilter({ name: t, enabled: e });
  }
  removeFilter({ name: t }) {
    __privateGet(this, _t11).removeFilter({ name: t });
  }
  async findEntitiesByNames({ entity_names: t }) {
    let e = await __privateGet(this, _t11).findEntities({ query: { names: t }, options: { include_ancestors: true } });
    return __privateMethod(this, _ai_instances, e_fn2).call(this, { entity_responses: e });
  }
  async findEntitiesWithComponents({ mandatory_components: t, forbidden_components: e }) {
    let n = await __privateGet(this, _t11).findEntities({ query: { mandatory_components: t, forbidden_components: e }, options: { include_ancestors: true } });
    return __privateMethod(this, _ai_instances, e_fn2).call(this, { entity_responses: n });
  }
  async _findEntity({ entity_rtid: t }) {
    if (t === 0n) return null;
    let e = this._entity_registry.get({ entity_rtid: t });
    if (e) return e;
    let n = __privateGet(this, _i9).get(t);
    n || (n = __privateGet(this, _t11).findEntities({ query: { rtid: t } }), __privateGet(this, _i9).set(t, n));
    let r = await n;
    return __privateGet(this, _i9).delete(t), r.length === 0 ? null : __privateGet(this, _n8).call(this, r[0]);
  }
  async _getChildren({ entity: t }) {
    return (await __privateGet(this, _t11).getChildren({ entity_rtid: t.rtid })).map((n) => new qt({ scene: this, parent: t, components: n }));
  }
  _assignClientToScripts({ client_uuid: t, entity_rtid: e, script_uuid: n }) {
    __privateGet(this, _t11).assignClientToScript({ client_uuid: t, script_uuid: n, entity_rtid: e });
  }
  async _setEntityVisibility({ entity_rtid: t, is_visible: e }) {
    return __privateGet(this, _t11).setEntityVisibility({ entity_rtid: t, is_visible: e });
  }
  _updateEntityFromEvent({ entity_euid: t, updated_components: e }) {
    let n = this._entity_registry.find({ entity_euid: t });
    if (n.length === 0) {
      console.log("Received an update for an undiscovered entity", t);
      return;
    }
    for (let r of n) r._mergeComponents({ components: e, dispatch_event: true, change_source: "external" });
  }
  _sanitizeComponentValue({ component_name: t, value: e }) {
    return __privateGet(this, _t11).sanitizeComponentValue({ component_name: t, value: e });
  }
}, _t11 = new WeakMap(), _i9 = new WeakMap(), _ai_instances = new WeakSet(), e_fn2 = function({ entity_responses: t }) {
  return t.map(__privateGet(this, _n8));
}, _n8 = new WeakMap(), _r6 = new WeakMap(), _a15);
var _t12, _i10, _e8, _n9, _a16;
var Oe = (_a16 = class {
  constructor({ core: t, client_info: e, client_meta_data: n }) {
    __privateAdd(this, _t12);
    __privateAdd(this, _i10);
    __privateAdd(this, _e8, []);
    __privateAdd(this, _n9, null);
    __privateSet(this, _t12, t), __privateSet(this, _i10, e), this._updateFromClientMetaData({ client_meta_data: n });
  }
  get id() {
    return __privateGet(this, _i10).client_id;
  }
  get user_id() {
    return __privateGet(this, _i10).user_id;
  }
  get username() {
    return __privateGet(this, _i10).username;
  }
  get _cursor_data() {
    return __privateGet(this, _n9);
  }
  async getCameraEntities() {
    return (await Promise.all(__privateGet(this, _e8).map((e) => __privateGet(this, _t12).scene._findEntity({ entity_rtid: e })))).filter((e) => e != null);
  }
  async getHoveredEntity() {
    return __privateGet(this, _n9) == null ? null : await __privateGet(this, _t12).scene._findEntity({ entity_rtid: __privateGet(this, _n9).hovered_entity_rtid });
  }
  _updateFromClientMetaData({ client_meta_data: t }) {
    __privateSet(this, _e8, t.viewports.map((e) => e.camera_rtid)), t.hovered_entity_rtid != 0n ? __privateSet(this, _n9, { hovered_entity_rtid: t.hovered_entity_rtid, hovered_ws_position: t.ws_hovered_position, hovered_ws_normal: t.ws_hovered_normal }) : __privateSet(this, _n9, null);
  }
}, _t12 = new WeakMap(), _i10 = new WeakMap(), _e8 = new WeakMap(), _n9 = new WeakMap(), _a16);
var hi = class extends Event {
  constructor({ viewports: t }) {
    super("TO_REMOVE__viewports-added");
    __publicField(this, "viewports");
    this.viewports = t;
  }
};
var ci = class extends Event {
  constructor({ reason: t }) {
    super("on-disconnected");
    __publicField(this, "reason");
    this.reason = t;
  }
};
var li = class extends Event {
  constructor({ seconds_remaining: t, reset_timer: e }) {
    super("on-inactivity-warning");
    __publicField(this, "seconds_remaining");
    __publicField(this, "resetTimer");
    this.seconds_remaining = t, this.resetTimer = e;
  }
};
var di = class extends Event {
  constructor() {
    super("on-activity-detected");
  }
};
var mi = class extends Event {
  constructor({ client: t }) {
    super("on-client-joined");
    __publicField(this, "client");
    this.client = t;
  }
};
var ui = class extends Event {
  constructor({ client: t }) {
    super("on-client-left");
    __publicField(this, "client");
    this.client = t;
  }
};
var _t13, _i11, _e9, _n10, _i_instances2, r_get, o_fn2, s_fn2, a_fn3, c_fn3, h_fn2, l_fn, _a17;
var De = (_a17 = class extends mt {
  constructor({ token: t, session_info: e, created: n, is_guest: r = false }) {
    super();
    __privateAdd(this, _i_instances2);
    __publicField(this, "info");
    __publicField(this, "has_been_created");
    __publicField(this, "client_id", null);
    __publicField(this, "token");
    __publicField(this, "is_guest", false);
    __privateAdd(this, _t13, null);
    __privateAdd(this, _i11, null);
    __privateAdd(this, _e9, /* @__PURE__ */ new Map());
    __privateAdd(this, _n10, /* @__PURE__ */ new Set());
    __publicField(this, "_onDisconnected", (t) => {
      this._dispatchEvent(new ci({ reason: t.reason }));
    });
    __publicField(this, "_onInactivityWarning", (t) => {
      this._dispatchEvent(new li({ seconds_remaining: t.seconds_remaining, reset_timer: t.resetTimer }));
    });
    __publicField(this, "_onActivityDetected", (t) => {
      this._dispatchEvent(new di());
    });
    this.token = t, this.info = e, this.has_been_created = n, this.is_guest = r;
  }
  static async create({ scene_id: t, token: e, is_transient: n }) {
    let r = await fetch(`${Ct._api_url}/sessions`, { method: "POST", body: JSON.stringify({ scene_id: t, is_transient: n }), headers: { "Content-Type": "application/json", user_token: e } });
    if (!r.ok) throw new Error("Error when creating session");
    let s = await r.json();
    return new _a17({ token: e, session_info: { ...s, scene_id: t, is_transient_session: n ?? false }, created: true });
  }
  static async find({ scene_id: t, token: e, session_selector: n }) {
    let s = await (await fetch(`${Ct._api_url}/sessions?filters[scene_id]=${t}`, { method: "GET", headers: { user_token: e } })).json();
    if (s.length === 0) return null;
    let o = n({ sessions: s });
    return o ? new _a17({ token: e, session_info: o, created: false }) : null;
  }
  static async findById({ session_id: t, token: e }) {
    let n = await fetch(`${Ct._api_url}/sessions/${t}`, { method: "GET", headers: { user_token: e } });
    if (!n.ok) return `${t}`, null;
    let r = await n.json();
    return new _a17({ token: e, session_info: r, created: false });
  }
  static async findByGuestToken({ guest_token: t }) {
    let e = await fetch(`${Ct._api_url}/sessions`, { method: "GET", headers: { guest_token: t } });
    if (!e.ok) throw new Error("Could not find session as guest, guest token might be expired");
    let [n] = await e.json();
    return new _a17({ token: t, session_info: n, created: false, is_guest: true });
  }
  get scene_id() {
    return this.info.scene_id;
  }
  get session_id() {
    return this.info.session_id;
  }
  get client_ids() {
    return Array.from(__privateGet(this, _e9).keys());
  }
  get clients() {
    return Array.from(__privateGet(this, _e9).values());
  }
  get other_clients() {
    return Array.from(__privateGet(this, _e9).values()).filter((t) => t.id !== this.client_id);
  }
  get current_client() {
    return this.client_id ? __privateGet(this, _e9).get(this.client_id) ?? null : null;
  }
  get gateway_url() {
    return __privateGet(this, _t13);
  }
  get session_key() {
    return __privateGet(this, _i11);
  }
  isJoinable() {
    return __privateGet(this, _t13) !== null && __privateGet(this, _i11) !== null;
  }
  async registerClient() {
    let t = await fetch(`${Ct._api_url}/sessions/${this.session_id}/clients`, { method: "POST", headers: __privateGet(this, _i_instances2, r_get) }), { session_token: e, endpoint_info: n } = await t.json(), r = n.ssl_port ? "wss" : "ws", s = n.ssl_port !== 0 ? n.ssl_port : n.port;
    __privateSet(this, _t13, `${r}://${n.ip}:${s}`), __privateSet(this, _i11, e);
  }
  async close() {
    if (this.info === null) throw new Error("Cannot close session as it has not been opened yet");
    await fetch(`${Ct._api_url}/sessions/${this.session_id}`, { method: "DELETE", headers: __privateGet(this, _i_instances2, r_get) });
  }
  getClient({ client_id: t }) {
    return __privateGet(this, _e9).get(t) ?? null;
  }
  async evictClient({ client: t }) {
    let e = t instanceof Oe ? t.id : t;
    return (await fetch(`${Ct._api_url}/sessions/${this.session_id}/clients/${e}`, { method: "DELETE", headers: __privateGet(this, _i_instances2, r_get) })).ok;
  }
  _updateClients({ core: t, client_data: e }) {
    for (let n of e) {
      let r = n.client_id;
      if (__privateGet(this, _n10).has(r)) continue;
      let s = __privateGet(this, _e9).get(r);
      s ? __privateMethod(this, _i_instances2, s_fn2).call(this, { client: s, client_meta_data: n }) : __privateMethod(this, _i_instances2, o_fn2).call(this, { core: t, client_meta_data: n });
    }
    __privateMethod(this, _i_instances2, a_fn3).call(this, { client_data: e });
  }
}, _t13 = new WeakMap(), _i11 = new WeakMap(), _e9 = new WeakMap(), _n10 = new WeakMap(), _i_instances2 = new WeakSet(), r_get = function() {
  return this.is_guest ? { guest_token: this.token } : { user_token: this.token };
}, o_fn2 = async function({ core: t, client_meta_data: e }) {
  if (e.viewports.length === 0) return;
  let n = e.client_id;
  __privateGet(this, _n10).add(n);
  let r = null;
  try {
    r = await __privateMethod(this, _i_instances2, l_fn).call(this, { client_id: e.client_id });
  } catch (o) {
    console.error("Could not get info for client", n, o), r = { client_id: n, client_type: "unknown", user_id: "", username: "unknown user" };
  }
  let s = new Oe({ core: t, client_info: r, client_meta_data: e });
  __privateMethod(this, _i_instances2, c_fn3).call(this, { client: s }), __privateGet(this, _n10).delete(n);
}, s_fn2 = function({ client: t, client_meta_data: e }) {
  t._updateFromClientMetaData({ client_meta_data: e });
}, a_fn3 = function({ client_data: t }) {
  let e = t.map((n) => n.client_id);
  for (let [n] of __privateGet(this, _e9)) e.includes(n) || __privateMethod(this, _i_instances2, h_fn2).call(this, { client_id: n });
}, c_fn3 = function({ client: t }) {
  __privateGet(this, _e9).set(t.id, t), t.id !== this.client_id && this._dispatchEvent(new mi({ client: t }));
}, h_fn2 = function({ client_id: t }) {
  let e = this.getClient({ client_id: t });
  e && (__privateGet(this, _e9).delete(t), this._dispatchEvent(new ui({ client: e })));
}, l_fn = async function({ client_id: t }) {
  return await (await fetch(`${Ct._api_url}/sessions/${this.session_id}/clients/${t}`, { method: "GET", headers: __privateGet(this, _i_instances2, r_get) })).json();
}, _a17);
var _t14, _i12, _e10, _n11, _r7, _o4, _s3, _pi_instances, a_fn4, _c2, h_fn3, _a18;
var pi = (_a18 = class {
  constructor(t) {
    __privateAdd(this, _pi_instances);
    __privateAdd(this, _t14);
    __privateAdd(this, _i12, false);
    __privateAdd(this, _e10, { x: 0, y: 0 });
    __privateAdd(this, _n11, /* @__PURE__ */ new Map());
    __privateAdd(this, _r7, ({ viewport: t, event: e }) => {
      if (e.button > 2) {
        console.warn("MouseInput: Unsupported mouse button", e.button);
        return;
      }
      e.stopPropagation();
      let n = __privateMethod(this, _pi_instances, a_fn4).call(this, e), r = __privateMethod(this, _pi_instances, h_fn3).call(this, { viewport: t, x: n.x, y: n.y });
      __privateGet(this, _t14)._sendInput({ input_state: { input_operation: ["lbutton_down", "mbutton_down", "rbutton_down"][e.button], input_data: r } });
    });
    __privateAdd(this, _o4, ({ viewport: t, event: e }) => {
      if (e.button > 2) {
        console.warn("MouseInput: Unsupported mouse button", e.button);
        return;
      }
      e.stopPropagation();
      let n = __privateMethod(this, _pi_instances, a_fn4).call(this, e), r = __privateMethod(this, _pi_instances, h_fn3).call(this, { viewport: t, x: n.x, y: n.y });
      __privateGet(this, _t14)._sendInput({ input_state: { input_operation: ["lbutton_up", "mbutton_up", "rbutton_up"][e.button], input_data: r } });
    });
    __privateAdd(this, _s3, ({ viewport: t, event: e }) => {
      e.stopPropagation();
      let n = __privateMethod(this, _pi_instances, a_fn4).call(this, e), r = __privateMethod(this, _pi_instances, h_fn3).call(this, { viewport: t, x: n.x, y: n.y });
      __privateGet(this, _t14)._sendInput({ input_state: { input_operation: "mouse_move", input_data: r } });
    });
    __privateAdd(this, _c2, () => {
      let t = Array.from(__privateGet(this, _n11).values());
      __privateSet(this, _i12, t.some((e) => document.pointerLockElement === e.dom_element));
    });
    __privateSet(this, _t14, t), typeof document < "u" && document.addEventListener("pointerlockchange", __privateGet(this, _c2));
  }
  enableOnViewport({ viewport: t }) {
    let e = __privateGet(this, _n11).get(t);
    if (e) {
      e.ref_count++;
      return;
    }
    let n = t.dom_element, r = new AbortController();
    n.addEventListener("mousedown", (s) => __privateGet(this, _r7).call(this, { viewport: t, event: s }), { signal: r.signal }), n.addEventListener("mouseup", (s) => __privateGet(this, _o4).call(this, { viewport: t, event: s }), { signal: r.signal }), n.addEventListener("mousemove", (s) => __privateGet(this, _s3).call(this, { viewport: t, event: s }), { signal: r.signal }), __privateGet(this, _n11).set(t, { dom_element: n, abort_controller: r, ref_count: 1 });
  }
  disableFromViewport({ viewport: t }) {
    let e = __privateGet(this, _n11).get(t);
    if (!e) {
      console.warn("Attempt to release mouse on a viewport that is not set up", t);
      return;
    }
    --e.ref_count > 0 || (e.abort_controller.abort(), __privateGet(this, _n11).delete(t));
  }
}, _t14 = new WeakMap(), _i12 = new WeakMap(), _e10 = new WeakMap(), _n11 = new WeakMap(), _r7 = new WeakMap(), _o4 = new WeakMap(), _s3 = new WeakMap(), _pi_instances = new WeakSet(), a_fn4 = function(t) {
  let e = t;
  return __privateGet(this, _i12) ? (__privateGet(this, _e10).x += e.movementX, __privateGet(this, _e10).y += e.movementY) : (__privateGet(this, _e10).x = e.clientX, __privateGet(this, _e10).y = e.clientY), __privateGet(this, _e10);
}, _c2 = new WeakMap(), h_fn3 = function({ viewport: t, x: e, y: n, bufferSize: r = 8 }) {
  let s = new ArrayBuffer(r), o = new DataView(s), [a, h] = __privateGet(this, _t14)._projectViewportPositionOnRemoteFrame({ viewport: t, position: [e, n] });
  return o.setFloat32(0, a, true), o.setFloat32(4, h, true), new Uint8Array(s);
}, _a18);
var _t15, _i14, _e11, _n12, __i_instances, r_fn, o_fn3, _a19;
var _i13 = (_a19 = class {
  constructor(t) {
    __privateAdd(this, __i_instances);
    __privateAdd(this, _t15);
    __privateAdd(this, _i14, (t) => {
      t.preventDefault();
      let e = __privateMethod(this, __i_instances, r_fn).call(this, t);
      __privateGet(this, _t15)._sendInput({ input_state: { input_operation: "on_key_down", input_data: e } });
    });
    __privateAdd(this, _e11, (t) => {
      t.preventDefault();
      let e = __privateMethod(this, __i_instances, r_fn).call(this, t);
      __privateGet(this, _t15)._sendInput({ input_state: { input_operation: "on_key_up", input_data: e } });
    });
    __privateAdd(this, _n12, () => {
      __privateGet(this, _t15)._sendInput({ input_state: { input_operation: "reset" } });
    });
    __privateSet(this, _t15, t);
  }
  enable() {
    window.addEventListener("keydown", __privateGet(this, _i14)), window.addEventListener("keyup", __privateGet(this, _e11)), window.addEventListener("blur", __privateGet(this, _n12));
  }
  disable() {
    window.removeEventListener("keydown", __privateGet(this, _i14)), window.removeEventListener("keyup", __privateGet(this, _e11)), window.removeEventListener("blur", __privateGet(this, _n12)), __privateGet(this, _n12).call(this);
  }
}, _t15 = new WeakMap(), _i14 = new WeakMap(), _e11 = new WeakMap(), _n12 = new WeakMap(), __i_instances = new WeakSet(), r_fn = function(t) {
  let e = __privateMethod(this, __i_instances, o_fn3).call(this, t), n = new Uint8Array(4);
  return n[0] = e & 255, n[1] = e >> 8 & 255, n[2] = e >> 16 & 255, n[3] = e >> 24 & 255, n;
}, o_fn3 = function(t) {
  let { code: e, key: n } = t;
  if (!(e == null ? void 0 : e.startsWith("Key"))) return t.keyCode;
  let r = e[e.length - 1];
  return r !== n ? r.charCodeAt(0) : t.keyCode;
}, _a19);
var _t16, _i15, _e12, _n13, _r8, _o5, _fi_instances, s_fn3, a_fn5, _a20;
var fi = (_a20 = class {
  constructor() {
    __privateAdd(this, _fi_instances);
    __privateAdd(this, _t16, 2);
    __privateAdd(this, _i15, 44100);
    __privateAdd(this, _e12, 32);
    __privateAdd(this, _n13, 1);
    __privateAdd(this, _r8);
    __privateAdd(this, _o5, 0);
    __privateSet(this, _r8, new AudioContext({ sampleRate: __privateGet(this, _i15), latencyHint: "interactive" })), __privateSet(this, _o5, __privateGet(this, _r8).currentTime);
  }
  release() {
    __privateGet(this, _r8).close();
  }
  playAudioPacket({ packet: t }) {
    let e = new Float32Array(t.buffer, t.byteOffset), n = t.byteLength / (__privateGet(this, _e12) / 8 * __privateGet(this, _t16));
    __privateMethod(this, _fi_instances, s_fn3).call(this, { samples: e, sample_count: n });
  }
}, _t16 = new WeakMap(), _i15 = new WeakMap(), _e12 = new WeakMap(), _n13 = new WeakMap(), _r8 = new WeakMap(), _o5 = new WeakMap(), _fi_instances = new WeakSet(), s_fn3 = function({ samples: t, sample_count: e }) {
  let n = __privateGet(this, _r8).createBufferSource();
  n.buffer = __privateMethod(this, _fi_instances, a_fn5).call(this, { samples: t, sample_count: e }), n.connect(__privateGet(this, _r8).destination), __privateGet(this, _o5) <= __privateGet(this, _r8).currentTime && __privateSet(this, _o5, 0.1 + __privateGet(this, _r8).currentTime + e / __privateGet(this, _i15)), n.start(__privateGet(this, _o5)), __privateSet(this, _o5, __privateGet(this, _o5) + e / __privateGet(this, _i15));
}, a_fn5 = function({ samples: t, sample_count: e }) {
  let n = __privateGet(this, _r8).createBuffer(__privateGet(this, _t16), e, __privateGet(this, _i15));
  for (let r = 0; r < __privateGet(this, _t16); r++) {
    let s = n.getChannelData(r);
    for (let o = 0; o < e; o++) s[o] = t[r * e + o] * __privateGet(this, _n13);
  }
  return n;
}, _a20);
var bh = [4, 8, 16, 32, 1024, 2048, 0, 0, 2, 1, 4096, 8192, 64, 128, 256, 512];
var vl = { A: 0, B: 1, X: 2, Y: 3, LeftShoulder: 4, RightShoulder: 5, LeftTrigger: 6, RightTrigger: 7, View: 8, Menu: 9, LeftThumbstick: 10, RightThumbstick: 11, DPadUp: 12, DPadDown: 13, DPadLeft: 14, DPadRight: 15 };
var et = { LeftThumbstickX: 0, LeftThumbstickY: 1, RightThumbstickX: 2, RightThumbstickY: 3, LeftTrigger: 4, RightTrigger: 5 };
var fn = { Left: [et.LeftThumbstickX, et.LeftThumbstickY], Right: [et.RightThumbstickX, et.RightThumbstickY] };
var kr = ({ currentReading: i8, button: t, isPressed: e }) => {
  let n = bh[t];
  return i8 & ~n | -Number(e) & n;
};
var _t17, _i16, _e13, _ue_instances, n_fn2, r_fn2, _a21;
var ue = (_a21 = class {
  constructor({ instance: t, index: e }) {
    __privateAdd(this, _ue_instances);
    __privateAdd(this, _t17);
    __privateAdd(this, _i16);
    __privateAdd(this, _e13, { buttons: 0, axes: { [et.LeftThumbstickX]: 0, [et.LeftThumbstickY]: 0, [et.RightThumbstickX]: 0, [et.RightThumbstickY]: 0, [et.LeftTrigger]: 0, [et.RightTrigger]: 0 } });
    __publicField(this, "setAxis", ({ axis: t, value: e }) => {
      __privateGet(this, _e13).axes[t] != e && (__privateGet(this, _e13).axes[t] = e, __privateMethod(this, _ue_instances, n_fn2).call(this, { axis: t }));
    });
    __publicField(this, "setJoystick", ({ joystick: t, value: e }) => {
      this.setAxis({ axis: t[0], value: e[0] }), this.setAxis({ axis: t[1], value: e[1] });
    });
    __publicField(this, "setButton", ({ button: t, isPressed: e }) => {
      let n = kr({ currentReading: __privateGet(this, _e13).buttons, button: t, isPressed: e });
      n != __privateGet(this, _e13).buttons && (__privateGet(this, _e13).buttons = n, __privateMethod(this, _ue_instances, r_fn2).call(this));
    });
    __publicField(this, "setButtons", ({ buttons: t }) => {
      let e = __privateGet(this, _e13).buttons;
      for (let n = 0; n < t.length; n++) {
        let r = t[n];
        e = kr({ currentReading: e, button: n, isPressed: r });
      }
      __privateGet(this, _e13).buttons != e && (__privateGet(this, _e13).buttons = e, __privateMethod(this, _ue_instances, r_fn2).call(this));
    });
    __publicField(this, "resetInput", () => {
      this.setAxis({ axis: et.LeftThumbstickX, value: 0 }), this.setAxis({ axis: et.LeftThumbstickY, value: 0 }), this.setAxis({ axis: et.RightThumbstickX, value: 0 }), this.setAxis({ axis: et.RightThumbstickY, value: 0 }), this.setAxis({ axis: et.LeftTrigger, value: 0 }), this.setAxis({ axis: et.RightTrigger, value: 0 }), __privateGet(this, _e13).buttons = 0, __privateMethod(this, _ue_instances, r_fn2).call(this);
    });
    __privateSet(this, _t17, t), __privateSet(this, _i16, e);
  }
}, _t17 = new WeakMap(), _i16 = new WeakMap(), _e13 = new WeakMap(), _ue_instances = new WeakSet(), n_fn2 = function({ axis: t }) {
  let e = new ArrayBuffer(6), n = new DataView(e);
  n.setUint8(0, __privateGet(this, _i16)), n.setUint8(1, t), n.setFloat32(2, __privateGet(this, _e13).axes[t], true), __privateGet(this, _t17)._sendInput({ input_state: { input_operation: "gamepad_axis", input_data: new Uint8Array(e) } });
}, r_fn2 = function() {
  let t = new ArrayBuffer(5), e = new DataView(t);
  e.setUint8(0, __privateGet(this, _i16)), e.setUint16(1, __privateGet(this, _e13).buttons, true), __privateGet(this, _t17)._sendInput({ input_state: { input_operation: "gamepad_buttons", input_data: new Uint8Array(t) } });
}, _a21);
var _t18, _i17, _e14, _n14, _r9, _o6, _s4, _a22, _a23;
var ze = (_a23 = class {
  constructor({ instance: t, index: e, physicalIndex: n }) {
    __privateAdd(this, _t18, 1e3 / 60);
    __privateAdd(this, _i17, null);
    __privateAdd(this, _e14);
    __privateAdd(this, _n14);
    __privateAdd(this, _r9, () => {
      __privateGet(this, _s4).call(this);
    });
    __privateAdd(this, _o6, () => {
      let t = navigator.getGamepads()[__privateGet(this, _n14)];
      if (!t || !window.document.hasFocus()) {
        __privateGet(this, _a22).call(this), __privateGet(this, _e14).resetInput();
        return;
      }
      let e = t.buttons.map((n) => n.pressed);
      __privateGet(this, _e14).setButtons({ buttons: e }), __privateGet(this, _e14).setJoystick({ joystick: fn.Left, value: [-t.axes[0], t.axes[1]] }), __privateGet(this, _e14).setJoystick({ joystick: fn.Right, value: [-t.axes[2], t.axes[3]] }), __privateGet(this, _e14).setAxis({ axis: et.LeftTrigger, value: t.buttons[6].value }), __privateGet(this, _e14).setAxis({ axis: et.RightTrigger, value: t.buttons[7].value }), __privateGet(this, _s4).call(this);
    });
    __privateAdd(this, _s4, () => {
      __privateGet(this, _a22).call(this), __privateSet(this, _i17, setTimeout(() => {
        __privateGet(this, _o6).call(this), __privateSet(this, _i17, null);
      }, __privateGet(this, _t18)));
    });
    __privateAdd(this, _a22, () => {
      __privateGet(this, _i17) && (clearTimeout(__privateGet(this, _i17)), __privateSet(this, _i17, null));
    });
    __privateSet(this, _e14, new ue({ instance: t, index: e })), __privateSet(this, _n14, n);
  }
  enable() {
    window.addEventListener("focus", __privateGet(this, _r9)), window.document.hasFocus() && __privateGet(this, _s4).call(this);
  }
  disable() {
    __privateGet(this, _a22).call(this), __privateGet(this, _e14).resetInput(), window.removeEventListener("focus", __privateGet(this, _r9));
  }
}, _t18 = new WeakMap(), _i17 = new WeakMap(), _e14 = new WeakMap(), _n14 = new WeakMap(), _r9 = new WeakMap(), _o6 = new WeakMap(), _s4 = new WeakMap(), _a22 = new WeakMap(), _a23);
var _t19, _i18, _e15, _n15, _r10, _a24;
var yi = (_a24 = class {
  constructor({ instance: t }) {
    __privateAdd(this, _t19);
    __privateAdd(this, _i18, []);
    __privateAdd(this, _e15);
    __privateAdd(this, _n15, (t) => {
      let e = t.gamepad, n = e.index;
      e && e.connected && (__privateGet(this, _i18)[n] = new ze({ instance: __privateGet(this, _t19), index: 0, physicalIndex: e.index }), __privateGet(this, _i18)[n].enable());
    });
    __privateAdd(this, _r10, (t) => {
      let e = t.gamepad.index;
      __privateGet(this, _i18)[e] && (__privateGet(this, _i18)[e].disable(), __privateGet(this, _i18)[e] = null);
    });
    __privateSet(this, _t19, t), __privateSet(this, _e15, navigator.getGamepads().length - 1);
  }
  enable() {
    let t = navigator.getGamepads();
    __privateSet(this, _i18, Array(t.length).fill(null));
    for (let e = 0; e < t.length; e++) {
      let n = t[e];
      n && n.connected && (__privateGet(this, _i18)[e] = new ze({ instance: __privateGet(this, _t19), index: 0, physicalIndex: e }), __privateGet(this, _i18)[e].enable());
    }
    window.addEventListener("gamepadconnected", __privateGet(this, _n15)), window.addEventListener("gamepaddisconnected", __privateGet(this, _r10));
  }
  disable() {
    window.removeEventListener("gamepadconnected", __privateGet(this, _n15)), window.removeEventListener("gamepaddisconnected", __privateGet(this, _r10));
    for (let t of __privateGet(this, _i18)) t && t.disable();
    __privateSet(this, _i18, []);
  }
  createVirtualGamepad() {
    return __privateWrapper(this, _e15)._++, new ue({ instance: __privateGet(this, _t19), index: 0 });
  }
}, _t19 = new WeakMap(), _i18 = new WeakMap(), _e15 = new WeakMap(), _n15 = new WeakMap(), _r10 = new WeakMap(), _a24);
var _a25, _t20, _i19, _e16, _n16, _r11, _o7, _s5, _a26, _c3, _h4, _i_instances3, l_fn2, d_fn3, m_fn3, _u, _p, _y, __fn, _f, _v;
var Ct = (_a25 = class {
  constructor({ session: t }) {
    __privateAdd(this, _i_instances3);
    __publicField(this, "session");
    __publicField(this, "scene");
    __privateAdd(this, _t20);
    __privateAdd(this, _i19, null);
    __privateAdd(this, _e16, new Ze(this));
    __privateAdd(this, _n16, null);
    __privateAdd(this, _r11, new fi());
    __privateAdd(this, _o7);
    __privateAdd(this, _s5);
    __privateAdd(this, _a26);
    __privateAdd(this, _c3, null);
    __privateAdd(this, _h4, null);
    __privateAdd(this, _u, ({ encoded_frame: t, meta_data: e }) => {
      this.session._updateClients({ core: this, client_data: e.clients });
      let n = Qn({ raw_frame_meta_data: e, client_id: this.session.client_id, entity_registry: this.scene._entity_registry, viewports: this.viewports });
      __privateGet(this, _n16).consumeEncodedFrame({ encoded_frame: { video_stream: t, meta_data: n } });
    });
    __privateAdd(this, _p, ({ packet: t }) => {
      __privateGet(this, _r11).playAudioPacket({ packet: t });
    });
    __privateAdd(this, _y, ({ updated_entities: t }) => {
      for (let { entity_euid: e, updated_components: n } of t) this.scene._updateEntityFromEvent({ entity_euid: e, updated_components: n });
    });
    __privateAdd(this, _f, null);
    __privateAdd(this, _v, null);
    this.session = t, __privateSet(this, _t20, new sn.Core()), this.scene = new ai(__privateGet(this, _t20)), __privateSet(this, _o7, new pi(this)), __privateSet(this, _s5, new _i13(this)), __privateSet(this, _a26, new yi({ instance: this }));
  }
  static async start({ scene_id: t, token: e, is_transient: n }) {
    `${t}`;
    let r = await De.create({ scene_id: t, token: e, is_transient: n });
    return await _a25.join({ session: r });
  }
  static async join_or_start({ scene_id: t, token: e, session_selector: n = ({ sessions: s }) => s[0], is_transient: r }) {
    `${t}`;
    let s = await De.find({ scene_id: t, token: e, session_selector: n });
    if (s === null) return `${t}`, await _a25.start({ scene_id: t, token: e, is_transient: r });
    try {
      return await _a25.join({ session: s });
    } catch {
      return console.error(`Failed to join session '${s.session_id}', trying again with another session.`), await _a25.join_or_start({ scene_id: t, token: e, session_selector: ({ sessions: o }) => (o = o.filter((a) => a.session_id !== s.session_id), o.length === 0 ? null : n({ sessions: o })) });
    }
  }
  static async join({ session: t }) {
    var _a42;
    return await sn.load(), __privateMethod(_a42 = new _a25({ session: t }), _i_instances3, l_fn2).call(_a42);
  }
  get default_decoded_frame_consumer() {
    return __privateGet(this, _e16);
  }
  get activity_watcher() {
    return __privateGet(this, _t20).activity_watcher;
  }
  get latency() {
    return __privateGet(this, _t20).latency;
  }
  get viewports() {
    return __privateGet(this, _e16).viewports;
  }
  async disconnect() {
    __privateMethod(this, _i_instances3, m_fn3).call(this), __privateGet(this, _c3) && clearInterval(__privateGet(this, _c3)), __privateGet(this, _h4) && clearInterval(__privateGet(this, _h4)), __privateGet(this, _n16) !== null && __privateGet(this, _n16).release(), __privateGet(this, _e16).release(), __privateGet(this, _r11).release(), await __privateGet(this, _t20).disconnect();
  }
  addViewports({ viewports: t }) {
    __privateGet(this, _e16).addViewports({ viewports: t }), this.session._dispatchEvent(new hi({ viewports: t }));
  }
  removeViewport({ viewport: t }) {
    __privateGet(this, _e16).removeViewport({ viewport: t });
  }
  async configureRemoteServer({ codec: t = "h264" }) {
    let e = { remote_canvas_size: __privateGet(this, _e16)._computeRemoteCanvasSize({ codec: t }), encoder_config: { codec: t, profile: "main", frame_rate: 60, lossy: true }, supported_devices: { keyboard: true, mouse: true, gamepad: true, hololens: false, touchscreen: false } };
    __privateGet(this, _e16).dimensions;
    let n = await __privateGet(this, _t20).configureClient({ client_config: e });
    return __privateSet(this, _i19, n.codec), n;
  }
  isConfigured() {
    return __privateGet(this, _i19) !== null;
  }
  async setEncodedFrameConsumer({ encoded_frame_consumer: t }) {
    if (__privateGet(this, _i19) === null) throw new Error("Client not configured.");
    __privateSet(this, _n16, await t.configure({ codec: __privateGet(this, _i19), frame_dimensions: __privateGet(this, _e16).dimensions }));
  }
  startStreaming() {
    if (!this.isConfigured()) throw new Error("The Livelink instance is not configured yet");
    __privateGet(this, _e16).init(), __privateGet(this, _t20).resume(), __privateMethod(this, _i_instances3, __fn).call(this, {});
  }
  startSimulation() {
    __privateGet(this, _t20).setSimulationState({ state: "start_simulation" });
  }
  pauseSimulation() {
    __privateGet(this, _t20).setSimulationState({ state: "pause_simulation" });
  }
  stopSimulation() {
    __privateGet(this, _t20).setSimulationState({ state: "stop_simulation" });
  }
  sendSkeletonPose({ controller: t, partial_pose: e }) {
    __privateGet(this, _t20).sendSkeletonPose({ controller_rtid: t.rtid, partial_pose: e });
  }
  get devices() {
    return { mouse: __privateGet(this, _o7), keyboard: __privateGet(this, _s5), gamepads_registry: __privateGet(this, _a26) };
  }
  async configureHeadlessClient() {
    let t = { remote_canvas_size: [256, 256], encoder_config: { codec: "h264", profile: "main", frame_rate: 30, lossy: true }, supported_devices: { keyboard: true, mouse: false, gamepad: false, hololens: false, touchscreen: false } }, e = await __privateGet(this, _t20).configureClient({ client_config: t });
    return __privateSet(this, _i19, e.codec), e;
  }
  _sendInput({ input_state: t }) {
    __privateGet(this, _t20).sendInputState({ input_state: t });
  }
  async _resize({ size: t }) {
    var _a42;
    let { size: e } = await __privateGet(this, _t20).resize({ size: t });
    (_a42 = __privateGet(this, _n16)) == null ? void 0 : _a42.resize({ frame_dimensions: e });
  }
  _setViewports({ viewport_configs: t }) {
    __privateGet(this, _t20).setViewports({ viewport_configs: t });
  }
  async _castScreenSpaceRay({ screenSpaceRayQuery: t }) {
    return __privateGet(this, _t20).castScreenSpaceRay({ screenSpaceRayQuery: t });
  }
  _refreshViewports() {
    __privateGet(this, _f) || (__privateGet(this, _v) !== null && clearTimeout(__privateGet(this, _v)), __privateSet(this, _v, setTimeout(() => {
      __privateGet(this, _e16).init();
    }, 0)));
  }
  _projectViewportPositionOnRemoteFrame({ viewport: t, position: e }) {
    let n = __privateGet(this, _e16).width, r = __privateGet(this, _e16).height, s = t._getScreenPosition({ position: e }), o = [t.rendering_surface.relative_rect.left * n, t.rendering_surface.relative_rect.top * r], a = [o[0] + t.offset[0], o[1] + t.offset[1]];
    return [(a[0] + s[0] * t.width) / n, (a[1] + s[1] * t.height) / r];
  }
  TO_REMOVE__setReadyCallback(t) {
    __privateSet(this, _f, t);
  }
  TO_REMOVE__startIfReady() {
    this.isConfigured() && (this.viewports.some((t) => !t.TO_REMOVE__ready) || __privateGet(this, _f) && (__privateGet(this, _f).call(this), __privateSet(this, _f, null)));
  }
}, _t20 = new WeakMap(), _i19 = new WeakMap(), _e16 = new WeakMap(), _n16 = new WeakMap(), _r11 = new WeakMap(), _o7 = new WeakMap(), _s5 = new WeakMap(), _a26 = new WeakMap(), _c3 = new WeakMap(), _h4 = new WeakMap(), _i_instances3 = new WeakSet(), l_fn2 = async function() {
  return await this.session.registerClient(), await __privateGet(this, _t20).connect({ session: this.session }), __privateMethod(this, _i_instances3, d_fn3).call(this), this;
}, d_fn3 = function() {
  __privateGet(this, _t20).addEventListener("on-disconnected", this.session._onDisconnected), __privateGet(this, _t20).addEventListener("on-inactivity-warning", this.session._onInactivityWarning), __privateGet(this, _t20).addEventListener("on-activity-detected", this.session._onActivityDetected), __privateGet(this, _t20).addEventListener("on-frame-received", __privateGet(this, _u)), __privateGet(this, _t20).addEventListener("on-audio-received", __privateGet(this, _p)), __privateGet(this, _t20).addEventListener("on-entities-updated", __privateGet(this, _y)), __privateGet(this, _t20).addEventListener("on-entity-visibility-changed", this.scene._onEntityVisibilityChanged), __privateGet(this, _t20).addEventListener("on-script-event-received", this.scene._onScriptEventReceived);
}, m_fn3 = function() {
  __privateGet(this, _t20).removeEventListener("on-disconnected", this.session._onDisconnected), __privateGet(this, _t20).removeEventListener("on-inactivity-warning", this.session._onInactivityWarning), __privateGet(this, _t20).removeEventListener("on-activity-detected", this.session._onActivityDetected), __privateGet(this, _t20).removeEventListener("on-frame-received", __privateGet(this, _u)), __privateGet(this, _t20).removeEventListener("on-audio-received", __privateGet(this, _p)), __privateGet(this, _t20).removeEventListener("on-entities-updated", __privateGet(this, _y)), __privateGet(this, _t20).removeEventListener("on-entity-visibility-changed", this.scene._onEntityVisibilityChanged), __privateGet(this, _t20).removeEventListener("on-script-event-received", this.scene._onScriptEventReceived);
}, _u = new WeakMap(), _p = new WeakMap(), _y = new WeakMap(), __fn = function({ updatesPerSecond: t = 30, broadcastsPerSecond: e = 1 }) {
  __privateSet(this, _c3, setInterval(() => {
    let n = this.scene._entity_registry._getEntitiesToUpdate();
    n.length > 0 && __privateGet(this, _t20).updateEntities({ update_commands: n, persist: false });
  }, 1e3 / t)), __privateSet(this, _h4, setInterval(() => {
    let n = this.scene._entity_registry._getEntitiesToPersist();
    n.length > 0 && __privateGet(this, _t20).updateEntities({ update_commands: n, persist: true });
  }, 1e3 / e));
}, _f = new WeakMap(), _v = new WeakMap(), __publicField(_a25, "_api_url", "https://api.3dverse.com/app/v1"), _a25);
var vi = class extends Event {
  constructor({ hovered_entity: t, ws_position: e, ws_normal: n }) {
    super("on-entity-hovered");
    __publicField(this, "hovered_entity");
    __publicField(this, "ws_position");
    __publicField(this, "ws_normal");
    this.hovered_entity = t, this.ws_position = e, this.ws_normal = n;
  }
};
var gi = class extends Event {
  constructor({ picked_entity: t, ws_position: e, ws_normal: n }) {
    super("on-entity-picked");
    __publicField(this, "picked_entity");
    __publicField(this, "ws_position");
    __publicField(this, "ws_normal");
    this.picked_entity = t, this.ws_position = e, this.ws_normal = n;
  }
};
var _Ir_instances, t_fn3, _i20, _e17, _n17, _r12, _o8, _s6, _a27, _c4, _h5, _l2, _d, _m, _a28;
var Ir = (_a28 = class extends mt {
  constructor({ core: t, rendering_surface: e, options: n }) {
    super();
    __privateAdd(this, _Ir_instances);
    __publicField(this, "TO_REMOVE__ready", false);
    __privateAdd(this, _i20);
    __privateAdd(this, _e17);
    __privateAdd(this, _n17, []);
    __privateAdd(this, _r12, null);
    __privateAdd(this, _o8, null);
    __privateAdd(this, _s6, 0);
    __privateAdd(this, _a27);
    __privateAdd(this, _c4, -1);
    __privateAdd(this, _h5, false);
    __privateAdd(this, _l2, false);
    __publicField(this, "is_camera_controlled_by_current_client", false);
    __privateAdd(this, _d, async (t) => {
      var _a42;
      t.stopPropagation();
      let e = null, n = (_a42 = __privateGet(this, _i20).session.current_client) == null ? void 0 : _a42._cursor_data;
      if (n) {
        let r = await __privateGet(this, _i20).scene._findEntity({ entity_rtid: n.hovered_entity_rtid });
        r && (e = { entity: r, ws_position: n.hovered_ws_position, ws_normal: n.hovered_ws_normal });
      }
      this._dispatchEvent(new gi({ picked_entity: (e == null ? void 0 : e.entity) ?? null, ws_position: (e == null ? void 0 : e.ws_position) ?? null, ws_normal: (e == null ? void 0 : e.ws_normal) ?? null }));
    });
    __privateAdd(this, _m, async () => {
      var _a42;
      let t = null, e = (_a42 = __privateGet(this, _i20).session.current_client) == null ? void 0 : _a42._cursor_data;
      if (e) {
        let n = await __privateGet(this, _i20).scene._findEntity({ entity_rtid: e.hovered_entity_rtid });
        n && (t = { entity: n, ws_position: e.hovered_ws_position, ws_normal: e.hovered_ws_normal });
      }
      this._dispatchEvent(new vi({ hovered_entity: (t == null ? void 0 : t.entity) ?? null, ws_position: (t == null ? void 0 : t.ws_position) ?? null, ws_normal: (t == null ? void 0 : t.ws_normal) ?? null }));
    });
    __privateSet(this, _i20, t), __privateSet(this, _e17, e), __privateSet(this, _a27, new dt((n == null ? void 0 : n.rect) ?? { left: 0, top: 0, width: 1, height: 1 })), __privateSet(this, _c4, (n == null ? void 0 : n.render_target_index) ?? -1), __privateSet(this, _s6, (n == null ? void 0 : n.z_index) ?? 0), __privateSet(this, _r12, (n == null ? void 0 : n.dom_element) ?? null);
  }
  get rendering_surface() {
    return __privateGet(this, _e17);
  }
  get camera_projection() {
    return __privateGet(this, _o8);
  }
  get width() {
    return __privateGet(this, _a27).width * this.rendering_surface.width;
  }
  get height() {
    return __privateGet(this, _a27).height * this.rendering_surface.height;
  }
  get offset() {
    return [__privateGet(this, _a27).left * this.rendering_surface.width, __privateGet(this, _a27).top * this.rendering_surface.height];
  }
  get aspect_ratio() {
    return this.height > 0 ? this.width / this.height : 1;
  }
  get z_index() {
    return __privateGet(this, _s6);
  }
  get render_target_index() {
    return __privateGet(this, _c4);
  }
  get relative_rect() {
    return __privateGet(this, _a27);
  }
  get dom_element() {
    if (!__privateGet(this, _r12)) throw new Error("No DOM element set on viewport");
    return __privateGet(this, _r12);
  }
  get overlay_dom_elements() {
    return __privateGet(this, _n17).map((t) => t.container).filter(Boolean);
  }
  set z_index(t) {
    __privateSet(this, _s6, t), __privateGet(this, _i20)._refreshViewports();
  }
  set relative_rect(t) {
    __privateSet(this, _a27, t), __privateGet(this, _i20)._refreshViewports();
  }
  set camera_projection(t) {
    __privateSet(this, _o8, t), __privateGet(this, _i20)._refreshViewports(), __privateMethod(this, _Ir_instances, t_fn3).call(this);
  }
  set render_target_index(t) {
    __privateSet(this, _c4, t), __privateGet(this, _i20)._refreshViewports();
  }
  isValid() {
    return __privateGet(this, _o8) !== null;
  }
  release() {
    this.deactivatePicking(), this.deactivateHovering();
  }
  activatePicking() {
    __privateGet(this, _h5) || (this.dom_element.addEventListener("click", __privateGet(this, _d)), __privateGet(this, _i20).devices.mouse.enableOnViewport({ viewport: this }), __privateSet(this, _h5, true));
  }
  deactivatePicking() {
    __privateGet(this, _h5) && (this.dom_element.removeEventListener("click", __privateGet(this, _d)), __privateGet(this, _i20).devices.mouse.disableFromViewport({ viewport: this }), __privateSet(this, _h5, false));
  }
  activateHovering() {
    __privateGet(this, _l2) || (this.dom_element.addEventListener("pointermove", __privateGet(this, _m)), __privateGet(this, _i20).devices.mouse.enableOnViewport({ viewport: this }), __privateSet(this, _l2, true));
  }
  deactivateHovering() {
    __privateGet(this, _l2) && (this.dom_element.removeEventListener("pointermove", __privateGet(this, _m)), __privateGet(this, _i20).devices.mouse.disableFromViewport({ viewport: this }), __privateSet(this, _l2, false));
  }
  async castScreenSpaceRay({ screen_position: t, mode: e = "None" }) {
    if (!__privateGet(this, _o8)) return null;
    let n = await __privateGet(this, _i20)._castScreenSpaceRay({ screenSpaceRayQuery: { camera_rtid: __privateGet(this, _o8).camera_entity.rtid, pos: t, mode: e } });
    if (n.entity_rtid === null) return null;
    let r = await __privateGet(this, _i20).scene._findEntity({ entity_rtid: n.entity_rtid });
    return r === null ? null : { entity: r, world_position: n.position, world_normal: n.normal };
  }
  projectWorldToScreen({ world_position: t, out_screen_position: e = L.create() }) {
    if (!__privateGet(this, _o8)) throw new Error("No camera set on viewport");
    let n = __privateGet(this, _o8).projectWorldToClip({ world_position: t, out_clip_position: e }), r = n;
    return r[0] = (n[0] + 1) * this.width * 0.5, r[1] = (-n[1] + 1) * this.height * 0.5, r;
  }
  addOverlay({ overlay: t }) {
    if (__privateGet(this, _n17).includes(t)) {
      console.warn("Attempting to add an overlay that is already present", t);
      return;
    }
    __privateGet(this, _n17).push(t), this.rendering_surface.redrawLastFrame();
  }
  removeOverlay({ overlay: t }) {
    t.release();
    let e = __privateGet(this, _n17).indexOf(t);
    if (e === -1) {
      console.warn("Attempting to remove an overlay that is not present", t);
      return;
    }
    __privateGet(this, _n17).splice(e, 1), this.rendering_surface.redrawLastFrame();
  }
  _drawOverlays() {
    let t = null;
    for (let e of __privateGet(this, _n17)) {
      let n = e.draw({ output_canvas: t });
      t || (t = n);
    }
    return t;
  }
  _onResize() {
    var _a42;
    (_a42 = this.camera_projection) == null ? void 0 : _a42.updateProjectionMatrix();
    for (let t of __privateGet(this, _n17)) t.resize({ width: this.width, height: this.height });
  }
  getScreenPositionFromEvent({ event: t }) {
    return this._getScreenPosition({ position: [t.clientX, t.clientY] });
  }
  _getScreenPosition({ position: t }) {
    let e = this.dom_element.getBoundingClientRect(), n = (t[0] - e.left) / e.width, r = (t[1] - e.top) / e.height;
    return [n, r];
  }
}, _Ir_instances = new WeakSet(), t_fn3 = function() {
  this.TO_REMOVE__ready = true, __privateGet(this, _i20).TO_REMOVE__startIfReady();
}, _i20 = new WeakMap(), _e17 = new WeakMap(), _n17 = new WeakMap(), _r12 = new WeakMap(), _o8 = new WeakMap(), _s6 = new WeakMap(), _a27 = new WeakMap(), _c4 = new WeakMap(), _h5 = new WeakMap(), _l2 = new WeakMap(), _d = new WeakMap(), _m = new WeakMap(), _a28);
var kt = "srgb";
var wn = "srgb-linear";
var Zt = class i2 {
  constructor(t = 0, e = 0) {
    i2.prototype.isVector2 = true, this.x = t, this.y = e;
  }
  get width() {
    return this.x;
  }
  set width(t) {
    this.x = t;
  }
  get height() {
    return this.y;
  }
  set height(t) {
    this.y = t;
  }
  set(t, e) {
    return this.x = t, this.y = e, this;
  }
  setScalar(t) {
    return this.x = t, this.y = t, this;
  }
  setX(t) {
    return this.x = t, this;
  }
  setY(t) {
    return this.y = t, this;
  }
  setComponent(t, e) {
    switch (t) {
      case 0:
        this.x = e;
        break;
      case 1:
        this.y = e;
        break;
      default:
        throw new Error("index is out of range: " + t);
    }
    return this;
  }
  getComponent(t) {
    switch (t) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + t);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this;
  }
  add(t) {
    return this.x += t.x, this.y += t.y, this;
  }
  addScalar(t) {
    return this.x += t, this.y += t, this;
  }
  addVectors(t, e) {
    return this.x = t.x + e.x, this.y = t.y + e.y, this;
  }
  addScaledVector(t, e) {
    return this.x += t.x * e, this.y += t.y * e, this;
  }
  sub(t) {
    return this.x -= t.x, this.y -= t.y, this;
  }
  subScalar(t) {
    return this.x -= t, this.y -= t, this;
  }
  subVectors(t, e) {
    return this.x = t.x - e.x, this.y = t.y - e.y, this;
  }
  multiply(t) {
    return this.x *= t.x, this.y *= t.y, this;
  }
  multiplyScalar(t) {
    return this.x *= t, this.y *= t, this;
  }
  divide(t) {
    return this.x /= t.x, this.y /= t.y, this;
  }
  divideScalar(t) {
    return this.multiplyScalar(1 / t);
  }
  applyMatrix3(t) {
    let e = this.x, n = this.y, r = t.elements;
    return this.x = r[0] * e + r[3] * n + r[6], this.y = r[1] * e + r[4] * n + r[7], this;
  }
  min(t) {
    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this;
  }
  max(t) {
    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this;
  }
  clamp(t, e) {
    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this;
  }
  clampScalar(t, e) {
    return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this;
  }
  clampLength(t, e) {
    let n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this;
  }
  dot(t) {
    return this.x * t.x + this.y * t.y;
  }
  cross(t) {
    return this.x * t.y - this.y * t.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  distanceTo(t) {
    return Math.sqrt(this.distanceToSquared(t));
  }
  distanceToSquared(t) {
    let e = this.x - t.x, n = this.y - t.y;
    return e * e + n * n;
  }
  manhattanDistanceTo(t) {
    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);
  }
  setLength(t) {
    return this.normalize().multiplyScalar(t);
  }
  lerp(t, e) {
    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this;
  }
  lerpVectors(t, e, n) {
    return this.x = t.x + (e.x - t.x) * n, this.y = t.y + (e.y - t.y) * n, this;
  }
  equals(t) {
    return t.x === this.x && t.y === this.y;
  }
  fromArray(t, e = 0) {
    return this.x = t[e], this.y = t[e + 1], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.x, t[e + 1] = this.y, t;
  }
  rotateAround(t, e) {
    let n = Math.cos(e), r = Math.sin(e), s = this.x - t.x, o = this.y - t.y;
    return this.x = s * n - o * r + t.x, this.y = s * r + o * n + t.y, this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y;
  }
};
var Gl = Math.PI / 180;
var ql = 180 / Math.PI;
function ct(i8, t, e) {
  return Math.max(t, Math.min(e, i8));
}
function Rh(i8, t) {
  return (i8 % t + t) % t;
}
function yn(i8, t, e) {
  return (1 - e) * i8 + e * t;
}
var bt = class {
  constructor(t = 0, e = 0, n = 0, r = 1) {
    this.isQuaternion = true, this._x = t, this._y = e, this._z = n, this._w = r;
  }
  static slerpFlat(t, e, n, r, s, o, a) {
    let h = n[r + 0], c = n[r + 1], l = n[r + 2], d = n[r + 3], m = s[o + 0], u = s[o + 1], p = s[o + 2], f = s[o + 3];
    if (a === 0) {
      t[e + 0] = h, t[e + 1] = c, t[e + 2] = l, t[e + 3] = d;
      return;
    }
    if (a === 1) {
      t[e + 0] = m, t[e + 1] = u, t[e + 2] = p, t[e + 3] = f;
      return;
    }
    if (d !== f || h !== m || c !== u || l !== p) {
      let _ = 1 - a, y = h * m + c * u + l * p + d * f, M = y >= 0 ? 1 : -1, v = 1 - y * y;
      if (v > Number.EPSILON) {
        let E = Math.sqrt(v), w = Math.atan2(E, y * M);
        _ = Math.sin(_ * w) / E, a = Math.sin(a * w) / E;
      }
      let x = a * M;
      if (h = h * _ + m * x, c = c * _ + u * x, l = l * _ + p * x, d = d * _ + f * x, _ === 1 - a) {
        let E = 1 / Math.sqrt(h * h + c * c + l * l + d * d);
        h *= E, c *= E, l *= E, d *= E;
      }
    }
    t[e] = h, t[e + 1] = c, t[e + 2] = l, t[e + 3] = d;
  }
  static multiplyQuaternionsFlat(t, e, n, r, s, o) {
    let a = n[r], h = n[r + 1], c = n[r + 2], l = n[r + 3], d = s[o], m = s[o + 1], u = s[o + 2], p = s[o + 3];
    return t[e] = a * p + l * d + h * u - c * m, t[e + 1] = h * p + l * m + c * d - a * u, t[e + 2] = c * p + l * u + a * m - h * d, t[e + 3] = l * p - a * d - h * m - c * u, t;
  }
  get x() {
    return this._x;
  }
  set x(t) {
    this._x = t, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(t) {
    this._y = t, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(t) {
    this._z = t, this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(t) {
    this._w = t, this._onChangeCallback();
  }
  set(t, e, n, r) {
    return this._x = t, this._y = e, this._z = n, this._w = r, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(t) {
    return this._x = t.x, this._y = t.y, this._z = t.z, this._w = t.w, this._onChangeCallback(), this;
  }
  setFromEuler(t, e) {
    let n = t._x, r = t._y, s = t._z, o = t._order, a = Math.cos, h = Math.sin, c = a(n / 2), l = a(r / 2), d = a(s / 2), m = h(n / 2), u = h(r / 2), p = h(s / 2);
    switch (o) {
      case "XYZ":
        this._x = m * l * d + c * u * p, this._y = c * u * d - m * l * p, this._z = c * l * p + m * u * d, this._w = c * l * d - m * u * p;
        break;
      case "YXZ":
        this._x = m * l * d + c * u * p, this._y = c * u * d - m * l * p, this._z = c * l * p - m * u * d, this._w = c * l * d + m * u * p;
        break;
      case "ZXY":
        this._x = m * l * d - c * u * p, this._y = c * u * d + m * l * p, this._z = c * l * p + m * u * d, this._w = c * l * d - m * u * p;
        break;
      case "ZYX":
        this._x = m * l * d - c * u * p, this._y = c * u * d + m * l * p, this._z = c * l * p - m * u * d, this._w = c * l * d + m * u * p;
        break;
      case "YZX":
        this._x = m * l * d + c * u * p, this._y = c * u * d + m * l * p, this._z = c * l * p - m * u * d, this._w = c * l * d - m * u * p;
        break;
      case "XZY":
        this._x = m * l * d - c * u * p, this._y = c * u * d - m * l * p, this._z = c * l * p + m * u * d, this._w = c * l * d + m * u * p;
        break;
      default:
        console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
    }
    return e !== false && this._onChangeCallback(), this;
  }
  setFromAxisAngle(t, e) {
    let n = e / 2, r = Math.sin(n);
    return this._x = t.x * r, this._y = t.y * r, this._z = t.z * r, this._w = Math.cos(n), this._onChangeCallback(), this;
  }
  setFromRotationMatrix(t) {
    let e = t.elements, n = e[0], r = e[4], s = e[8], o = e[1], a = e[5], h = e[9], c = e[2], l = e[6], d = e[10], m = n + a + d;
    if (m > 0) {
      let u = 0.5 / Math.sqrt(m + 1);
      this._w = 0.25 / u, this._x = (l - h) * u, this._y = (s - c) * u, this._z = (o - r) * u;
    } else if (n > a && n > d) {
      let u = 2 * Math.sqrt(1 + n - a - d);
      this._w = (l - h) / u, this._x = 0.25 * u, this._y = (r + o) / u, this._z = (s + c) / u;
    } else if (a > d) {
      let u = 2 * Math.sqrt(1 + a - n - d);
      this._w = (s - c) / u, this._x = (r + o) / u, this._y = 0.25 * u, this._z = (h + l) / u;
    } else {
      let u = 2 * Math.sqrt(1 + d - n - a);
      this._w = (o - r) / u, this._x = (s + c) / u, this._y = (h + l) / u, this._z = 0.25 * u;
    }
    return this._onChangeCallback(), this;
  }
  setFromUnitVectors(t, e) {
    let n = t.dot(e) + 1;
    return n < Number.EPSILON ? (n = 0, Math.abs(t.x) > Math.abs(t.z) ? (this._x = -t.y, this._y = t.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -t.z, this._z = t.y, this._w = n)) : (this._x = t.y * e.z - t.z * e.y, this._y = t.z * e.x - t.x * e.z, this._z = t.x * e.y - t.y * e.x, this._w = n), this.normalize();
  }
  angleTo(t) {
    return 2 * Math.acos(Math.abs(ct(this.dot(t), -1, 1)));
  }
  rotateTowards(t, e) {
    let n = this.angleTo(t);
    if (n === 0) return this;
    let r = Math.min(1, e / n);
    return this.slerp(t, r), this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
  }
  dot(t) {
    return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w;
  }
  lengthSq() {
    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
  }
  length() {
    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
  }
  normalize() {
    let t = this.length();
    return t === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (t = 1 / t, this._x = this._x * t, this._y = this._y * t, this._z = this._z * t, this._w = this._w * t), this._onChangeCallback(), this;
  }
  multiply(t) {
    return this.multiplyQuaternions(this, t);
  }
  premultiply(t) {
    return this.multiplyQuaternions(t, this);
  }
  multiplyQuaternions(t, e) {
    let n = t._x, r = t._y, s = t._z, o = t._w, a = e._x, h = e._y, c = e._z, l = e._w;
    return this._x = n * l + o * a + r * c - s * h, this._y = r * l + o * h + s * a - n * c, this._z = s * l + o * c + n * h - r * a, this._w = o * l - n * a - r * h - s * c, this._onChangeCallback(), this;
  }
  slerp(t, e) {
    if (e === 0) return this;
    if (e === 1) return this.copy(t);
    let n = this._x, r = this._y, s = this._z, o = this._w, a = o * t._w + n * t._x + r * t._y + s * t._z;
    if (a < 0 ? (this._w = -t._w, this._x = -t._x, this._y = -t._y, this._z = -t._z, a = -a) : this.copy(t), a >= 1) return this._w = o, this._x = n, this._y = r, this._z = s, this;
    let h = 1 - a * a;
    if (h <= Number.EPSILON) {
      let u = 1 - e;
      return this._w = u * o + e * this._w, this._x = u * n + e * this._x, this._y = u * r + e * this._y, this._z = u * s + e * this._z, this.normalize(), this._onChangeCallback(), this;
    }
    let c = Math.sqrt(h), l = Math.atan2(c, a), d = Math.sin((1 - e) * l) / c, m = Math.sin(e * l) / c;
    return this._w = o * d + this._w * m, this._x = n * d + this._x * m, this._y = r * d + this._y * m, this._z = s * d + this._z * m, this._onChangeCallback(), this;
  }
  slerpQuaternions(t, e, n) {
    return this.copy(t).slerp(e, n);
  }
  random() {
    let t = Math.random(), e = Math.sqrt(1 - t), n = Math.sqrt(t), r = 2 * Math.PI * Math.random(), s = 2 * Math.PI * Math.random();
    return this.set(e * Math.cos(r), n * Math.sin(s), n * Math.cos(s), e * Math.sin(r));
  }
  equals(t) {
    return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w;
  }
  fromArray(t, e = 0) {
    return this._x = t[e], this._y = t[e + 1], this._z = t[e + 2], this._w = t[e + 3], this._onChangeCallback(), this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._w, t;
  }
  _onChange(t) {
    return this._onChangeCallback = t, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._w;
  }
};
var D = class i3 {
  constructor(t = 0, e = 0, n = 0) {
    i3.prototype.isVector3 = true, this.x = t, this.y = e, this.z = n;
  }
  set(t, e, n) {
    return n === void 0 && (n = this.z), this.x = t, this.y = e, this.z = n, this;
  }
  setScalar(t) {
    return this.x = t, this.y = t, this.z = t, this;
  }
  setX(t) {
    return this.x = t, this;
  }
  setY(t) {
    return this.y = t, this;
  }
  setZ(t) {
    return this.z = t, this;
  }
  setComponent(t, e) {
    switch (t) {
      case 0:
        this.x = e;
        break;
      case 1:
        this.y = e;
        break;
      case 2:
        this.z = e;
        break;
      default:
        throw new Error("index is out of range: " + t);
    }
    return this;
  }
  getComponent(t) {
    switch (t) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + t);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this.z = t.z, this;
  }
  add(t) {
    return this.x += t.x, this.y += t.y, this.z += t.z, this;
  }
  addScalar(t) {
    return this.x += t, this.y += t, this.z += t, this;
  }
  addVectors(t, e) {
    return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this;
  }
  addScaledVector(t, e) {
    return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this;
  }
  sub(t) {
    return this.x -= t.x, this.y -= t.y, this.z -= t.z, this;
  }
  subScalar(t) {
    return this.x -= t, this.y -= t, this.z -= t, this;
  }
  subVectors(t, e) {
    return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this;
  }
  multiply(t) {
    return this.x *= t.x, this.y *= t.y, this.z *= t.z, this;
  }
  multiplyScalar(t) {
    return this.x *= t, this.y *= t, this.z *= t, this;
  }
  multiplyVectors(t, e) {
    return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this;
  }
  applyEuler(t) {
    return this.applyQuaternion(Nr.setFromEuler(t));
  }
  applyAxisAngle(t, e) {
    return this.applyQuaternion(Nr.setFromAxisAngle(t, e));
  }
  applyMatrix3(t) {
    let e = this.x, n = this.y, r = this.z, s = t.elements;
    return this.x = s[0] * e + s[3] * n + s[6] * r, this.y = s[1] * e + s[4] * n + s[7] * r, this.z = s[2] * e + s[5] * n + s[8] * r, this;
  }
  applyNormalMatrix(t) {
    return this.applyMatrix3(t).normalize();
  }
  applyMatrix4(t) {
    let e = this.x, n = this.y, r = this.z, s = t.elements, o = 1 / (s[3] * e + s[7] * n + s[11] * r + s[15]);
    return this.x = (s[0] * e + s[4] * n + s[8] * r + s[12]) * o, this.y = (s[1] * e + s[5] * n + s[9] * r + s[13]) * o, this.z = (s[2] * e + s[6] * n + s[10] * r + s[14]) * o, this;
  }
  applyQuaternion(t) {
    let e = this.x, n = this.y, r = this.z, s = t.x, o = t.y, a = t.z, h = t.w, c = h * e + o * r - a * n, l = h * n + a * e - s * r, d = h * r + s * n - o * e, m = -s * e - o * n - a * r;
    return this.x = c * h + m * -s + l * -a - d * -o, this.y = l * h + m * -o + d * -s - c * -a, this.z = d * h + m * -a + c * -o - l * -s, this;
  }
  transformDirection(t) {
    let e = this.x, n = this.y, r = this.z, s = t.elements;
    return this.x = s[0] * e + s[4] * n + s[8] * r, this.y = s[1] * e + s[5] * n + s[9] * r, this.z = s[2] * e + s[6] * n + s[10] * r, this.normalize();
  }
  divide(t) {
    return this.x /= t.x, this.y /= t.y, this.z /= t.z, this;
  }
  divideScalar(t) {
    return this.multiplyScalar(1 / t);
  }
  min(t) {
    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this;
  }
  max(t) {
    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this;
  }
  clamp(t, e) {
    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this;
  }
  clampScalar(t, e) {
    return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this.z = Math.max(t, Math.min(e, this.z)), this;
  }
  clampLength(t, e) {
    let n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
  }
  dot(t) {
    return this.x * t.x + this.y * t.y + this.z * t.z;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(t) {
    return this.normalize().multiplyScalar(t);
  }
  lerp(t, e) {
    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this;
  }
  lerpVectors(t, e, n) {
    return this.x = t.x + (e.x - t.x) * n, this.y = t.y + (e.y - t.y) * n, this.z = t.z + (e.z - t.z) * n, this;
  }
  cross(t) {
    return this.crossVectors(this, t);
  }
  crossVectors(t, e) {
    let n = t.x, r = t.y, s = t.z, o = e.x, a = e.y, h = e.z;
    return this.x = r * h - s * a, this.y = s * o - n * h, this.z = n * a - r * o, this;
  }
  projectOnVector(t) {
    let e = t.lengthSq();
    if (e === 0) return this.set(0, 0, 0);
    let n = t.dot(this) / e;
    return this.copy(t).multiplyScalar(n);
  }
  projectOnPlane(t) {
    return vn.copy(this).projectOnVector(t), this.sub(vn);
  }
  reflect(t) {
    return this.sub(vn.copy(t).multiplyScalar(2 * this.dot(t)));
  }
  angleTo(t) {
    let e = Math.sqrt(this.lengthSq() * t.lengthSq());
    if (e === 0) return Math.PI / 2;
    let n = this.dot(t) / e;
    return Math.acos(ct(n, -1, 1));
  }
  distanceTo(t) {
    return Math.sqrt(this.distanceToSquared(t));
  }
  distanceToSquared(t) {
    let e = this.x - t.x, n = this.y - t.y, r = this.z - t.z;
    return e * e + n * n + r * r;
  }
  manhattanDistanceTo(t) {
    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z);
  }
  setFromSpherical(t) {
    return this.setFromSphericalCoords(t.radius, t.phi, t.theta);
  }
  setFromSphericalCoords(t, e, n) {
    let r = Math.sin(e) * t;
    return this.x = r * Math.sin(n), this.y = Math.cos(e) * t, this.z = r * Math.cos(n), this;
  }
  setFromCylindrical(t) {
    return this.setFromCylindricalCoords(t.radius, t.theta, t.y);
  }
  setFromCylindricalCoords(t, e, n) {
    return this.x = t * Math.sin(e), this.y = n, this.z = t * Math.cos(e), this;
  }
  setFromMatrixPosition(t) {
    let e = t.elements;
    return this.x = e[12], this.y = e[13], this.z = e[14], this;
  }
  setFromMatrixScale(t) {
    let e = this.setFromMatrixColumn(t, 0).length(), n = this.setFromMatrixColumn(t, 1).length(), r = this.setFromMatrixColumn(t, 2).length();
    return this.x = e, this.y = n, this.z = r, this;
  }
  setFromMatrixColumn(t, e) {
    return this.fromArray(t.elements, e * 4);
  }
  setFromMatrix3Column(t, e) {
    return this.fromArray(t.elements, e * 3);
  }
  setFromEuler(t) {
    return this.x = t._x, this.y = t._y, this.z = t._z, this;
  }
  equals(t) {
    return t.x === this.x && t.y === this.y && t.z === this.z;
  }
  fromArray(t, e = 0) {
    return this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
  }
  randomDirection() {
    let t = (Math.random() - 0.5) * 2, e = Math.random() * Math.PI * 2, n = Math.sqrt(1 - t ** 2);
    return this.x = n * Math.cos(e), this.y = n * Math.sin(e), this.z = t, this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z;
  }
};
var vn = new D();
var Nr = new bt();
var Ve = class {
  constructor(t = new D(1 / 0, 1 / 0, 1 / 0), e = new D(-1 / 0, -1 / 0, -1 / 0)) {
    this.isBox3 = true, this.min = t, this.max = e;
  }
  set(t, e) {
    return this.min.copy(t), this.max.copy(e), this;
  }
  setFromArray(t) {
    let e = 1 / 0, n = 1 / 0, r = 1 / 0, s = -1 / 0, o = -1 / 0, a = -1 / 0;
    for (let h = 0, c = t.length; h < c; h += 3) {
      let l = t[h], d = t[h + 1], m = t[h + 2];
      l < e && (e = l), d < n && (n = d), m < r && (r = m), l > s && (s = l), d > o && (o = d), m > a && (a = m);
    }
    return this.min.set(e, n, r), this.max.set(s, o, a), this;
  }
  setFromPoints(t) {
    this.makeEmpty();
    for (let e = 0, n = t.length; e < n; e++) this.expandByPoint(t[e]);
    return this;
  }
  setFromCenterAndSize(t, e) {
    let n = Fe.copy(e).multiplyScalar(0.5);
    return this.min.copy(t).sub(n), this.max.copy(t).add(n), this;
  }
  setFromObject(t, e = false) {
    return this.makeEmpty(), this.expandByObject(t, e);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(t) {
    return this.min.copy(t.min), this.max.copy(t.max), this;
  }
  makeEmpty() {
    return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
  }
  isEmpty() {
    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
  }
  getCenter(t = new D()) {
    return this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(t = new D()) {
    return this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min);
  }
  expandByPoint(t) {
    return this.min.min(t), this.max.max(t), this;
  }
  expandByVector(t) {
    return this.min.sub(t), this.max.add(t), this;
  }
  expandByScalar(t) {
    return this.min.addScalar(-t), this.max.addScalar(t), this;
  }
  containsPoint(t) {
    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z);
  }
  containsBox(t) {
    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z;
  }
  getParameter(t, e) {
    return e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z));
  }
  intersectsBox(t) {
    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z);
  }
  intersectsSphere(t) {
    return this.clampPoint(t.center, Fe), Fe.distanceToSquared(t.center) <= t.radius * t.radius;
  }
  intersectsPlane(t) {
    let e, n;
    return t.normal.x > 0 ? (e = t.normal.x * this.min.x, n = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x, n = t.normal.x * this.min.x), t.normal.y > 0 ? (e += t.normal.y * this.min.y, n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y, n += t.normal.y * this.min.y), t.normal.z > 0 ? (e += t.normal.z * this.min.z, n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z, n += t.normal.z * this.min.z), e <= -t.constant && n >= -t.constant;
  }
  intersectsTriangle(t) {
    if (this.isEmpty()) return false;
    this.getCenter(Le), xi.subVectors(this.max, Le), pe.subVectors(t.a, Le), _e18.subVectors(t.b, Le), fe.subVectors(t.c, Le), jt.subVectors(_e18, pe), Xt.subVectors(fe, _e18), ne.subVectors(pe, fe);
    let e = [0, -jt.z, jt.y, 0, -Xt.z, Xt.y, 0, -ne.z, ne.y, jt.z, 0, -jt.x, Xt.z, 0, -Xt.x, ne.z, 0, -ne.x, -jt.y, jt.x, 0, -Xt.y, Xt.x, 0, -ne.y, ne.x, 0];
    return !gn(e, pe, _e18, fe, xi) || (e = [1, 0, 0, 0, 1, 0, 0, 0, 1], !gn(e, pe, _e18, fe, xi)) ? false : (Ei.crossVectors(jt, Xt), e = [Ei.x, Ei.y, Ei.z], gn(e, pe, _e18, fe, xi));
  }
  clampPoint(t, e) {
    return e.copy(t).clamp(this.min, this.max);
  }
  distanceToPoint(t) {
    return Fe.copy(t).clamp(this.min, this.max).sub(t).length();
  }
  getBoundingSphere(t) {
    return this.getCenter(t.center), t.radius = this.getSize(Fe).length() * 0.5, t;
  }
  intersect(t) {
    return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this;
  }
  union(t) {
    return this.min.min(t.min), this.max.max(t.max), this;
  }
  applyMatrix4(t) {
    return this.isEmpty() ? this : (Ut[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t), Ut[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t), Ut[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t), Ut[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t), Ut[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t), Ut[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t), Ut[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t), Ut[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t), this.setFromPoints(Ut), this);
  }
  translate(t) {
    return this.min.add(t), this.max.add(t), this;
  }
  equals(t) {
    return t.min.equals(this.min) && t.max.equals(this.max);
  }
};
var Ut = [new D(), new D(), new D(), new D(), new D(), new D(), new D(), new D()];
var Fe = new D();
var pe = new D();
var _e18 = new D();
var fe = new D();
var jt = new D();
var Xt = new D();
var ne = new D();
var Le = new D();
var xi = new D();
var Ei = new D();
var re = new D();
function gn(i8, t, e, n, r) {
  for (let s = 0, o = i8.length - 3; s <= o; s += 3) {
    re.fromArray(i8, s);
    let a = r.x * Math.abs(re.x) + r.y * Math.abs(re.y) + r.z * Math.abs(re.z), h = t.dot(re), c = e.dot(re), l = n.dot(re);
    if (Math.max(-Math.max(h, c, l), Math.min(h, c, l)) > a) return false;
  }
  return true;
}
function Ti(i8) {
  return i8 < 0.04045 ? i8 * 0.0773993808 : Math.pow(i8 * 0.9478672986 + 0.0521327014, 2.4);
}
function bi(i8) {
  return i8 < 31308e-7 ? i8 * 12.92 : 1.055 * Math.pow(i8, 0.41666) - 0.055;
}
var xn = { [kt]: { [wn]: Ti }, [wn]: { [kt]: bi } };
var at = { legacyMode: true, get workingColorSpace() {
  return wn;
}, set workingColorSpace(i8) {
  console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
}, convert: function(i8, t, e) {
  if (this.legacyMode || t === e || !t || !e) return i8;
  if (xn[t] && xn[t][e] !== void 0) {
    let n = xn[t][e];
    return i8.r = n(i8.r), i8.g = n(i8.g), i8.b = n(i8.b), i8;
  }
  throw new Error("Unsupported color space conversion.");
}, fromWorkingColorSpace: function(i8, t) {
  return this.convert(i8, this.workingColorSpace, t);
}, toWorkingColorSpace: function(i8, t) {
  return this.convert(i8, t, this.workingColorSpace);
} };
var Yr = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 };
var it = { r: 0, g: 0, b: 0 };
var Mt = { h: 0, s: 0, l: 0 };
var wi = { h: 0, s: 0, l: 0 };
function En(i8, t, e) {
  return e < 0 && (e += 1), e > 1 && (e -= 1), e < 1 / 6 ? i8 + (t - i8) * 6 * e : e < 1 / 2 ? t : e < 2 / 3 ? i8 + (t - i8) * 6 * (2 / 3 - e) : i8;
}
function Ci(i8, t) {
  return t.r = i8.r, t.g = i8.g, t.b = i8.b, t;
}
var Cn = class {
  constructor(t, e, n) {
    return this.isColor = true, this.r = 1, this.g = 1, this.b = 1, e === void 0 && n === void 0 ? this.set(t) : this.setRGB(t, e, n);
  }
  set(t) {
    return t && t.isColor ? this.copy(t) : typeof t == "number" ? this.setHex(t) : typeof t == "string" && this.setStyle(t), this;
  }
  setScalar(t) {
    return this.r = t, this.g = t, this.b = t, this;
  }
  setHex(t, e = kt) {
    return t = Math.floor(t), this.r = (t >> 16 & 255) / 255, this.g = (t >> 8 & 255) / 255, this.b = (t & 255) / 255, at.toWorkingColorSpace(this, e), this;
  }
  setRGB(t, e, n, r = at.workingColorSpace) {
    return this.r = t, this.g = e, this.b = n, at.toWorkingColorSpace(this, r), this;
  }
  setHSL(t, e, n, r = at.workingColorSpace) {
    if (t = Rh(t, 1), e = ct(e, 0, 1), n = ct(n, 0, 1), e === 0) this.r = this.g = this.b = n;
    else {
      let s = n <= 0.5 ? n * (1 + e) : n + e - n * e, o = 2 * n - s;
      this.r = En(o, s, t + 1 / 3), this.g = En(o, s, t), this.b = En(o, s, t - 1 / 3);
    }
    return at.toWorkingColorSpace(this, r), this;
  }
  setStyle(t, e = kt) {
    function n(s) {
      s !== void 0 && parseFloat(s) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.");
    }
    let r;
    if (r = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)) {
      let s, o = r[1], a = r[2];
      switch (o) {
        case "rgb":
        case "rgba":
          if (s = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return this.r = Math.min(255, parseInt(s[1], 10)) / 255, this.g = Math.min(255, parseInt(s[2], 10)) / 255, this.b = Math.min(255, parseInt(s[3], 10)) / 255, at.toWorkingColorSpace(this, e), n(s[4]), this;
          if (s = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return this.r = Math.min(100, parseInt(s[1], 10)) / 100, this.g = Math.min(100, parseInt(s[2], 10)) / 100, this.b = Math.min(100, parseInt(s[3], 10)) / 100, at.toWorkingColorSpace(this, e), n(s[4]), this;
          break;
        case "hsl":
        case "hsla":
          if (s = /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) {
            let h = parseFloat(s[1]) / 360, c = parseFloat(s[2]) / 100, l = parseFloat(s[3]) / 100;
            return n(s[4]), this.setHSL(h, c, l, e);
          }
          break;
      }
    } else if (r = /^\#([A-Fa-f\d]+)$/.exec(t)) {
      let s = r[1], o = s.length;
      if (o === 3) return this.r = parseInt(s.charAt(0) + s.charAt(0), 16) / 255, this.g = parseInt(s.charAt(1) + s.charAt(1), 16) / 255, this.b = parseInt(s.charAt(2) + s.charAt(2), 16) / 255, at.toWorkingColorSpace(this, e), this;
      if (o === 6) return this.r = parseInt(s.charAt(0) + s.charAt(1), 16) / 255, this.g = parseInt(s.charAt(2) + s.charAt(3), 16) / 255, this.b = parseInt(s.charAt(4) + s.charAt(5), 16) / 255, at.toWorkingColorSpace(this, e), this;
    }
    return t && t.length > 0 ? this.setColorName(t, e) : this;
  }
  setColorName(t, e = kt) {
    let n = Yr[t.toLowerCase()];
    return n !== void 0 ? this.setHex(n, e) : console.warn("THREE.Color: Unknown color " + t), this;
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(t) {
    return this.r = t.r, this.g = t.g, this.b = t.b, this;
  }
  copySRGBToLinear(t) {
    return this.r = Ti(t.r), this.g = Ti(t.g), this.b = Ti(t.b), this;
  }
  copyLinearToSRGB(t) {
    return this.r = bi(t.r), this.g = bi(t.g), this.b = bi(t.b), this;
  }
  convertSRGBToLinear() {
    return this.copySRGBToLinear(this), this;
  }
  convertLinearToSRGB() {
    return this.copyLinearToSRGB(this), this;
  }
  getHex(t = kt) {
    return at.fromWorkingColorSpace(Ci(this, it), t), ct(it.r * 255, 0, 255) << 16 ^ ct(it.g * 255, 0, 255) << 8 ^ ct(it.b * 255, 0, 255) << 0;
  }
  getHexString(t = kt) {
    return ("000000" + this.getHex(t).toString(16)).slice(-6);
  }
  getHSL(t, e = at.workingColorSpace) {
    at.fromWorkingColorSpace(Ci(this, it), e);
    let n = it.r, r = it.g, s = it.b, o = Math.max(n, r, s), a = Math.min(n, r, s), h, c, l = (a + o) / 2;
    if (a === o) h = 0, c = 0;
    else {
      let d = o - a;
      switch (c = l <= 0.5 ? d / (o + a) : d / (2 - o - a), o) {
        case n:
          h = (r - s) / d + (r < s ? 6 : 0);
          break;
        case r:
          h = (s - n) / d + 2;
          break;
        case s:
          h = (n - r) / d + 4;
          break;
      }
      h /= 6;
    }
    return t.h = h, t.s = c, t.l = l, t;
  }
  getRGB(t, e = at.workingColorSpace) {
    return at.fromWorkingColorSpace(Ci(this, it), e), t.r = it.r, t.g = it.g, t.b = it.b, t;
  }
  getStyle(t = kt) {
    return at.fromWorkingColorSpace(Ci(this, it), t), t !== kt ? `color(${t} ${it.r} ${it.g} ${it.b})` : `rgb(${it.r * 255 | 0},${it.g * 255 | 0},${it.b * 255 | 0})`;
  }
  offsetHSL(t, e, n) {
    return this.getHSL(Mt), Mt.h += t, Mt.s += e, Mt.l += n, this.setHSL(Mt.h, Mt.s, Mt.l), this;
  }
  add(t) {
    return this.r += t.r, this.g += t.g, this.b += t.b, this;
  }
  addColors(t, e) {
    return this.r = t.r + e.r, this.g = t.g + e.g, this.b = t.b + e.b, this;
  }
  addScalar(t) {
    return this.r += t, this.g += t, this.b += t, this;
  }
  sub(t) {
    return this.r = Math.max(0, this.r - t.r), this.g = Math.max(0, this.g - t.g), this.b = Math.max(0, this.b - t.b), this;
  }
  multiply(t) {
    return this.r *= t.r, this.g *= t.g, this.b *= t.b, this;
  }
  multiplyScalar(t) {
    return this.r *= t, this.g *= t, this.b *= t, this;
  }
  lerp(t, e) {
    return this.r += (t.r - this.r) * e, this.g += (t.g - this.g) * e, this.b += (t.b - this.b) * e, this;
  }
  lerpColors(t, e, n) {
    return this.r = t.r + (e.r - t.r) * n, this.g = t.g + (e.g - t.g) * n, this.b = t.b + (e.b - t.b) * n, this;
  }
  lerpHSL(t, e) {
    this.getHSL(Mt), t.getHSL(wi);
    let n = yn(Mt.h, wi.h, e), r = yn(Mt.s, wi.s, e), s = yn(Mt.l, wi.l, e);
    return this.setHSL(n, r, s), this;
  }
  equals(t) {
    return t.r === this.r && t.g === this.g && t.b === this.b;
  }
  fromArray(t, e = 0) {
    return this.r = t[e], this.g = t[e + 1], this.b = t[e + 2], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.r, t[e + 1] = this.g, t[e + 2] = this.b, t;
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r, yield this.g, yield this.b;
  }
};
Cn.NAMES = Yr;
var Rt = class i4 {
  constructor() {
    i4.prototype.isMatrix4 = true, this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  }
  set(t, e, n, r, s, o, a, h, c, l, d, m, u, p, f, _) {
    let y = this.elements;
    return y[0] = t, y[4] = e, y[8] = n, y[12] = r, y[1] = s, y[5] = o, y[9] = a, y[13] = h, y[2] = c, y[6] = l, y[10] = d, y[14] = m, y[3] = u, y[7] = p, y[11] = f, y[15] = _, this;
  }
  identity() {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  clone() {
    return new i4().fromArray(this.elements);
  }
  copy(t) {
    let e = this.elements, n = t.elements;
    return e[0] = n[0], e[1] = n[1], e[2] = n[2], e[3] = n[3], e[4] = n[4], e[5] = n[5], e[6] = n[6], e[7] = n[7], e[8] = n[8], e[9] = n[9], e[10] = n[10], e[11] = n[11], e[12] = n[12], e[13] = n[13], e[14] = n[14], e[15] = n[15], this;
  }
  copyPosition(t) {
    let e = this.elements, n = t.elements;
    return e[12] = n[12], e[13] = n[13], e[14] = n[14], this;
  }
  setFromMatrix3(t) {
    let e = t.elements;
    return this.set(e[0], e[3], e[6], 0, e[1], e[4], e[7], 0, e[2], e[5], e[8], 0, 0, 0, 0, 1), this;
  }
  extractBasis(t, e, n) {
    return t.setFromMatrixColumn(this, 0), e.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
  }
  makeBasis(t, e, n) {
    return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1), this;
  }
  extractRotation(t) {
    let e = this.elements, n = t.elements, r = 1 / ye.setFromMatrixColumn(t, 0).length(), s = 1 / ye.setFromMatrixColumn(t, 1).length(), o = 1 / ye.setFromMatrixColumn(t, 2).length();
    return e[0] = n[0] * r, e[1] = n[1] * r, e[2] = n[2] * r, e[3] = 0, e[4] = n[4] * s, e[5] = n[5] * s, e[6] = n[6] * s, e[7] = 0, e[8] = n[8] * o, e[9] = n[9] * o, e[10] = n[10] * o, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;
  }
  makeRotationFromEuler(t) {
    let e = this.elements, n = t.x, r = t.y, s = t.z, o = Math.cos(n), a = Math.sin(n), h = Math.cos(r), c = Math.sin(r), l = Math.cos(s), d = Math.sin(s);
    if (t.order === "XYZ") {
      let m = o * l, u = o * d, p = a * l, f = a * d;
      e[0] = h * l, e[4] = -h * d, e[8] = c, e[1] = u + p * c, e[5] = m - f * c, e[9] = -a * h, e[2] = f - m * c, e[6] = p + u * c, e[10] = o * h;
    } else if (t.order === "YXZ") {
      let m = h * l, u = h * d, p = c * l, f = c * d;
      e[0] = m + f * a, e[4] = p * a - u, e[8] = o * c, e[1] = o * d, e[5] = o * l, e[9] = -a, e[2] = u * a - p, e[6] = f + m * a, e[10] = o * h;
    } else if (t.order === "ZXY") {
      let m = h * l, u = h * d, p = c * l, f = c * d;
      e[0] = m - f * a, e[4] = -o * d, e[8] = p + u * a, e[1] = u + p * a, e[5] = o * l, e[9] = f - m * a, e[2] = -o * c, e[6] = a, e[10] = o * h;
    } else if (t.order === "ZYX") {
      let m = o * l, u = o * d, p = a * l, f = a * d;
      e[0] = h * l, e[4] = p * c - u, e[8] = m * c + f, e[1] = h * d, e[5] = f * c + m, e[9] = u * c - p, e[2] = -c, e[6] = a * h, e[10] = o * h;
    } else if (t.order === "YZX") {
      let m = o * h, u = o * c, p = a * h, f = a * c;
      e[0] = h * l, e[4] = f - m * d, e[8] = p * d + u, e[1] = d, e[5] = o * l, e[9] = -a * l, e[2] = -c * l, e[6] = u * d + p, e[10] = m - f * d;
    } else if (t.order === "XZY") {
      let m = o * h, u = o * c, p = a * h, f = a * c;
      e[0] = h * l, e[4] = -d, e[8] = c * l, e[1] = m * d + f, e[5] = o * l, e[9] = u * d - p, e[2] = p * d - u, e[6] = a * l, e[10] = f * d + m;
    }
    return e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;
  }
  makeRotationFromQuaternion(t) {
    return this.compose(Ah, t, Sh);
  }
  lookAt(t, e, n) {
    let r = this.elements;
    return ut.subVectors(t, e), ut.lengthSq() === 0 && (ut.z = 1), ut.normalize(), Wt.crossVectors(n, ut), Wt.lengthSq() === 0 && (Math.abs(n.z) === 1 ? ut.x += 1e-4 : ut.z += 1e-4, ut.normalize(), Wt.crossVectors(n, ut)), Wt.normalize(), Mi.crossVectors(ut, Wt), r[0] = Wt.x, r[4] = Mi.x, r[8] = ut.x, r[1] = Wt.y, r[5] = Mi.y, r[9] = ut.y, r[2] = Wt.z, r[6] = Mi.z, r[10] = ut.z, this;
  }
  multiply(t) {
    return this.multiplyMatrices(this, t);
  }
  premultiply(t) {
    return this.multiplyMatrices(t, this);
  }
  multiplyMatrices(t, e) {
    let n = t.elements, r = e.elements, s = this.elements, o = n[0], a = n[4], h = n[8], c = n[12], l = n[1], d = n[5], m = n[9], u = n[13], p = n[2], f = n[6], _ = n[10], y = n[14], M = n[3], v = n[7], x = n[11], E = n[15], w = r[0], C = r[4], S = r[8], P = r[12], R = r[1], F = r[5], O = r[9], V = r[13], A = r[2], z = r[6], N = r[10], Q = r[14], rt = r[3], ht = r[7], _t30 = r[11], Z = r[15];
    return s[0] = o * w + a * R + h * A + c * rt, s[4] = o * C + a * F + h * z + c * ht, s[8] = o * S + a * O + h * N + c * _t30, s[12] = o * P + a * V + h * Q + c * Z, s[1] = l * w + d * R + m * A + u * rt, s[5] = l * C + d * F + m * z + u * ht, s[9] = l * S + d * O + m * N + u * _t30, s[13] = l * P + d * V + m * Q + u * Z, s[2] = p * w + f * R + _ * A + y * rt, s[6] = p * C + f * F + _ * z + y * ht, s[10] = p * S + f * O + _ * N + y * _t30, s[14] = p * P + f * V + _ * Q + y * Z, s[3] = M * w + v * R + x * A + E * rt, s[7] = M * C + v * F + x * z + E * ht, s[11] = M * S + v * O + x * N + E * _t30, s[15] = M * P + v * V + x * Q + E * Z, this;
  }
  multiplyScalar(t) {
    let e = this.elements;
    return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this;
  }
  determinant() {
    let t = this.elements, e = t[0], n = t[4], r = t[8], s = t[12], o = t[1], a = t[5], h = t[9], c = t[13], l = t[2], d = t[6], m = t[10], u = t[14], p = t[3], f = t[7], _ = t[11], y = t[15];
    return p * (+s * h * d - r * c * d - s * a * m + n * c * m + r * a * u - n * h * u) + f * (+e * h * u - e * c * m + s * o * m - r * o * u + r * c * l - s * h * l) + _ * (+e * c * d - e * a * u - s * o * d + n * o * u + s * a * l - n * c * l) + y * (-r * a * l - e * h * d + e * a * m + r * o * d - n * o * m + n * h * l);
  }
  transpose() {
    let t = this.elements, e;
    return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this;
  }
  setPosition(t, e, n) {
    let r = this.elements;
    return t.isVector3 ? (r[12] = t.x, r[13] = t.y, r[14] = t.z) : (r[12] = t, r[13] = e, r[14] = n), this;
  }
  invert() {
    let t = this.elements, e = t[0], n = t[1], r = t[2], s = t[3], o = t[4], a = t[5], h = t[6], c = t[7], l = t[8], d = t[9], m = t[10], u = t[11], p = t[12], f = t[13], _ = t[14], y = t[15], M = d * _ * c - f * m * c + f * h * u - a * _ * u - d * h * y + a * m * y, v = p * m * c - l * _ * c - p * h * u + o * _ * u + l * h * y - o * m * y, x = l * f * c - p * d * c + p * a * u - o * f * u - l * a * y + o * d * y, E = p * d * h - l * f * h - p * a * m + o * f * m + l * a * _ - o * d * _, w = e * M + n * v + r * x + s * E;
    if (w === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    let C = 1 / w;
    return t[0] = M * C, t[1] = (f * m * s - d * _ * s - f * r * u + n * _ * u + d * r * y - n * m * y) * C, t[2] = (a * _ * s - f * h * s + f * r * c - n * _ * c - a * r * y + n * h * y) * C, t[3] = (d * h * s - a * m * s - d * r * c + n * m * c + a * r * u - n * h * u) * C, t[4] = v * C, t[5] = (l * _ * s - p * m * s + p * r * u - e * _ * u - l * r * y + e * m * y) * C, t[6] = (p * h * s - o * _ * s - p * r * c + e * _ * c + o * r * y - e * h * y) * C, t[7] = (o * m * s - l * h * s + l * r * c - e * m * c - o * r * u + e * h * u) * C, t[8] = x * C, t[9] = (p * d * s - l * f * s - p * n * u + e * f * u + l * n * y - e * d * y) * C, t[10] = (o * f * s - p * a * s + p * n * c - e * f * c - o * n * y + e * a * y) * C, t[11] = (l * a * s - o * d * s - l * n * c + e * d * c + o * n * u - e * a * u) * C, t[12] = E * C, t[13] = (l * f * r - p * d * r + p * n * m - e * f * m - l * n * _ + e * d * _) * C, t[14] = (p * a * r - o * f * r - p * n * h + e * f * h + o * n * _ - e * a * _) * C, t[15] = (o * d * r - l * a * r + l * n * h - e * d * h - o * n * m + e * a * m) * C, this;
  }
  scale(t) {
    let e = this.elements, n = t.x, r = t.y, s = t.z;
    return e[0] *= n, e[4] *= r, e[8] *= s, e[1] *= n, e[5] *= r, e[9] *= s, e[2] *= n, e[6] *= r, e[10] *= s, e[3] *= n, e[7] *= r, e[11] *= s, this;
  }
  getMaxScaleOnAxis() {
    let t = this.elements, e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2], n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6], r = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
    return Math.sqrt(Math.max(e, n, r));
  }
  makeTranslation(t, e, n) {
    return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1), this;
  }
  makeRotationX(t) {
    let e = Math.cos(t), n = Math.sin(t);
    return this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1), this;
  }
  makeRotationY(t) {
    let e = Math.cos(t), n = Math.sin(t);
    return this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1), this;
  }
  makeRotationZ(t) {
    let e = Math.cos(t), n = Math.sin(t);
    return this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  makeRotationAxis(t, e) {
    let n = Math.cos(e), r = Math.sin(e), s = 1 - n, o = t.x, a = t.y, h = t.z, c = s * o, l = s * a;
    return this.set(c * o + n, c * a - r * h, c * h + r * a, 0, c * a + r * h, l * a + n, l * h - r * o, 0, c * h - r * a, l * h + r * o, s * h * h + n, 0, 0, 0, 0, 1), this;
  }
  makeScale(t, e, n) {
    return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
  }
  makeShear(t, e, n, r, s, o) {
    return this.set(1, n, s, 0, t, 1, o, 0, e, r, 1, 0, 0, 0, 0, 1), this;
  }
  compose(t, e, n) {
    let r = this.elements, s = e._x, o = e._y, a = e._z, h = e._w, c = s + s, l = o + o, d = a + a, m = s * c, u = s * l, p = s * d, f = o * l, _ = o * d, y = a * d, M = h * c, v = h * l, x = h * d, E = n.x, w = n.y, C = n.z;
    return r[0] = (1 - (f + y)) * E, r[1] = (u + x) * E, r[2] = (p - v) * E, r[3] = 0, r[4] = (u - x) * w, r[5] = (1 - (m + y)) * w, r[6] = (_ + M) * w, r[7] = 0, r[8] = (p + v) * C, r[9] = (_ - M) * C, r[10] = (1 - (m + f)) * C, r[11] = 0, r[12] = t.x, r[13] = t.y, r[14] = t.z, r[15] = 1, this;
  }
  decompose(t, e, n) {
    let r = this.elements, s = ye.set(r[0], r[1], r[2]).length(), o = ye.set(r[4], r[5], r[6]).length(), a = ye.set(r[8], r[9], r[10]).length();
    this.determinant() < 0 && (s = -s), t.x = r[12], t.y = r[13], t.z = r[14], Tt.copy(this);
    let c = 1 / s, l = 1 / o, d = 1 / a;
    return Tt.elements[0] *= c, Tt.elements[1] *= c, Tt.elements[2] *= c, Tt.elements[4] *= l, Tt.elements[5] *= l, Tt.elements[6] *= l, Tt.elements[8] *= d, Tt.elements[9] *= d, Tt.elements[10] *= d, e.setFromRotationMatrix(Tt), n.x = s, n.y = o, n.z = a, this;
  }
  makePerspective(t, e, n, r, s, o) {
    let a = this.elements, h = 2 * s / (e - t), c = 2 * s / (n - r), l = (e + t) / (e - t), d = (n + r) / (n - r), m = -(o + s) / (o - s), u = -2 * o * s / (o - s);
    return a[0] = h, a[4] = 0, a[8] = l, a[12] = 0, a[1] = 0, a[5] = c, a[9] = d, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = m, a[14] = u, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;
  }
  makeOrthographic(t, e, n, r, s, o) {
    let a = this.elements, h = 1 / (e - t), c = 1 / (n - r), l = 1 / (o - s), d = (e + t) * h, m = (n + r) * c, u = (o + s) * l;
    return a[0] = 2 * h, a[4] = 0, a[8] = 0, a[12] = -d, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -m, a[2] = 0, a[6] = 0, a[10] = -2 * l, a[14] = -u, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;
  }
  equals(t) {
    let e = this.elements, n = t.elements;
    for (let r = 0; r < 16; r++) if (e[r] !== n[r]) return false;
    return true;
  }
  fromArray(t, e = 0) {
    for (let n = 0; n < 16; n++) this.elements[n] = t[n + e];
    return this;
  }
  toArray(t = [], e = 0) {
    let n = this.elements;
    return t[e] = n[0], t[e + 1] = n[1], t[e + 2] = n[2], t[e + 3] = n[3], t[e + 4] = n[4], t[e + 5] = n[5], t[e + 6] = n[6], t[e + 7] = n[7], t[e + 8] = n[8], t[e + 9] = n[9], t[e + 10] = n[10], t[e + 11] = n[11], t[e + 12] = n[12], t[e + 13] = n[13], t[e + 14] = n[14], t[e + 15] = n[15], t;
  }
};
var ye = new D();
var Tt = new Rt();
var Ah = new D(0, 0, 0);
var Sh = new D(1, 1, 1);
var Wt = new D();
var Mi = new D();
var ut = new D();
var Br = new Rt();
var Hr = new bt();
var Ri = class i5 {
  constructor(t = 0, e = 0, n = 0, r = i5.DefaultOrder) {
    this.isEuler = true, this._x = t, this._y = e, this._z = n, this._order = r;
  }
  get x() {
    return this._x;
  }
  set x(t) {
    this._x = t, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(t) {
    this._y = t, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(t) {
    this._z = t, this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(t) {
    this._order = t, this._onChangeCallback();
  }
  set(t, e, n, r = this._order) {
    return this._x = t, this._y = e, this._z = n, this._order = r, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(t) {
    return this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this._onChangeCallback(), this;
  }
  setFromRotationMatrix(t, e = this._order, n = true) {
    let r = t.elements, s = r[0], o = r[4], a = r[8], h = r[1], c = r[5], l = r[9], d = r[2], m = r[6], u = r[10];
    switch (e) {
      case "XYZ":
        this._y = Math.asin(ct(a, -1, 1)), Math.abs(a) < 0.9999999 ? (this._x = Math.atan2(-l, u), this._z = Math.atan2(-o, s)) : (this._x = Math.atan2(m, c), this._z = 0);
        break;
      case "YXZ":
        this._x = Math.asin(-ct(l, -1, 1)), Math.abs(l) < 0.9999999 ? (this._y = Math.atan2(a, u), this._z = Math.atan2(h, c)) : (this._y = Math.atan2(-d, s), this._z = 0);
        break;
      case "ZXY":
        this._x = Math.asin(ct(m, -1, 1)), Math.abs(m) < 0.9999999 ? (this._y = Math.atan2(-d, u), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(h, s));
        break;
      case "ZYX":
        this._y = Math.asin(-ct(d, -1, 1)), Math.abs(d) < 0.9999999 ? (this._x = Math.atan2(m, u), this._z = Math.atan2(h, s)) : (this._x = 0, this._z = Math.atan2(-o, c));
        break;
      case "YZX":
        this._z = Math.asin(ct(h, -1, 1)), Math.abs(h) < 0.9999999 ? (this._x = Math.atan2(-l, c), this._y = Math.atan2(-d, s)) : (this._x = 0, this._y = Math.atan2(a, u));
        break;
      case "XZY":
        this._z = Math.asin(-ct(o, -1, 1)), Math.abs(o) < 0.9999999 ? (this._x = Math.atan2(m, c), this._y = Math.atan2(a, s)) : (this._x = Math.atan2(-l, u), this._y = 0);
        break;
      default:
        console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + e);
    }
    return this._order = e, n === true && this._onChangeCallback(), this;
  }
  setFromQuaternion(t, e, n) {
    return Br.makeRotationFromQuaternion(t), this.setFromRotationMatrix(Br, e, n);
  }
  setFromVector3(t, e = this._order) {
    return this.set(t.x, t.y, t.z, e);
  }
  reorder(t) {
    return Hr.setFromEuler(this), this.setFromQuaternion(Hr, t);
  }
  equals(t) {
    return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order;
  }
  fromArray(t) {
    return this._x = t[0], this._y = t[1], this._z = t[2], t[3] !== void 0 && (this._order = t[3]), this._onChangeCallback(), this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._order, t;
  }
  _onChange(t) {
    return this._onChangeCallback = t, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._order;
  }
  toVector3() {
    console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead");
  }
};
Ri.DefaultOrder = "XYZ";
Ri.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"];
var se = class {
  constructor(t = 1, e = 0, n = 0) {
    return this.radius = t, this.phi = e, this.theta = n, this;
  }
  set(t, e, n) {
    return this.radius = t, this.phi = e, this.theta = n, this;
  }
  copy(t) {
    return this.radius = t.radius, this.phi = t.phi, this.theta = t.theta, this;
  }
  makeSafe() {
    return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
  }
  setFromVector3(t) {
    return this.setFromCartesianCoords(t.x, t.y, t.z);
  }
  setFromCartesianCoords(t, e, n) {
    return this.radius = Math.sqrt(t * t + e * e + n * n), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(t, n), this.phi = Math.acos(ct(e / this.radius, -1, 1))), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
};
var Ai = class i6 {
  constructor(t = 0, e = 0, n = 0, r = 1) {
    i6.prototype.isVector4 = true, this.x = t, this.y = e, this.z = n, this.w = r;
  }
  get width() {
    return this.z;
  }
  set width(t) {
    this.z = t;
  }
  get height() {
    return this.w;
  }
  set height(t) {
    this.w = t;
  }
  set(t, e, n, r) {
    return this.x = t, this.y = e, this.z = n, this.w = r, this;
  }
  setScalar(t) {
    return this.x = t, this.y = t, this.z = t, this.w = t, this;
  }
  setX(t) {
    return this.x = t, this;
  }
  setY(t) {
    return this.y = t, this;
  }
  setZ(t) {
    return this.z = t, this;
  }
  setW(t) {
    return this.w = t, this;
  }
  setComponent(t, e) {
    switch (t) {
      case 0:
        this.x = e;
        break;
      case 1:
        this.y = e;
        break;
      case 2:
        this.z = e;
        break;
      case 3:
        this.w = e;
        break;
      default:
        throw new Error("index is out of range: " + t);
    }
    return this;
  }
  getComponent(t) {
    switch (t) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + t);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this.z = t.z, this.w = t.w !== void 0 ? t.w : 1, this;
  }
  add(t) {
    return this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this;
  }
  addScalar(t) {
    return this.x += t, this.y += t, this.z += t, this.w += t, this;
  }
  addVectors(t, e) {
    return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this.w = t.w + e.w, this;
  }
  addScaledVector(t, e) {
    return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this.w += t.w * e, this;
  }
  sub(t) {
    return this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this;
  }
  subScalar(t) {
    return this.x -= t, this.y -= t, this.z -= t, this.w -= t, this;
  }
  subVectors(t, e) {
    return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this.w = t.w - e.w, this;
  }
  multiply(t) {
    return this.x *= t.x, this.y *= t.y, this.z *= t.z, this.w *= t.w, this;
  }
  multiplyScalar(t) {
    return this.x *= t, this.y *= t, this.z *= t, this.w *= t, this;
  }
  applyMatrix4(t) {
    let e = this.x, n = this.y, r = this.z, s = this.w, o = t.elements;
    return this.x = o[0] * e + o[4] * n + o[8] * r + o[12] * s, this.y = o[1] * e + o[5] * n + o[9] * r + o[13] * s, this.z = o[2] * e + o[6] * n + o[10] * r + o[14] * s, this.w = o[3] * e + o[7] * n + o[11] * r + o[15] * s, this;
  }
  divideScalar(t) {
    return this.multiplyScalar(1 / t);
  }
  setAxisAngleFromQuaternion(t) {
    this.w = 2 * Math.acos(t.w);
    let e = Math.sqrt(1 - t.w * t.w);
    return e < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = t.x / e, this.y = t.y / e, this.z = t.z / e), this;
  }
  setAxisAngleFromRotationMatrix(t) {
    let e, n, r, s, h = t.elements, c = h[0], l = h[4], d = h[8], m = h[1], u = h[5], p = h[9], f = h[2], _ = h[6], y = h[10];
    if (Math.abs(l - m) < 0.01 && Math.abs(d - f) < 0.01 && Math.abs(p - _) < 0.01) {
      if (Math.abs(l + m) < 0.1 && Math.abs(d + f) < 0.1 && Math.abs(p + _) < 0.1 && Math.abs(c + u + y - 3) < 0.1) return this.set(1, 0, 0, 0), this;
      e = Math.PI;
      let v = (c + 1) / 2, x = (u + 1) / 2, E = (y + 1) / 2, w = (l + m) / 4, C = (d + f) / 4, S = (p + _) / 4;
      return v > x && v > E ? v < 0.01 ? (n = 0, r = 0.707106781, s = 0.707106781) : (n = Math.sqrt(v), r = w / n, s = C / n) : x > E ? x < 0.01 ? (n = 0.707106781, r = 0, s = 0.707106781) : (r = Math.sqrt(x), n = w / r, s = S / r) : E < 0.01 ? (n = 0.707106781, r = 0.707106781, s = 0) : (s = Math.sqrt(E), n = C / s, r = S / s), this.set(n, r, s, e), this;
    }
    let M = Math.sqrt((_ - p) * (_ - p) + (d - f) * (d - f) + (m - l) * (m - l));
    return Math.abs(M) < 1e-3 && (M = 1), this.x = (_ - p) / M, this.y = (d - f) / M, this.z = (m - l) / M, this.w = Math.acos((c + u + y - 1) / 2), this;
  }
  min(t) {
    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this.w = Math.min(this.w, t.w), this;
  }
  max(t) {
    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this.w = Math.max(this.w, t.w), this;
  }
  clamp(t, e) {
    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this.w = Math.max(t.w, Math.min(e.w, this.w)), this;
  }
  clampScalar(t, e) {
    return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this.z = Math.max(t, Math.min(e, this.z)), this.w = Math.max(t, Math.min(e, this.w)), this;
  }
  clampLength(t, e) {
    let n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
  }
  dot(t) {
    return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(t) {
    return this.normalize().multiplyScalar(t);
  }
  lerp(t, e) {
    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this.w += (t.w - this.w) * e, this;
  }
  lerpVectors(t, e, n) {
    return this.x = t.x + (e.x - t.x) * n, this.y = t.y + (e.y - t.y) * n, this.z = t.z + (e.z - t.z) * n, this.w = t.w + (e.w - t.w) * n, this;
  }
  equals(t) {
    return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w;
  }
  fromArray(t, e = 0) {
    return this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this.w = t[e + 3], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t[e + 3] = this.w, t;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z, yield this.w;
  }
};
var X = { LEFT: 1, RIGHT: 2, MIDDLE: 4 };
var g = Object.freeze({ NONE: 0, ROTATE: 1, TRUCK: 2, SCREEN_PAN: 4, OFFSET: 8, DOLLY: 16, ZOOM: 32, TOUCH_ROTATE: 64, TOUCH_TRUCK: 128, TOUCH_SCREEN_PAN: 256, TOUCH_OFFSET: 512, TOUCH_DOLLY: 1024, TOUCH_ZOOM: 2048, TOUCH_DOLLY_TRUCK: 4096, TOUCH_DOLLY_SCREEN_PAN: 8192, TOUCH_DOLLY_OFFSET: 16384, TOUCH_DOLLY_ROTATE: 32768, TOUCH_ZOOM_TRUCK: 65536, TOUCH_ZOOM_OFFSET: 131072, TOUCH_ZOOM_SCREEN_PAN: 262144, TOUCH_ZOOM_ROTATE: 524288 });
var ve = { NONE: 0, IN: 1, OUT: -1 };
var ge = Math.PI * 2;
var Gr = Math.PI / 2;
var Jr = 1e-5;
var Ee = Math.PI / 180;
function St(i8, t, e) {
  return Math.max(t, Math.min(e, i8));
}
function j(i8, t = Jr) {
  return Math.abs(i8) < t;
}
function G(i8, t, e = Jr) {
  return j(i8 - t, e);
}
function qr(i8, t) {
  return Math.round(i8 / t) * t;
}
function Ue(i8) {
  return isFinite(i8) ? i8 : i8 < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;
}
function ke(i8) {
  return Math.abs(i8) < Number.MAX_VALUE ? i8 : i8 * (1 / 0);
}
function Oh(i8, t) {
  return i8.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld);
}
function Si(i8, t, e, n, r = 1 / 0, s) {
  n = Math.max(1e-4, n);
  let o = 2 / n, a = o * s, h = 1 / (1 + a + 0.48 * a * a + 0.235 * a * a * a), c = i8 - t, l = t, d = r * n;
  c = St(c, -d, d), t = i8 - c;
  let m = (e.value + o * c) * s;
  e.value = (e.value - o * m) * h;
  let u = t + (c + m) * h;
  return l - i8 > 0 == u > l && (u = l, e.value = (u - l) / s), u;
}
function jr(i8, t, e, n, r = 1 / 0, s, o) {
  n = Math.max(1e-4, n);
  let a = 2 / n, h = a * s, c = 1 / (1 + h + 0.48 * h * h + 0.235 * h * h * h), l = t.x, d = t.y, m = t.z, u = i8.x - l, p = i8.y - d, f = i8.z - m, _ = l, y = d, M = m, v = r * n, x = v * v, E = u * u + p * p + f * f;
  if (E > x) {
    let z = Math.sqrt(E);
    u = u / z * v, p = p / z * v, f = f / z * v;
  }
  l = i8.x - u, d = i8.y - p, m = i8.z - f;
  let w = (e.x + a * u) * s, C = (e.y + a * p) * s, S = (e.z + a * f) * s;
  e.x = (e.x - a * w) * c, e.y = (e.y - a * C) * c, e.z = (e.z - a * S) * c, o.x = l + (u + w) * c, o.y = d + (p + C) * c, o.z = m + (f + S) * c;
  let P = _ - i8.x, R = y - i8.y, F = M - i8.z, O = o.x - _, V = o.y - y, A = o.z - M;
  return P * O + R * V + F * A > 0 && (o.x = _, o.y = y, o.z = M, e.x = (o.x - _) / s, e.y = (o.y - y) / s, e.z = (o.z - M) / s), o;
}
function Mn(i8, t) {
  t.set(0, 0), i8.forEach((e) => {
    t.x += e.clientX, t.y += e.clientY;
  }), t.x /= i8.length, t.y /= i8.length;
}
var Xr = new Rt();
var Wr = new D();
var zi = class {
  constructor(t) {
    __publicField(this, "position");
    __publicField(this, "quaternion");
    __publicField(this, "up");
    __publicField(this, "scale", new D(1, 1, 1));
    __publicField(this, "matrix", new Rt());
    __publicField(this, "matrixWorld", new Rt());
    __publicField(this, "matrixWorldInverse", new Rt());
    __publicField(this, "projectionMatrix", new Rt());
    __publicField(this, "projectionMatrixInverse", new Rt());
    __publicField(this, "zoom", 1);
    __publicField(this, "matrixWorldNeedsUpdate", true);
    __publicField(this, "matrixAutoUpdate", true);
    __publicField(this, "matrixWorldAutoUpdate", true);
    this.position = new D().fromArray(t.position), this.quaternion = new bt().fromArray(t.orientation), this.up = new D(0, 1, 0);
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = true;
  }
  updateMatrixWorld(t = false) {
    this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || t) && (this.matrixWorldAutoUpdate === true && this.matrixWorld.copy(this.matrix), this.matrixWorldNeedsUpdate = false), this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  lookAt(t) {
    this.updateMatrixWorld(), Wr.setFromMatrixPosition(this.matrixWorld), Xr.lookAt(Wr, t, this.up), this.quaternion.setFromRotationMatrix(Xr);
  }
};
var Fi = class extends zi {
  constructor(t, e, n) {
    super(t);
    __publicField(this, "lens");
    this.lens = e, this.updateProjectionMatrix(n);
  }
  updateProjectionMatrix(t) {
    let e = this.lens.nearPlane, n = e * Math.tan(Ee * 0.5 * this.lens.fovy) / this.zoom, r = 2 * n, s = t * r, o = -0.5 * s;
    this.projectionMatrix.makePerspective(o, o + s, n, n - r, e, this.lens.farPlane), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
};
var Li = class extends zi {
  constructor(t, e, n) {
    super(t);
    __publicField(this, "lens");
    __publicField(this, "left", 0);
    __publicField(this, "right", 0);
    __publicField(this, "top", 0);
    __publicField(this, "bottom", 0);
    this.lens = e, this.updateProjectionMatrix(n);
  }
  updateProjectionMatrix(t) {
    this.left = -t * this.lens.zoomFactor[0], this.right = t * this.lens.zoomFactor[0], this.top = this.lens.zoomFactor[1], this.bottom = -this.lens.zoomFactor[1];
    let e = (this.right - this.left) / (2 * this.zoom), n = (this.top - this.bottom) / (2 * this.zoom), r = (this.right + this.left) / 2, s = (this.top + this.bottom) / 2, o = r - e, a = r + e, h = s + n, c = s - n;
    this.projectionMatrix.makeOrthographic(o, a, h, c, this.lens.zNear, this.lens.zFar), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
};
function oe(i8) {
  return i8 instanceof Fi;
}
function Bt(i8) {
  return i8 instanceof Li;
}
function Zr(i8, t) {
  return Bt(i8) ? (console.warn(`${t} is not supported in OrthographicCamera`), true) : false;
}
var Dh = class {
  constructor() {
    __publicField(this, "_listeners", {});
  }
  addEventListener(t, e) {
    let n = this._listeners;
    n[t] === void 0 && (n[t] = []), n[t].indexOf(e) === -1 && n[t].push(e);
  }
  hasEventListener(t, e) {
    let n = this._listeners;
    return n[t] !== void 0 && n[t].indexOf(e) !== -1;
  }
  removeEventListener(t, e) {
    let r = this._listeners[t];
    if (r !== void 0) {
      let s = r.indexOf(e);
      s !== -1 && r.splice(s, 1);
    }
  }
  removeAllEventListeners(t) {
    if (!t) {
      this._listeners = {};
      return;
    }
    Array.isArray(this._listeners[t]) && (this._listeners[t].length = 0);
  }
  dispatchEvent(t) {
    let n = this._listeners[t.type];
    if (n !== void 0) {
      t.target = this;
      let r = n.slice(0);
      for (let s = 0, o = r.length; s < o; s++) r[s].call(this, t);
    }
  }
};
var zh = "0.4.10";
var Pi = 1 / 8;
var _a29;
var Fh = /Mac/.test((_a29 = globalThis == null ? void 0 : globalThis.navigator) == null ? void 0 : _a29.platform);
var Tn = Object.freeze(new D(0, 1, 0));
var Kr = Object.freeze(new D(0, 0, 1));
var pt = new Zt();
var B = new D();
var Y = new D();
var Oi = new D();
var bn = new D();
var It = new D();
var Nt = new D();
var xe = new D();
var Lh = new D();
var Vh = new D();
var At = new se();
var Di = new se();
var Uh = new Ve();
var kh = new bt();
var Qr = new bt();
var Vi = class i7 extends Dh {
  constructor(t, e, n) {
    super();
    __publicField(this, "minPolarAngle", 0);
    __publicField(this, "maxPolarAngle", Math.PI);
    __publicField(this, "minAzimuthAngle", -1 / 0);
    __publicField(this, "maxAzimuthAngle", 1 / 0);
    __publicField(this, "minDistance", Number.EPSILON);
    __publicField(this, "maxDistance", 1 / 0);
    __publicField(this, "infinityDolly", false);
    __publicField(this, "minZoom", 0.01);
    __publicField(this, "maxZoom", 1 / 0);
    __publicField(this, "smoothTime", 0.25);
    __publicField(this, "draggingSmoothTime", 0.125);
    __publicField(this, "maxSpeed", 1 / 0);
    __publicField(this, "azimuthRotateSpeed", 1);
    __publicField(this, "polarRotateSpeed", 1);
    __publicField(this, "dollySpeed", 1);
    __publicField(this, "dollyDragInverted", false);
    __publicField(this, "truckSpeed", 2);
    __publicField(this, "scaleTruckSpeed", true);
    __publicField(this, "dollyToCursor", false);
    __publicField(this, "dragToOffset", false);
    __publicField(this, "boundaryFriction", 0);
    __publicField(this, "restThreshold", 0.01);
    __publicField(this, "mouseButtons");
    __publicField(this, "touches");
    __publicField(this, "cancel", () => {
    });
    __publicField(this, "lockPointer");
    __publicField(this, "unlockPointer");
    __publicField(this, "_enabled", true);
    __publicField(this, "_camera");
    __publicField(this, "_yAxisUpSpace");
    __publicField(this, "_yAxisUpSpaceInverse");
    __publicField(this, "_state", g.NONE);
    __publicField(this, "_aspectRatio");
    __publicField(this, "_domElement");
    __publicField(this, "_viewport", null);
    __publicField(this, "_target");
    __publicField(this, "_targetEnd");
    __publicField(this, "_focalOffset");
    __publicField(this, "_focalOffsetEnd");
    __publicField(this, "_spherical");
    __publicField(this, "_sphericalEnd");
    __publicField(this, "_lastDistance");
    __publicField(this, "_zoom");
    __publicField(this, "_zoomEnd");
    __publicField(this, "_lastZoom");
    __publicField(this, "_cameraUp0");
    __publicField(this, "_target0");
    __publicField(this, "_position0");
    __publicField(this, "_zoom0");
    __publicField(this, "_focalOffset0");
    __publicField(this, "_dollyControlCoord");
    __publicField(this, "_changedDolly", 0);
    __publicField(this, "_changedZoom", 0);
    __publicField(this, "_nearPlaneCorners");
    __publicField(this, "_hasRested", true);
    __publicField(this, "_boundary");
    __publicField(this, "_boundaryEnclosesCamera", false);
    __publicField(this, "_needsUpdate", true);
    __publicField(this, "_updatedLastTime", false);
    __publicField(this, "_elementRect", new DOMRect());
    __publicField(this, "_isDragging", false);
    __publicField(this, "_dragNeedsUpdate", true);
    __publicField(this, "_activePointers", []);
    __publicField(this, "_lockedPointer", null);
    __publicField(this, "_interactiveArea", new DOMRect(0, 0, 1, 1));
    __publicField(this, "_isUserControllingRotate", false);
    __publicField(this, "_isUserControllingDolly", false);
    __publicField(this, "_isUserControllingTruck", false);
    __publicField(this, "_isUserControllingOffset", false);
    __publicField(this, "_isUserControllingZoom", false);
    __publicField(this, "_lastDollyDirection", ve.NONE);
    __publicField(this, "_thetaVelocity", { value: 0 });
    __publicField(this, "_phiVelocity", { value: 0 });
    __publicField(this, "_radiusVelocity", { value: 0 });
    __publicField(this, "_targetVelocity", new D());
    __publicField(this, "_focalOffsetVelocity", new D());
    __publicField(this, "_zoomVelocity", { value: 0 });
    __publicField(this, "_livelink_viewport");
    __publicField(this, "getTargetDistance", () => {
      if (!this.scaleTruckSpeed || Bt(this._camera)) return 1;
      let t = B.copy(this._camera.position).sub(this._target), e = this._camera.lens.fovy * Ee;
      return t.length() * Math.tan(e * 0.5);
    });
    __publicField(this, "_truckInternal", (t, e, n, r) => {
      let s, o;
      if (oe(this._camera)) {
        let a = this.getTargetDistance();
        s = this.truckSpeed * t * a / this._elementRect.height, o = this.truckSpeed * e * a / this._elementRect.height;
      } else if (Bt(this._camera)) {
        let a = this._camera;
        s = t * (a.right - a.left) / a.zoom / this._elementRect.width, o = e * (a.top - a.bottom) / a.zoom / this._elementRect.height;
      } else return;
      r ? (n ? this.setFocalOffset(this._focalOffsetEnd.x + s, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) : this.truck(s, 0, true), this.forward(-o, true)) : n ? this.setFocalOffset(this._focalOffsetEnd.x + s, this._focalOffsetEnd.y + o, this._focalOffsetEnd.z, true) : this.truck(s, o, true);
    });
    __publicField(this, "_rotateInternal", (t, e) => {
      let n = ge * this.azimuthRotateSpeed * t / this._elementRect.height, r = ge * this.polarRotateSpeed * e / this._elementRect.height;
      this.rotate(n, r, true);
    });
    __publicField(this, "_dollyInternal", (t, e, n) => {
      let r = Math.pow(0.95, -t * this.dollySpeed), s = this._sphericalEnd.radius, o = this._sphericalEnd.radius * r, a = St(o, this.minDistance, this.maxDistance), h = a - o;
      this.infinityDolly && this.dollyToCursor ? this._dollyToNoClamp(o, true) : this.infinityDolly && !this.dollyToCursor ? (this.dollyInFixed(h, true), this._dollyToNoClamp(a, true)) : this._dollyToNoClamp(a, true), this.dollyToCursor && (this._changedDolly += (this.infinityDolly ? o : a) - s, this._dollyControlCoord.set(e, n)), this._lastDollyDirection = Math.sign(-t);
    });
    __publicField(this, "_zoomInternal", (t, e, n) => {
      let r = Math.pow(0.95, t * this.dollySpeed), s = this._zoom, o = this._zoom * r;
      this.zoomTo(o, true), this.dollyToCursor && (this._changedZoom += o - s, this._dollyControlCoord.set(e, n));
    });
    let r = "fovy" in e;
    this._aspectRatio = n.aspect_ratio, this._livelink_viewport = n, this._camera = r ? new Fi(t, e, this._aspectRatio) : new Li(t, e, this._aspectRatio), this._yAxisUpSpace = new bt().setFromUnitVectors(this._camera.up, Tn), this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert(), this._state = g.NONE, this._target = new D(), this._targetEnd = this._target.clone(), this._focalOffset = new D(), this._focalOffsetEnd = this._focalOffset.clone(), this._spherical = new se().setFromVector3(B.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)), this._sphericalEnd = this._spherical.clone(), this._lastDistance = this._spherical.radius, this._zoom = this._camera.zoom, this._zoomEnd = this._zoom, this._lastZoom = this._zoom, this._nearPlaneCorners = [new D(), new D(), new D(), new D()], this._updateNearPlaneCorners(), this._boundary = new Ve(new D(-1 / 0, -1 / 0, -1 / 0), new D(1 / 0, 1 / 0, 1 / 0)), this._cameraUp0 = this._camera.up.clone(), this._target0 = this._target.clone(), this._position0 = this._camera.position.clone(), this._zoom0 = this._zoom, this._focalOffset0 = this._focalOffset.clone(), this._dollyControlCoord = new Zt(), this.mouseButtons = { left: g.ROTATE, middle: g.DOLLY, right: g.TRUCK, wheel: oe(this._camera) ? g.DOLLY : Bt(this._camera) ? g.ZOOM : g.NONE }, this.touches = { one: g.TOUCH_ROTATE, two: oe(this._camera) ? g.TOUCH_DOLLY_TRUCK : Bt(this._camera) ? g.TOUCH_ZOOM_TRUCK : g.NONE, three: g.TOUCH_TRUCK };
    let s = new Zt(), o = new Zt(), a = new Zt(), h = (v) => {
      if (!this._enabled || !this._domElement || v.target !== this._domElement && this._livelink_viewport.overlay_dom_elements.every((w) => !w.contains(v.target))) return;
      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {
        let w = this._domElement.getBoundingClientRect(), C = v.clientX / w.width, S = v.clientY / w.height;
        if (C < this._interactiveArea.left || C > this._interactiveArea.right || S < this._interactiveArea.top || S > this._interactiveArea.bottom) return;
      }
      let x = v.pointerType !== "mouse" ? null : (v.buttons & X.LEFT) === X.LEFT ? X.LEFT : (v.buttons & X.MIDDLE) === X.MIDDLE ? X.MIDDLE : (v.buttons & X.RIGHT) === X.RIGHT ? X.RIGHT : null;
      if (x !== null) {
        let w = this._findPointerByMouseButton(x);
        w && this._disposePointer(w);
      }
      if ((v.buttons & X.LEFT) === X.LEFT && this._lockedPointer) return;
      let E = { pointerId: v.pointerId, clientX: v.clientX, clientY: v.clientY, deltaX: 0, deltaY: 0, mouseButton: x };
      this._activePointers.push(E), v.stopPropagation(), this._domElement.ownerDocument.removeEventListener("pointermove", c, { passive: false }), this._domElement.ownerDocument.removeEventListener("pointerup", l), this._domElement.ownerDocument.addEventListener("pointermove", c, { passive: false }), this._domElement.ownerDocument.addEventListener("pointerup", l), this._isDragging = true, p(v);
    }, c = (v) => {
      v.cancelable && v.preventDefault();
      let x = v.pointerId, E = this._lockedPointer || this._findPointerById(x);
      if (E) {
        if (E.clientX = v.clientX, E.clientY = v.clientY, E.deltaX = v.movementX, E.deltaY = v.movementY, this._state = 0, v.pointerType === "touch") switch (this._activePointers.length) {
          case 1:
            this._state = this.touches.one;
            break;
          case 2:
            this._state = this.touches.two;
            break;
          case 3:
            this._state = this.touches.three;
            break;
        }
        else (!this._isDragging && this._lockedPointer || this._isDragging && (v.buttons & X.LEFT) === X.LEFT) && (this._state = this._state | this.mouseButtons.left), this._isDragging && (v.buttons & X.MIDDLE) === X.MIDDLE && (this._state = this._state | this.mouseButtons.middle), this._isDragging && (v.buttons & X.RIGHT) === X.RIGHT && (this._state = this._state | this.mouseButtons.right);
        f();
      }
    }, l = (v) => {
      let x = this._findPointerById(v.pointerId);
      if (!(x && x === this._lockedPointer)) {
        if (x && this._disposePointer(x), v.pointerType === "touch") switch (this._activePointers.length) {
          case 0:
            this._state = g.NONE;
            break;
          case 1:
            this._state = this.touches.one;
            break;
          case 2:
            this._state = this.touches.two;
            break;
          case 3:
            this._state = this.touches.three;
            break;
        }
        else this._state = g.NONE;
        _();
      }
    }, d = -1, m = (v) => {
      if (!this._domElement || !this._enabled || this.mouseButtons.wheel === g.NONE || v.target !== this._domElement && this._livelink_viewport.overlay_dom_elements.every((S) => !S.contains(v.target))) return;
      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {
        let S = this._domElement.getBoundingClientRect(), P = v.clientX / S.width, R = v.clientY / S.height;
        if (P < this._interactiveArea.left || P > this._interactiveArea.right || R < this._interactiveArea.top || R > this._interactiveArea.bottom) return;
      }
      if (v.preventDefault(), v.stopPropagation(), this.dollyToCursor || this.mouseButtons.wheel === g.ROTATE || this.mouseButtons.wheel === g.TRUCK) {
        let S = performance.now();
        d - S < 1e3 && this._getClientRect(this._elementRect), d = S;
      }
      let x = Fh ? -1 : -3, E = v.deltaMode === 1 ? v.deltaY / x : v.deltaY / (x * 10), w = this.dollyToCursor ? (v.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0, C = this.dollyToCursor ? (v.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;
      switch (this.mouseButtons.wheel) {
        case g.ROTATE: {
          this._rotateInternal(v.deltaX, v.deltaY), this._isUserControllingRotate = true;
          break;
        }
        case g.TRUCK: {
          this._truckInternal(v.deltaX, -v.deltaY, false, false), this._isUserControllingTruck = true;
          break;
        }
        case g.SCREEN_PAN: {
          this._truckInternal(v.deltaX, -v.deltaY, false, true), this._isUserControllingTruck = true;
          break;
        }
        case g.OFFSET: {
          this._truckInternal(v.deltaX, v.deltaY, true, false), this._isUserControllingOffset = true;
          break;
        }
        case g.DOLLY: {
          this._dollyInternal(-E, w, C), this._isUserControllingDolly = true;
          break;
        }
        case g.ZOOM: {
          this._zoomInternal(-E, w, C), this._isUserControllingZoom = true;
          break;
        }
      }
      this.dispatchEvent({ type: "control" });
    }, u = (v) => {
      if (!(!this._domElement || !this._enabled)) {
        if (this.mouseButtons.right === i7.ACTION.NONE) {
          let x = v instanceof PointerEvent ? v.pointerId : 0, E = this._findPointerById(x);
          E && this._disposePointer(E), this._domElement.ownerDocument.removeEventListener("pointermove", c, { passive: false }), this._domElement.ownerDocument.removeEventListener("pointerup", l);
          return;
        }
        v.preventDefault(), v.stopPropagation();
      }
    }, p = (v) => {
      if (!this._enabled) return;
      if (Mn(this._activePointers, pt), this._getClientRect(this._elementRect), s.copy(pt), o.copy(pt), this._activePointers.length >= 2) {
        let E = pt.x - this._activePointers[1].clientX, w = pt.y - this._activePointers[1].clientY, C = Math.sqrt(E * E + w * w);
        a.set(0, C);
        let S = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5, P = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;
        o.set(S, P);
      }
      if (this._state = 0, !v) this._lockedPointer && (this._state = this._state | this.mouseButtons.left);
      else if ("pointerType" in v && v.pointerType === "touch") switch (this._activePointers.length) {
        case 1:
          this._state = this.touches.one;
          break;
        case 2:
          this._state = this.touches.two;
          break;
        case 3:
          this._state = this.touches.three;
          break;
      }
      else !this._lockedPointer && (v.buttons & X.LEFT) === X.LEFT && (this._state = this._state | this.mouseButtons.left), (v.buttons & X.MIDDLE) === X.MIDDLE && (this._state = this._state | this.mouseButtons.middle), (v.buttons & X.RIGHT) === X.RIGHT && (this._state = this._state | this.mouseButtons.right);
      ((this._state & g.ROTATE) === g.ROTATE || (this._state & g.TOUCH_ROTATE) === g.TOUCH_ROTATE || (this._state & g.TOUCH_DOLLY_ROTATE) === g.TOUCH_DOLLY_ROTATE || (this._state & g.TOUCH_ZOOM_ROTATE) === g.TOUCH_ZOOM_ROTATE) && (this._sphericalEnd.theta = this._spherical.theta, this._sphericalEnd.phi = this._spherical.phi, this._thetaVelocity.value = 0, this._phiVelocity.value = 0), ((this._state & g.TRUCK) === g.TRUCK || (this._state & g.SCREEN_PAN) === g.SCREEN_PAN || (this._state & g.TOUCH_TRUCK) === g.TOUCH_TRUCK || (this._state & g.TOUCH_SCREEN_PAN) === g.TOUCH_SCREEN_PAN || (this._state & g.TOUCH_DOLLY_TRUCK) === g.TOUCH_DOLLY_TRUCK || (this._state & g.TOUCH_DOLLY_SCREEN_PAN) === g.TOUCH_DOLLY_SCREEN_PAN || (this._state & g.TOUCH_ZOOM_TRUCK) === g.TOUCH_ZOOM_TRUCK || (this._state & g.TOUCH_ZOOM_SCREEN_PAN) === g.TOUCH_DOLLY_SCREEN_PAN) && (this._targetEnd.copy(this._target), this._targetVelocity.set(0, 0, 0)), ((this._state & g.DOLLY) === g.DOLLY || (this._state & g.TOUCH_DOLLY) === g.TOUCH_DOLLY || (this._state & g.TOUCH_DOLLY_TRUCK) === g.TOUCH_DOLLY_TRUCK || (this._state & g.TOUCH_DOLLY_SCREEN_PAN) === g.TOUCH_DOLLY_SCREEN_PAN || (this._state & g.TOUCH_DOLLY_OFFSET) === g.TOUCH_DOLLY_OFFSET || (this._state & g.TOUCH_DOLLY_ROTATE) === g.TOUCH_DOLLY_ROTATE) && (this._sphericalEnd.radius = this._spherical.radius, this._radiusVelocity.value = 0), ((this._state & g.ZOOM) === g.ZOOM || (this._state & g.TOUCH_ZOOM) === g.TOUCH_ZOOM || (this._state & g.TOUCH_ZOOM_TRUCK) === g.TOUCH_ZOOM_TRUCK || (this._state & g.TOUCH_ZOOM_SCREEN_PAN) === g.TOUCH_ZOOM_SCREEN_PAN || (this._state & g.TOUCH_ZOOM_OFFSET) === g.TOUCH_ZOOM_OFFSET || (this._state & g.TOUCH_ZOOM_ROTATE) === g.TOUCH_ZOOM_ROTATE) && (this._zoomEnd = this._zoom, this._zoomVelocity.value = 0), ((this._state & g.OFFSET) === g.OFFSET || (this._state & g.TOUCH_OFFSET) === g.TOUCH_OFFSET || (this._state & g.TOUCH_DOLLY_OFFSET) === g.TOUCH_DOLLY_OFFSET || (this._state & g.TOUCH_ZOOM_OFFSET) === g.TOUCH_ZOOM_OFFSET) && (this._focalOffsetEnd.copy(this._focalOffset), this._focalOffsetVelocity.set(0, 0, 0)), this.dispatchEvent({ type: "controlstart" });
    }, f = () => {
      if (!this._enabled || !this._dragNeedsUpdate) return;
      this._dragNeedsUpdate = false, Mn(this._activePointers, pt);
      let x = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement ? this._lockedPointer || this._activePointers[0] : null, E = x ? -x.deltaX : o.x - pt.x, w = x ? -x.deltaY : o.y - pt.y;
      if (o.copy(pt), ((this._state & g.ROTATE) === g.ROTATE || (this._state & g.TOUCH_ROTATE) === g.TOUCH_ROTATE || (this._state & g.TOUCH_DOLLY_ROTATE) === g.TOUCH_DOLLY_ROTATE || (this._state & g.TOUCH_ZOOM_ROTATE) === g.TOUCH_ZOOM_ROTATE) && (this._rotateInternal(E, w), this._isUserControllingRotate = true), (this._state & g.DOLLY) === g.DOLLY || (this._state & g.ZOOM) === g.ZOOM) {
        let C = this.dollyToCursor ? (s.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0, S = this.dollyToCursor ? (s.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0, P = this.dollyDragInverted ? -1 : 1;
        (this._state & g.DOLLY) === g.DOLLY ? (this._dollyInternal(P * w * Pi, C, S), this._isUserControllingDolly = true) : (this._zoomInternal(P * w * Pi, C, S), this._isUserControllingZoom = true);
      }
      if ((this._state & g.TOUCH_DOLLY) === g.TOUCH_DOLLY || (this._state & g.TOUCH_ZOOM) === g.TOUCH_ZOOM || (this._state & g.TOUCH_DOLLY_TRUCK) === g.TOUCH_DOLLY_TRUCK || (this._state & g.TOUCH_ZOOM_TRUCK) === g.TOUCH_ZOOM_TRUCK || (this._state & g.TOUCH_DOLLY_SCREEN_PAN) === g.TOUCH_DOLLY_SCREEN_PAN || (this._state & g.TOUCH_ZOOM_SCREEN_PAN) === g.TOUCH_ZOOM_SCREEN_PAN || (this._state & g.TOUCH_DOLLY_OFFSET) === g.TOUCH_DOLLY_OFFSET || (this._state & g.TOUCH_ZOOM_OFFSET) === g.TOUCH_ZOOM_OFFSET || (this._state & g.TOUCH_DOLLY_ROTATE) === g.TOUCH_DOLLY_ROTATE || (this._state & g.TOUCH_ZOOM_ROTATE) === g.TOUCH_ZOOM_ROTATE) {
        let C = pt.x - this._activePointers[1].clientX, S = pt.y - this._activePointers[1].clientY, P = Math.sqrt(C * C + S * S), R = a.y - P;
        a.set(0, P);
        let F = this.dollyToCursor ? (o.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0, O = this.dollyToCursor ? (o.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;
        (this._state & g.TOUCH_DOLLY) === g.TOUCH_DOLLY || (this._state & g.TOUCH_DOLLY_ROTATE) === g.TOUCH_DOLLY_ROTATE || (this._state & g.TOUCH_DOLLY_TRUCK) === g.TOUCH_DOLLY_TRUCK || (this._state & g.TOUCH_DOLLY_SCREEN_PAN) === g.TOUCH_DOLLY_SCREEN_PAN || (this._state & g.TOUCH_DOLLY_OFFSET) === g.TOUCH_DOLLY_OFFSET ? (this._dollyInternal(R * Pi, F, O), this._isUserControllingDolly = true) : (this._zoomInternal(R * Pi, F, O), this._isUserControllingZoom = true);
      }
      ((this._state & g.TRUCK) === g.TRUCK || (this._state & g.TOUCH_TRUCK) === g.TOUCH_TRUCK || (this._state & g.TOUCH_DOLLY_TRUCK) === g.TOUCH_DOLLY_TRUCK || (this._state & g.TOUCH_ZOOM_TRUCK) === g.TOUCH_ZOOM_TRUCK) && (this._truckInternal(E, w, false, false), this._isUserControllingTruck = true), ((this._state & g.SCREEN_PAN) === g.SCREEN_PAN || (this._state & g.TOUCH_SCREEN_PAN) === g.TOUCH_SCREEN_PAN || (this._state & g.TOUCH_DOLLY_SCREEN_PAN) === g.TOUCH_DOLLY_SCREEN_PAN || (this._state & g.TOUCH_ZOOM_SCREEN_PAN) === g.TOUCH_ZOOM_SCREEN_PAN) && (this._truckInternal(E, w, false, true), this._isUserControllingTruck = true), ((this._state & g.OFFSET) === g.OFFSET || (this._state & g.TOUCH_OFFSET) === g.TOUCH_OFFSET || (this._state & g.TOUCH_DOLLY_OFFSET) === g.TOUCH_DOLLY_OFFSET || (this._state & g.TOUCH_ZOOM_OFFSET) === g.TOUCH_ZOOM_OFFSET) && (this._truckInternal(E, w, true, false), this._isUserControllingOffset = true), this.dispatchEvent({ type: "control" });
    }, _ = () => {
      Mn(this._activePointers, pt), o.copy(pt), this._dragNeedsUpdate = false, (this._activePointers.length === 0 || this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer) && (this._isDragging = false), this._activePointers.length === 0 && this._domElement && (this._domElement.ownerDocument.removeEventListener("pointermove", c, { passive: false }), this._domElement.ownerDocument.removeEventListener("pointerup", l), this.dispatchEvent({ type: "controlend" }));
    };
    this.lockPointer = () => {
      !this._enabled || !this._domElement || (this.cancel(), this._lockedPointer = { pointerId: -1, clientX: 0, clientY: 0, deltaX: 0, deltaY: 0, mouseButton: null }, this._activePointers.push(this._lockedPointer), this._domElement.ownerDocument.removeEventListener("pointermove", c, { passive: false }), this._domElement.ownerDocument.removeEventListener("pointerup", l), this._domElement.requestPointerLock(), this._domElement.ownerDocument.addEventListener("pointerlockchange", y), this._domElement.ownerDocument.addEventListener("pointerlockerror", M), this._domElement.ownerDocument.addEventListener("pointermove", c, { passive: false }), this._domElement.ownerDocument.addEventListener("pointerup", l), p());
    }, this.unlockPointer = () => {
      var _a42, _b, _c5;
      this._lockedPointer !== null && (this._disposePointer(this._lockedPointer), this._lockedPointer = null), (_a42 = this._domElement) == null ? void 0 : _a42.ownerDocument.exitPointerLock(), (_b = this._domElement) == null ? void 0 : _b.ownerDocument.removeEventListener("pointerlockchange", y), (_c5 = this._domElement) == null ? void 0 : _c5.ownerDocument.removeEventListener("pointerlockerror", M), this.cancel();
    };
    let y = () => {
      this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement || this.unlockPointer();
    }, M = () => {
      this.unlockPointer();
    };
    this._addAllEventListeners = (v) => {
      this._domElement = v, this._domElement.style.touchAction = "none", this._domElement.style.userSelect = "none", this._domElement.style.webkitUserSelect = "none", this._domElement.addEventListener("pointerdown", h), this._domElement.addEventListener("pointercancel", l), this._domElement.addEventListener("wheel", m, { passive: false }), this._domElement.addEventListener("contextmenu", u);
    }, this._removeAllEventListeners = () => {
      this._domElement && (this._domElement.style.touchAction = "", this._domElement.style.userSelect = "", this._domElement.style.webkitUserSelect = "", this._domElement.removeEventListener("pointerdown", h), this._domElement.removeEventListener("pointercancel", l), this._domElement.removeEventListener("wheel", m, { passive: false }), this._domElement.removeEventListener("contextmenu", u), this._domElement.ownerDocument.removeEventListener("pointermove", c, { passive: false }), this._domElement.ownerDocument.removeEventListener("pointerup", l), this._domElement.ownerDocument.removeEventListener("pointerlockchange", y), this._domElement.ownerDocument.removeEventListener("pointerlockerror", M));
    }, this.cancel = () => {
      this._state !== g.NONE && (this._state = g.NONE, this._activePointers.length = 0, _());
    }, this.connect(n.dom_element), this.update(0);
  }
  static get ACTION() {
    return g;
  }
  get position() {
    return this._camera.position;
  }
  get orientation() {
    return this._camera.quaternion;
  }
  get direction() {
    return this._getCameraDirection(new D()).normalize();
  }
  updateTransform(t, e) {
    this._camera.position.fromArray(t), this._camera.quaternion.fromArray(e), this.applyCameraUp(), this._needsUpdate = true;
  }
  set aspectRatio(t) {
    this._aspectRatio = t, this._camera.updateProjectionMatrix(this._aspectRatio), this._needsUpdate = true;
  }
  get enabled() {
    return this._enabled;
  }
  set enabled(t) {
    this._enabled = t, this._domElement && (t ? (this._domElement.style.touchAction = "none", this._domElement.style.userSelect = "none", this._domElement.style.webkitUserSelect = "none") : (this.cancel(), this._domElement.style.touchAction = "", this._domElement.style.userSelect = "", this._domElement.style.webkitUserSelect = ""));
  }
  get active() {
    return !this._hasRested;
  }
  get currentAction() {
    return this._state;
  }
  get distance() {
    return this._spherical.radius;
  }
  set distance(t) {
    this._spherical.radius === t && this._sphericalEnd.radius === t || (this._spherical.radius = t, this._sphericalEnd.radius = t, this._needsUpdate = true);
  }
  get azimuthAngle() {
    return this._spherical.theta;
  }
  set azimuthAngle(t) {
    this._spherical.theta === t && this._sphericalEnd.theta === t || (this._spherical.theta = t, this._sphericalEnd.theta = t, this._needsUpdate = true);
  }
  get polarAngle() {
    return this._spherical.phi;
  }
  set polarAngle(t) {
    this._spherical.phi === t && this._sphericalEnd.phi === t || (this._spherical.phi = t, this._sphericalEnd.phi = t, this._needsUpdate = true);
  }
  get boundaryEnclosesCamera() {
    return this._boundaryEnclosesCamera;
  }
  set boundaryEnclosesCamera(t) {
    this._boundaryEnclosesCamera = t, this._needsUpdate = true;
  }
  set interactiveArea(t) {
    this._interactiveArea.width = St(t.width, 0, 1), this._interactiveArea.height = St(t.height, 0, 1), this._interactiveArea.x = St(t.x, 0, 1 - this._interactiveArea.width), this._interactiveArea.y = St(t.y, 0, 1 - this._interactiveArea.height);
  }
  addEventListener(t, e) {
    super.addEventListener(t, e);
  }
  removeEventListener(t, e) {
    super.removeEventListener(t, e);
  }
  rotate(t, e, n = false) {
    return this.rotateTo(this._sphericalEnd.theta + t, this._sphericalEnd.phi + e, n);
  }
  rotateAzimuthTo(t, e = false) {
    return this.rotateTo(t, this._sphericalEnd.phi, e);
  }
  rotatePolarTo(t, e = false) {
    return this.rotateTo(this._sphericalEnd.theta, t, e);
  }
  rotateTo(t, e, n = false) {
    this._isUserControllingRotate = false;
    let r = St(t, this.minAzimuthAngle, this.maxAzimuthAngle), s = St(e, this.minPolarAngle, this.maxPolarAngle);
    this._sphericalEnd.theta = r, this._sphericalEnd.phi = s, this._sphericalEnd.makeSafe(), this._needsUpdate = true, n || (this._spherical.theta = this._sphericalEnd.theta, this._spherical.phi = this._sphericalEnd.phi);
    let o = !n || G(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && G(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);
    return this._createOnRestPromise(o);
  }
  dolly(t, e = false) {
    return this.dollyTo(this._sphericalEnd.radius - t, e);
  }
  dollyTo(t, e = false) {
    return this._isUserControllingDolly = false, this._lastDollyDirection = ve.NONE, this._changedDolly = 0, this._dollyToNoClamp(St(t, this.minDistance, this.maxDistance), e);
  }
  _dollyToNoClamp(t, e = false) {
    this._sphericalEnd.radius = t, this._needsUpdate = true, e || (this._spherical.radius = this._sphericalEnd.radius);
    let n = !e || G(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);
    return this._createOnRestPromise(n);
  }
  dollyInFixed(t, e = false) {
    this._targetEnd.add(this._getCameraDirection(bn).multiplyScalar(t)), e || this._target.copy(this._targetEnd);
    let n = !e || G(this._target.x, this._targetEnd.x, this.restThreshold) && G(this._target.y, this._targetEnd.y, this.restThreshold) && G(this._target.z, this._targetEnd.z, this.restThreshold);
    return this._createOnRestPromise(n);
  }
  zoom(t, e = false) {
    return this.zoomTo(this._zoomEnd + t, e);
  }
  zoomTo(t, e = false) {
    this._isUserControllingZoom = false, this._zoomEnd = St(t, this.minZoom, this.maxZoom), this._needsUpdate = true, e || (this._zoom = this._zoomEnd);
    let n = !e || G(this._zoom, this._zoomEnd, this.restThreshold);
    return this._changedZoom = 0, this._createOnRestPromise(n);
  }
  pan(t, e, n = false) {
    return console.warn("`pan` has been renamed to `truck`"), this.truck(t, e, n);
  }
  truck(t, e, n = false) {
    this._camera.updateMatrix(), It.setFromMatrixColumn(this._camera.matrix, 0), Nt.setFromMatrixColumn(this._camera.matrix, 1), It.multiplyScalar(t), Nt.multiplyScalar(-e);
    let r = B.copy(It).add(Nt), s = Y.copy(this._targetEnd).add(r);
    return this.moveTo(s.x, s.y, s.z, n);
  }
  forward(t, e = false) {
    B.setFromMatrixColumn(this._camera.matrix, 0), B.crossVectors(this._camera.up, B), B.multiplyScalar(t);
    let n = Y.copy(this._targetEnd).add(B);
    return this.moveTo(n.x, n.y, n.z, e);
  }
  elevate(t, e = false) {
    return B.copy(this._camera.up).multiplyScalar(t), this.moveTo(this._targetEnd.x + B.x, this._targetEnd.y + B.y, this._targetEnd.z + B.z, e);
  }
  moveTo(t, e, n, r = false) {
    this._isUserControllingTruck = false;
    let s = B.set(t, e, n).sub(this._targetEnd);
    this._encloseToBoundary(this._targetEnd, s, this.boundaryFriction), this._needsUpdate = true, r || this._target.copy(this._targetEnd);
    let o = !r || G(this._target.x, this._targetEnd.x, this.restThreshold) && G(this._target.y, this._targetEnd.y, this.restThreshold) && G(this._target.z, this._targetEnd.z, this.restThreshold);
    return this._createOnRestPromise(o);
  }
  lookInDirectionOf(t, e, n, r = false) {
    let a = B.set(t, e, n).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);
    return this.setPosition(a.x, a.y, a.z, r);
  }
  fitToBox(t, e, { cover: n = false, paddingLeft: r = 0, paddingRight: s = 0, paddingBottom: o = 0, paddingTop: a = 0 } = {}) {
    let h = [];
    t.isEmpty() && (console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"), Promise.resolve());
    let c = qr(this._sphericalEnd.theta, Gr), l = qr(this._sphericalEnd.phi, Gr);
    h.push(this.rotateTo(c, l, e));
    let d = B.setFromSpherical(this._sphericalEnd).normalize(), m = kh.setFromUnitVectors(d, Kr), u = G(Math.abs(d.y), 1);
    u && m.multiply(Qr.setFromAxisAngle(Tn, c)), m.multiply(this._yAxisUpSpaceInverse);
    let p = Uh.makeEmpty();
    Y.copy(t.min).applyQuaternion(m), p.expandByPoint(Y), Y.copy(t.min).setX(t.max.x).applyQuaternion(m), p.expandByPoint(Y), Y.copy(t.min).setY(t.max.y).applyQuaternion(m), p.expandByPoint(Y), Y.copy(t.max).setZ(t.min.z).applyQuaternion(m), p.expandByPoint(Y), Y.copy(t.min).setZ(t.max.z).applyQuaternion(m), p.expandByPoint(Y), Y.copy(t.max).setY(t.min.y).applyQuaternion(m), p.expandByPoint(Y), Y.copy(t.max).setX(t.min.x).applyQuaternion(m), p.expandByPoint(Y), Y.copy(t.max).applyQuaternion(m), p.expandByPoint(Y), p.min.x -= r, p.min.y -= o, p.max.x += s, p.max.y += a, m.setFromUnitVectors(Kr, d), u && m.premultiply(Qr.invert()), m.premultiply(this._yAxisUpSpace);
    let f = p.getSize(B), _ = p.getCenter(Y).applyQuaternion(m);
    if (oe(this._camera)) {
      let y = this.getDistanceToFitBox(f.x, f.y, f.z, n);
      h.push(this.moveTo(_.x, _.y, _.z, e)), h.push(this.dollyTo(y, e)), h.push(this.setFocalOffset(0, 0, 0, e));
    } else if (Bt(this._camera)) {
      let y = this._camera, M = y.right - y.left, v = y.top - y.bottom, x = n ? Math.max(M / f.x, v / f.y) : Math.min(M / f.x, v / f.y);
      h.push(this.moveTo(_.x, _.y, _.z, e)), h.push(this.zoomTo(x, e)), h.push(this.setFocalOffset(0, 0, 0, e));
    }
    return Promise.all(h);
  }
  fitToSphere(t, e) {
    let n = [];
    if (n.push(this.moveTo(t.center.x, t.center.y, t.center.z, e)), oe(this._camera)) {
      let r = this.getDistanceToFitSphere(t.radius);
      n.push(this.dollyTo(r, e));
    } else if (Bt(this._camera)) {
      let r = this._camera.right - this._camera.left, s = this._camera.top - this._camera.bottom, o = 2 * t.radius, a = Math.min(r / o, s / o);
      n.push(this.zoomTo(a, e));
    }
    return n.push(this.setFocalOffset(0, 0, 0, e)), Promise.all(n);
  }
  setLookAt(t, e, n, r, s, o, a = false) {
    this._isUserControllingRotate = false, this._isUserControllingDolly = false, this._isUserControllingTruck = false, this._lastDollyDirection = ve.NONE, this._changedDolly = 0;
    let h = Y.set(r, s, o), c = B.set(t, e, n);
    this._targetEnd.copy(h), this._sphericalEnd.setFromVector3(c.sub(h).applyQuaternion(this._yAxisUpSpace)), this.normalizeRotations(), this._needsUpdate = true, a || (this._target.copy(this._targetEnd), this._spherical.copy(this._sphericalEnd));
    let l = !a || G(this._target.x, this._targetEnd.x, this.restThreshold) && G(this._target.y, this._targetEnd.y, this.restThreshold) && G(this._target.z, this._targetEnd.z, this.restThreshold) && G(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && G(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && G(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);
    return this._createOnRestPromise(l);
  }
  lerpLookAt(t, e, n, r, s, o, a, h, c, l, d, m, u, p = false) {
    this._isUserControllingRotate = false, this._isUserControllingDolly = false, this._isUserControllingTruck = false, this._lastDollyDirection = ve.NONE, this._changedDolly = 0;
    let f = B.set(r, s, o), _ = Y.set(t, e, n);
    At.setFromVector3(_.sub(f).applyQuaternion(this._yAxisUpSpace));
    let y = Oi.set(l, d, m), M = Y.set(a, h, c);
    Di.setFromVector3(M.sub(y).applyQuaternion(this._yAxisUpSpace)), this._targetEnd.copy(f.lerp(y, u));
    let v = Di.theta - At.theta, x = Di.phi - At.phi, E = Di.radius - At.radius;
    this._sphericalEnd.set(At.radius + E * u, At.phi + x * u, At.theta + v * u), this.normalizeRotations(), this._needsUpdate = true, p || (this._target.copy(this._targetEnd), this._spherical.copy(this._sphericalEnd));
    let w = !p || G(this._target.x, this._targetEnd.x, this.restThreshold) && G(this._target.y, this._targetEnd.y, this.restThreshold) && G(this._target.z, this._targetEnd.z, this.restThreshold) && G(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && G(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && G(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);
    return this._createOnRestPromise(w);
  }
  setPosition(t, e, n, r = false) {
    return this.setLookAt(t, e, n, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, r);
  }
  setTarget(t, e, n, r = false) {
    let s = this.getPosition(B), o = this.setLookAt(s.x, s.y, s.z, t, e, n, r);
    return this._sphericalEnd.phi = St(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle), o;
  }
  setFocalOffset(t, e, n, r = false) {
    this._isUserControllingOffset = false, this._focalOffsetEnd.set(t, e, n), this._needsUpdate = true, r || this._focalOffset.copy(this._focalOffsetEnd);
    let s = !r || G(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) && G(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) && G(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);
    return this._createOnRestPromise(s);
  }
  setOrbitPoint(t, e, n) {
    this._camera.updateMatrixWorld(), It.setFromMatrixColumn(this._camera.matrixWorldInverse, 0), Nt.setFromMatrixColumn(this._camera.matrixWorldInverse, 1), xe.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);
    let r = B.set(t, e, n), s = r.distanceTo(this._camera.position), o = r.sub(this._camera.position);
    It.multiplyScalar(o.x), Nt.multiplyScalar(o.y), xe.multiplyScalar(o.z), B.copy(It).add(Nt).add(xe), B.z = B.z + s, this.dollyTo(s, false), this.setFocalOffset(-B.x, B.y, -B.z, false), this.moveTo(t, e, n, false);
  }
  setBoundary(t) {
    if (!t) {
      this._boundary.min.set(-1 / 0, -1 / 0, -1 / 0), this._boundary.max.set(1 / 0, 1 / 0, 1 / 0), this._needsUpdate = true;
      return;
    }
    this._boundary.copy(t), this._boundary.clampPoint(this._targetEnd, this._targetEnd), this._needsUpdate = true;
  }
  setViewport(t, e, n, r) {
    if (t === null) {
      this._viewport = null;
      return;
    }
    this._viewport = this._viewport || new Ai(), typeof t == "number" ? this._viewport.set(t, e, n, r) : this._viewport.copy(t);
  }
  getDistanceToFitBox(t, e, n, r = false) {
    if (Zr(this._camera, "getDistanceToFitBox")) return this._spherical.radius;
    let s = t / e, o = this._camera.lens.fovy * Ee, a = this._aspectRatio;
    return ((r ? s > a : s < a) ? e : t / a) * 0.5 / Math.tan(o * 0.5) + n * 0.5;
  }
  getDistanceToFitSphere(t) {
    if (Zr(this._camera, "getDistanceToFitSphere")) return this._spherical.radius;
    let e = this._camera.lens.fovy * Ee, n = Math.atan(Math.tan(e * 0.5) * this._aspectRatio) * 2, r = 1 < this._aspectRatio ? e : n;
    return t / Math.sin(r * 0.5);
  }
  getTarget(t, e = true) {
    return (t && t.isVector3 ? t : new D()).copy(e ? this._targetEnd : this._target);
  }
  getPosition(t, e = true) {
    return (t && t.isVector3 ? t : new D()).setFromSpherical(e ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(e ? this._targetEnd : this._target);
  }
  getSpherical(t, e = true) {
    return (t || new se()).copy(e ? this._sphericalEnd : this._spherical);
  }
  getFocalOffset(t, e = true) {
    return (t && t.isVector3 ? t : new D()).copy(e ? this._focalOffsetEnd : this._focalOffset);
  }
  normalizeRotations() {
    this._sphericalEnd.theta = this._sphericalEnd.theta % ge, this._sphericalEnd.theta < 0 && (this._sphericalEnd.theta += ge), this._spherical.theta += ge * Math.round((this._sphericalEnd.theta - this._spherical.theta) / ge);
  }
  stop() {
    this._focalOffset.copy(this._focalOffsetEnd), this._target.copy(this._targetEnd), this._spherical.copy(this._sphericalEnd), this._zoom = this._zoomEnd;
  }
  reset(t = false) {
    if (!G(this._camera.up.x, this._cameraUp0.x) || !G(this._camera.up.y, this._cameraUp0.y) || !G(this._camera.up.z, this._cameraUp0.z)) {
      this._camera.up.copy(this._cameraUp0);
      let n = this.getPosition(B);
      this.updateCameraUp(), this.setPosition(n.x, n.y, n.z);
    }
    let e = [this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, t), this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, t), this.zoomTo(this._zoom0, t)];
    return Promise.all(e);
  }
  saveState() {
    this._cameraUp0.copy(this._camera.up), this.getTarget(this._target0), this.getPosition(this._position0), this._zoom0 = this._zoom, this._focalOffset0.copy(this._focalOffset);
  }
  updateCameraUp() {
    this._yAxisUpSpace.setFromUnitVectors(this._camera.up, Tn), this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();
  }
  applyCameraUp() {
    let t = B.subVectors(this._target, this._camera.position).normalize(), e = Y.crossVectors(t, this._camera.up);
    this._camera.up.crossVectors(e, t).normalize(), this._camera.updateMatrixWorld();
    let n = this.getPosition(B);
    this.updateCameraUp(), this.setPosition(n.x, n.y, n.z);
  }
  update(t) {
    let e = this._sphericalEnd.theta - this._spherical.theta, n = this._sphericalEnd.phi - this._spherical.phi, r = this._sphericalEnd.radius - this._spherical.radius, s = Lh.subVectors(this._targetEnd, this._target), o = Vh.subVectors(this._focalOffsetEnd, this._focalOffset), a = this._zoomEnd - this._zoom;
    if (j(e)) this._thetaVelocity.value = 0, this._spherical.theta = this._sphericalEnd.theta;
    else {
      let l = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;
      this._spherical.theta = Si(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, l, 1 / 0, t), this._needsUpdate = true;
    }
    if (j(n)) this._phiVelocity.value = 0, this._spherical.phi = this._sphericalEnd.phi;
    else {
      let l = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;
      this._spherical.phi = Si(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, l, 1 / 0, t), this._needsUpdate = true;
    }
    if (j(r)) this._radiusVelocity.value = 0, this._spherical.radius = this._sphericalEnd.radius;
    else {
      let l = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;
      this._spherical.radius = Si(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, l, this.maxSpeed, t), this._needsUpdate = true;
    }
    if (j(s.x) && j(s.y) && j(s.z)) this._targetVelocity.set(0, 0, 0), this._target.copy(this._targetEnd);
    else {
      let l = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;
      jr(this._target, this._targetEnd, this._targetVelocity, l, this.maxSpeed, t, this._target), this._needsUpdate = true;
    }
    if (j(o.x) && j(o.y) && j(o.z)) this._focalOffsetVelocity.set(0, 0, 0), this._focalOffset.copy(this._focalOffsetEnd);
    else {
      let l = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;
      jr(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, l, this.maxSpeed, t, this._focalOffset), this._needsUpdate = true;
    }
    if (j(a)) this._zoomVelocity.value = 0, this._zoom = this._zoomEnd;
    else {
      let l = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;
      this._zoom = Si(this._zoom, this._zoomEnd, this._zoomVelocity, l, 1 / 0, t);
    }
    if (this.dollyToCursor) {
      if (oe(this._camera) && this._changedDolly !== 0) {
        let l = this._spherical.radius - this._lastDistance, d = this._camera, m = this._getCameraDirection(bn), u = B.copy(m).cross(d.up).normalize();
        u.lengthSq() === 0 && (u.x = 1);
        let p = Y.crossVectors(u, m), f = this._sphericalEnd.radius * Math.tan(d.lens.fovy * Ee * 0.5), y = (this._sphericalEnd.radius - l - this._sphericalEnd.radius) / this._sphericalEnd.radius, M = Oi.copy(this._targetEnd).add(u.multiplyScalar(this._dollyControlCoord.x * f * this._aspectRatio)).add(p.multiplyScalar(this._dollyControlCoord.y * f)), v = B.copy(this._targetEnd).lerp(M, y), x = this._lastDollyDirection === ve.IN && this._spherical.radius <= this.minDistance, E = this._lastDollyDirection === ve.OUT && this.maxDistance <= this._spherical.radius;
        if (this.infinityDolly && (x || E)) {
          this._sphericalEnd.radius -= l, this._spherical.radius -= l;
          let C = Y.copy(m).multiplyScalar(-l);
          v.add(C);
        }
        this._boundary.clampPoint(v, v);
        let w = Y.subVectors(v, this._targetEnd);
        this._targetEnd.copy(v), this._target.add(w), this._changedDolly -= l, j(this._changedDolly) && (this._changedDolly = 0);
      } else if (Bt(this._camera) && this._changedZoom !== 0) {
        let l = this._zoom - this._lastZoom, d = this._camera, m = Oh(B.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (d.lens.zNear + d.lens.zFar) / (d.lens.zNear - d.lens.zFar)), d), u = Y.set(0, 0, -1).applyQuaternion(d.quaternion), p = Oi.copy(m).add(u.multiplyScalar(-m.dot(d.up))), _ = -(this._zoom - l - this._zoom) / this._zoom, y = this._getCameraDirection(bn), M = this._targetEnd.dot(y), v = B.copy(this._targetEnd).lerp(p, _), x = v.dot(y), E = y.multiplyScalar(x - M);
        v.sub(E), this._boundary.clampPoint(v, v);
        let w = Y.subVectors(v, this._targetEnd);
        this._targetEnd.copy(v), this._target.add(w), this._changedZoom -= l, j(this._changedZoom) && (this._changedZoom = 0);
      }
    }
    this._camera.zoom !== this._zoom && (this._camera.zoom = this._zoom, this._camera.updateProjectionMatrix(this._aspectRatio), this._updateNearPlaneCorners(), this._needsUpdate = true), this._dragNeedsUpdate = true, this._spherical.makeSafe(), this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target), this._camera.lookAt(this._target), (!j(this._focalOffset.x) || !j(this._focalOffset.y) || !j(this._focalOffset.z)) && (this._camera.updateMatrixWorld(), It.setFromMatrixColumn(this._camera.matrix, 0), Nt.setFromMatrixColumn(this._camera.matrix, 1), xe.setFromMatrixColumn(this._camera.matrix, 2), It.multiplyScalar(this._focalOffset.x), Nt.multiplyScalar(-this._focalOffset.y), xe.multiplyScalar(this._focalOffset.z), B.copy(It).add(Nt).add(xe), this._camera.position.add(B)), this._boundaryEnclosesCamera && this._encloseToBoundary(this._camera.position.copy(this._target), B.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1);
    let c = this._needsUpdate;
    return c && !this._updatedLastTime ? (this._hasRested = false, this.dispatchEvent({ type: "wake" }), this.dispatchEvent({ type: "update" })) : c ? (this.dispatchEvent({ type: "update" }), j(e, this.restThreshold) && j(n, this.restThreshold) && j(r, this.restThreshold) && j(s.x, this.restThreshold) && j(s.y, this.restThreshold) && j(s.z, this.restThreshold) && j(o.x, this.restThreshold) && j(o.y, this.restThreshold) && j(o.z, this.restThreshold) && j(a, this.restThreshold) && !this._hasRested && (this._hasRested = true, this.dispatchEvent({ type: "rest" }))) : !c && this._updatedLastTime && this.dispatchEvent({ type: "sleep" }), this._lastDistance = this._spherical.radius, this._lastZoom = this._zoom, this._updatedLastTime = c, this._needsUpdate = false, c;
  }
  toJSON() {
    return JSON.stringify({ enabled: this._enabled, minDistance: this.minDistance, maxDistance: Ue(this.maxDistance), minZoom: this.minZoom, maxZoom: Ue(this.maxZoom), minPolarAngle: this.minPolarAngle, maxPolarAngle: Ue(this.maxPolarAngle), minAzimuthAngle: Ue(this.minAzimuthAngle), maxAzimuthAngle: Ue(this.maxAzimuthAngle), smoothTime: this.smoothTime, draggingSmoothTime: this.draggingSmoothTime, dollySpeed: this.dollySpeed, truckSpeed: this.truckSpeed, scaleTruckSpeed: this.scaleTruckSpeed, dollyToCursor: this.dollyToCursor, target: this._targetEnd.toArray(), position: B.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(), zoom: this._zoomEnd, focalOffset: this._focalOffsetEnd.toArray(), target0: this._target0.toArray(), position0: this._position0.toArray(), zoom0: this._zoom0, focalOffset0: this._focalOffset0.toArray() });
  }
  fromJSON(t, e = false) {
    let n = JSON.parse(t);
    this.enabled = n.enabled, this.minDistance = n.minDistance, this.maxDistance = ke(n.maxDistance), this.minZoom = n.minZoom, this.maxZoom = ke(n.maxZoom), this.minPolarAngle = n.minPolarAngle, this.maxPolarAngle = ke(n.maxPolarAngle), this.minAzimuthAngle = ke(n.minAzimuthAngle), this.maxAzimuthAngle = ke(n.maxAzimuthAngle), this.smoothTime = n.smoothTime, this.draggingSmoothTime = n.draggingSmoothTime, this.dollySpeed = n.dollySpeed, this.truckSpeed = n.truckSpeed, this.scaleTruckSpeed = n.scaleTruckSpeed, this.dollyToCursor = n.dollyToCursor, this._target0.fromArray(n.target0), this._position0.fromArray(n.position0), this._zoom0 = n.zoom0, this._focalOffset0.fromArray(n.focalOffset0), this.moveTo(n.target[0], n.target[1], n.target[2], e), At.setFromVector3(B.fromArray(n.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)), this.rotateTo(At.theta, At.phi, e), this.dollyTo(At.radius, e), this.zoomTo(n.zoom, e), this.setFocalOffset(n.focalOffset[0], n.focalOffset[1], n.focalOffset[2], e), this._needsUpdate = true;
  }
  connect(t) {
    if (this._domElement) {
      console.warn("camera-controls is already connected.");
      return;
    }
    t.setAttribute("data-camera-controls-version", zh), this._addAllEventListeners(t), this._getClientRect(this._elementRect);
  }
  disconnect() {
    this.cancel(), this._removeAllEventListeners(), this._domElement && (this._domElement.removeAttribute("data-camera-controls-version"), this._domElement = void 0);
  }
  dispose() {
    this.removeAllEventListeners(), this.disconnect();
  }
  _getTargetDirection(t) {
    return t.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);
  }
  _getCameraDirection(t) {
    return this._getTargetDirection(t).negate();
  }
  _findPointerById(t) {
    return this._activePointers.find((e) => e.pointerId === t);
  }
  _findPointerByMouseButton(t) {
    return this._activePointers.find((e) => e.mouseButton === t);
  }
  _disposePointer(t) {
    this._activePointers.splice(this._activePointers.indexOf(t), 1);
  }
  _encloseToBoundary(t, e, n) {
    let r = e.lengthSq();
    if (r === 0) return t;
    let s = Y.copy(e).add(t), a = this._boundary.clampPoint(s, Oi).sub(s), h = a.lengthSq();
    if (h === 0) return t.add(e);
    if (h === r) return t;
    if (n === 0) return t.add(e).add(a);
    {
      let c = 1 + n * h / e.dot(a);
      return t.add(Y.copy(e).multiplyScalar(c)).add(a.multiplyScalar(1 - n));
    }
  }
  _updateNearPlaneCorners() {
    if (oe(this._camera)) {
      let t = this._camera, e = t.lens.nearPlane, n = t.lens.fovy * Ee, r = Math.tan(n * 0.5) * e, s = r * this._aspectRatio;
      this._nearPlaneCorners[0].set(-s, -r, 0), this._nearPlaneCorners[1].set(s, -r, 0), this._nearPlaneCorners[2].set(s, r, 0), this._nearPlaneCorners[3].set(-s, r, 0);
    } else if (Bt(this._camera)) {
      let t = this._camera, e = 1 / t.zoom, n = t.left * e, r = t.right * e, s = t.top * e, o = t.bottom * e;
      this._nearPlaneCorners[0].set(n, s, 0), this._nearPlaneCorners[1].set(r, s, 0), this._nearPlaneCorners[2].set(r, o, 0), this._nearPlaneCorners[3].set(n, o, 0);
    }
  }
  _getClientRect(t) {
    if (!this._domElement) return;
    let e = this._domElement.getBoundingClientRect();
    return t.x = e.left, t.y = e.top, this._viewport ? (t.x += this._viewport.x, t.y += e.height - this._viewport.w - this._viewport.y, t.width = this._viewport.z, t.height = this._viewport.w) : (t.width = e.width, t.height = e.height), t;
  }
  _createOnRestPromise(t) {
    return t ? Promise.resolve() : (this._hasRested = false, this.dispatchEvent({ type: "transitionstart" }), new Promise((e) => {
      let n = () => {
        this.removeEventListener("rest", n), e();
      };
      this.addEventListener("rest", n);
    }));
  }
  _addAllEventListeners(t) {
  }
  _removeAllEventListeners() {
  }
  get dampingFactor() {
    return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."), 0;
  }
  set dampingFactor(t) {
    console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.");
  }
  get draggingDampingFactor() {
    return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."), 0;
  }
  set draggingDampingFactor(t) {
    console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.");
  }
};
var Ie;
(function(i8) {
  i8.HOLD_START = "holdStart", i8.HOLD_END = "holdEnd", i8.HOLDING = "holding";
})(Ie || (Ie = {}));
var Rn = class {
  constructor() {
    __publicField(this, "_listeners", {});
  }
  addEventListener(t, e) {
    let n = this._listeners;
    n[t] === void 0 && (n[t] = []), n[t].indexOf(e) === -1 && n[t].push(e);
  }
  removeEventListener(t, e) {
    let r = this._listeners[t];
    if (r !== void 0) {
      let s = r.indexOf(e);
      s !== -1 && r.splice(s, 1);
    }
  }
  dispatchEvent(t) {
    let n = this._listeners[t.type];
    if (n !== void 0) {
      t.target = this;
      let r = n.slice(0);
      for (let s = 0, o = r.length; s < o; s++) r[s].call(this, t);
    }
  }
};
var An = class extends Rn {
  constructor(t) {
    super();
    __publicField(this, "holdIntervalDelay");
    __publicField(this, "_enabled", true);
    __publicField(this, "_holding", false);
    __publicField(this, "_intervalId", -1);
    __publicField(this, "_deltaTime", 0);
    __publicField(this, "_elapsedTime", 0);
    __publicField(this, "_lastTime", 0);
    __publicField(this, "_holdStart", (t) => {
      if (!this._enabled || this._holding) return;
      this._deltaTime = 0, this._elapsedTime = 0, this._lastTime = performance.now(), this.dispatchEvent({ type: Ie.HOLD_START, deltaTime: this._deltaTime, elapsedTime: this._elapsedTime, originalEvent: t }), this._holding = true;
      let e = () => {
        this._intervalId = this.holdIntervalDelay ? window.setTimeout(e, this.holdIntervalDelay) : window.requestAnimationFrame(e);
        let n = performance.now();
        this._deltaTime = n - this._lastTime, this._elapsedTime += this._deltaTime, this._lastTime = performance.now(), this.dispatchEvent({ type: Ie.HOLDING, deltaTime: this._deltaTime, elapsedTime: this._elapsedTime, originalEvent: t });
      };
      this._intervalId = this.holdIntervalDelay ? window.setTimeout(e, this.holdIntervalDelay) : window.requestAnimationFrame(e);
    });
    __publicField(this, "_holdEnd", (t) => {
      if (this._holding) {
        let e = performance.now();
        this._deltaTime = e - this._lastTime, this._elapsedTime += this._deltaTime, this._lastTime = performance.now(), this.dispatchEvent({ type: Ie.HOLD_END, deltaTime: this._deltaTime, elapsedTime: this._elapsedTime, originalEvent: t }), this._holding = false;
      }
      window.clearTimeout(this._intervalId), window.cancelAnimationFrame(this._intervalId);
    });
    this.holdIntervalDelay = t;
  }
  get enabled() {
    return this._enabled;
  }
  set enabled(t) {
    this._enabled !== t && (this._enabled = t, this._enabled || this._holdEnd());
  }
  get holding() {
    return this._holding;
  }
};
var lt = class extends An {
  constructor(t, e) {
    if (typeof t != "string") {
      console.error("KeyboardKeyHold: the first argument has to be a KeyboardEvent.code string.");
      return;
    }
    super(e), this._holdStart = this._holdStart.bind(this), this._holdEnd = this._holdEnd.bind(this);
    let n = (s) => {
      Ih(s) || s.code === t && this._holdStart(s);
    }, r = (s) => {
      s.code === t && this._holdEnd(s);
    };
    document.addEventListener("keydown", n), document.addEventListener("keyup", r), window.addEventListener("blur", this._holdEnd);
  }
};
function Ih(i8) {
  let t = i8.target;
  return t.tagName === "INPUT" || t.tagName === "SELECT" || t.tagName === "TEXTAREA" || t.isContentEditable;
}
var yt = { W: "KeyW", A: "KeyA", S: "KeyS", D: "KeyD", E: "KeyE", Q: "KeyQ", ARROW_LEFT: "ArrowLeft", ARROW_UP: "ArrowUp", ARROW_RIGHT: "ArrowRight", ARROW_DOWN: "ArrowDown", SHIFT_RIGHT: "ShiftRight", CONTROL_RIGHT: "ControlRight" };
var vt = 16.666;
var _a30;
var Ui = (_a30 = class {
  constructor(t, e) {
    __publicField(this, "_cameraControls");
    __publicField(this, "_clock");
    __publicField(this, "speedMultiplier", 2e-5);
    __publicField(this, "_truckLeft", (t) => {
      t && (this._cameraControls.truck(-this.speedMultiplier * -this._cameraControls.truckSpeed * t.deltaTime, 0, false), this._updateClock());
    });
    __publicField(this, "_truckRight", (t) => {
      t && (this._cameraControls.truck(this.speedMultiplier * -this._cameraControls.truckSpeed * t.deltaTime, 0, false), this._updateClock());
    });
    __publicField(this, "_moveUp", (t) => {
      t && (this._cameraControls.elevate(this.speedMultiplier * -this._cameraControls.truckSpeed * t.deltaTime, false), this._updateClock());
    });
    __publicField(this, "_moveDown", (t) => {
      t && (this._cameraControls.elevate(-this.speedMultiplier * -this._cameraControls.truckSpeed * t.deltaTime, false), this._updateClock());
    });
    __publicField(this, "_moveFront", (t) => {
      if (!t) return;
      let e = this.speedMultiplier * -this._cameraControls.truckSpeed * t.deltaTime, n = this._cameraControls.direction.multiplyScalar(e);
      n.add(this._cameraControls.getPosition(new D())), this._cameraControls.moveTo(...n.toArray(), false), this._updateClock();
    });
    __publicField(this, "_moveBack", (t) => {
      if (!t) return;
      let e = this.speedMultiplier * this._cameraControls.truckSpeed * t.deltaTime, n = this._cameraControls.direction.multiplyScalar(e);
      n.add(this._cameraControls.getPosition(new D())), this._cameraControls.moveTo(...n.toArray(), false), this._updateClock();
    });
    this._cameraControls = t, this._clock = e, Object.keys(_a30._keys).length === 0 && (_a30._keys = { q: new lt(yt.Q, vt), w: new lt(yt.W, vt), s: new lt(yt.S, vt), a: new lt(yt.A, vt), d: new lt(yt.D, vt), e: new lt(yt.E, vt), up: new lt(yt.ARROW_UP, vt), right: new lt(yt.ARROW_RIGHT, vt), down: new lt(yt.ARROW_DOWN, vt), left: new lt(yt.ARROW_LEFT, vt), shift: new lt(yt.SHIFT_RIGHT, vt), ctrl: new lt(yt.CONTROL_RIGHT, vt) });
    let { w: n, a: r, s, d: o, e: a, q: h, up: c, right: l, down: d, left: m, shift: u, ctrl: p } = _a30._keys;
    r.addEventListener("holding", this._truckLeft), o.addEventListener("holding", this._truckRight), n.addEventListener("holding", this._moveFront), s.addEventListener("holding", this._moveBack), h.addEventListener("holding", this._moveDown), a.addEventListener("holding", this._moveUp), m.addEventListener("holding", this._truckLeft), l.addEventListener("holding", this._truckRight), c.addEventListener("holding", this._moveFront), d.addEventListener("holding", this._moveBack), p.addEventListener("holding", this._moveDown), u.addEventListener("holding", this._moveUp);
  }
  dispose() {
    let { w: t, a: e, s: n, d: r, e: s, q: o, up: a, right: h, down: c, left: l, ctrl: d, shift: m } = _a30._keys;
    e.removeEventListener("holding", this._truckLeft), r.removeEventListener("holding", this._truckRight), t.removeEventListener("holding", this._moveFront), n.removeEventListener("holding", this._moveBack), o.removeEventListener("holding", this._moveDown), s.removeEventListener("holding", this._moveUp), l.removeEventListener("holding", this._truckLeft), h.removeEventListener("holding", this._truckRight), a.removeEventListener("holding", this._moveFront), c.removeEventListener("holding", this._moveBack), d.removeEventListener("holding", this._moveDown), m.removeEventListener("holding", this._moveUp);
  }
  enable() {
    Object.keys(_a30._keys).forEach((t) => {
      _a30._keys[t].enabled = true;
    });
  }
  disable() {
    Object.keys(_a30._keys).forEach((t) => {
      _a30._keys[t].enabled = false;
    });
  }
  _updateClock() {
    let t = this._clock.getDelta();
    return this._cameraControls.update(t);
  }
}, __publicField(_a30, "_keys", {}), _a30);
var ki = class {
  constructor(t = true) {
    __publicField(this, "autoStart");
    __publicField(this, "startTime");
    __publicField(this, "oldTime");
    __publicField(this, "elapsedTime");
    __publicField(this, "running");
    this.autoStart = t, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = false;
  }
  start() {
    this.startTime = $r(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = true;
  }
  stop() {
    this.getElapsedTime(), this.running = false, this.autoStart = false;
  }
  getElapsedTime() {
    return this.getDelta(), this.elapsedTime;
  }
  getDelta() {
    let t = 0;
    if (this.autoStart && !this.running) return this.start(), 0;
    if (this.running) {
      let e = $r();
      t = (e - this.oldTime) / 1e3, this.oldTime = e, this.elapsedTime += t;
    }
    return t;
  }
};
function $r() {
  return performance.now();
}
typeof window < "u" && (window.__LIVELINK__ || (window.__LIVELINK__ = {}), Object.prototype.hasOwnProperty.call(window.__LIVELINK__, "@3dverse/livelink-camera-controls") ? console.warn("⚠️ WARNING ⚠️ Multiple instances of Livelink Camera Controls being imported.") : window.__LIVELINK__["@3dverse/livelink-camera-controls"] = "0.4.10");
var Pn = {};
de(Pn, { fly: () => Bh, orbital: () => Sn, pointer_locked_orbital: () => Nh });
var Sn = Object.freeze({ init_options: { target: [0, 0, 0] } });
var Nh = Object.freeze({ mouseButtons: { left: g.ROTATE, middle: g.DOLLY, wheel: g.DOLLY, right: g.TRUCK }, touches: { one: g.TOUCH_ROTATE, two: g.TOUCH_DOLLY_TRUCK, three: g.TOUCH_TRUCK }, truckSpeed: -2, dollyToCursor: true, infinityDolly: true, minDistance: 0.5, maxDistance: 1 / 0, invert_middle_button_dolly: true, orbit_on_cursor: { enabled: true, cancel_target_offset: true }, lock_pointer: { aim: "on-drag", on_drag_threshold_in_pixels: 10 } });
var Bh = Object.freeze({ mouseButtons: { left: g.SCREEN_PAN, middle: g.TRUCK, wheel: g.SCREEN_PAN, right: g.ROTATE }, touches: { one: g.TOUCH_ROTATE, two: g.TOUCH_TRUCK, three: g.TOUCH_SCREEN_PAN }, truckSpeed: -3 / 1e-3, infinityDolly: true, minDistance: 0.5, maxDistance: 1 / 0, lock_pointer: { aim: "on-drag", on_drag_threshold_in_pixels: 10 }, init_options: { forward_target_distance: 1e-3, keyboard_fly_controls: { enabled: true, speed_multiplier: 2e-6 } } });
var _t21, _i21, _e19, _n18, _r13, _o9, _ts_instances, s_get, a_fn6, c_fn4, _h6, l_fn3, d_fn4, _m2, _u2, _p2, _y2, __, f_fn, v_fn, _x, _E, _g, w_fn, C_fn, _a31;
var ts = (_a31 = class extends Vi {
  constructor({ camera_entity: t, viewport: e, activate: n = true, preset: r = Sn }) {
    super(t.local_transform, Hh(t), e);
    __privateAdd(this, _ts_instances);
    __privateAdd(this, _t21);
    __privateAdd(this, _i21);
    __privateAdd(this, _e19, new ki());
    __privateAdd(this, _n18, null);
    __publicField(this, "invert_middle_button_dolly", false);
    __publicField(this, "orbit_on_cursor", { enabled: false, cancel_target_offset: false });
    __privateAdd(this, _r13, { orbit_point: [0, 0, 0], wheel_timer: 0 });
    __publicField(this, "lock_pointer", { aim: "off", on_drag_threshold_in_pixels: 0 });
    __privateAdd(this, _o9, { count: 0, down_position: null });
    __publicField(this, "init_options", {});
    __publicField(this, "keyboard_fly_controls", null);
    __publicField(this, "onViewportResize", () => {
      this.aspectRatio = __privateGet(this, _i21).aspect_ratio;
    });
    __privateAdd(this, _h6, () => {
      this.position.toArray(__privateGet(this, _t21).global_transform.position), this.orientation.toArray(__privateGet(this, _t21).global_transform.orientation);
    });
    __privateAdd(this, _m2, () => {
      __privateGet(this, _ts_instances, s_get) || __privateMethod(this, _ts_instances, d_fn4).call(this);
    });
    __privateAdd(this, _u2, () => {
      setTimeout(() => {
        __privateMethod(this, _ts_instances, l_fn3).call(this);
      }, 500);
    });
    __privateAdd(this, _p2, (t) => {
      this._domElement && (this.lock_pointer.aim !== "always" && __privateGet(this, _o9).count++, !(__privateGet(this, _ts_instances, s_get) || this.lock_pointer.aim === "off") && (__privateGet(this, _o9).down_position = [t.clientX, t.clientY], this._domElement.addEventListener("mousemove", __privateGet(this, __)), this.lock_pointer.aim !== "always" && this._domElement.addEventListener("mouseup", __privateGet(this, _y2))));
    });
    __privateAdd(this, _y2, (t) => {
      if (__privateGet(this, _o9).count > 0 && __privateGet(this, _o9).count--, !(__privateGet(this, _o9).count > 0 || !this._domElement)) {
        if (!__privateGet(this, _ts_instances, s_get)) {
          this._domElement.removeEventListener("mousemove", __privateGet(this, __));
          return;
        }
        __privateGet(this, _o9).count === 0 && __privateMethod(this, _ts_instances, d_fn4).call(this);
      }
    });
    __privateAdd(this, __, (t) => {
      var _a42;
      let { on_drag_threshold_in_pixels: e } = this.lock_pointer, { down_position: n } = __privateGet(this, _o9);
      if (!n || !this._domElement || __privateGet(this, _ts_instances, s_get)) {
        (_a42 = this._domElement) == null ? void 0 : _a42.removeEventListener("mousemove", __privateGet(this, __));
        return;
      }
      if (e > 0) {
        let { clientX: r, clientY: s } = t;
        if (Math.sqrt(Math.pow(r - n[0], 2) + Math.pow(s - n[1], 2)) < e) return;
      }
      this._domElement.removeEventListener("mousemove", __privateGet(this, __)), __privateMethod(this, _ts_instances, d_fn4).call(this), __privateMethod(this, _ts_instances, l_fn3).call(this);
    });
    __privateAdd(this, _x, (t) => {
      this.invert_middle_button_dolly && t.button === 1 && this.mouseButtons.middle === g.DOLLY && (this.dollySpeed = -Math.abs(this.dollySpeed)), this.orbit_on_cursor.enabled && __privateMethod(this, _ts_instances, v_fn).call(this, t) && __privateMethod(this, _ts_instances, C_fn).call(this, t);
    });
    __privateAdd(this, _E, (t) => {
      this.invert_middle_button_dolly && t.button === 1 && this.mouseButtons.middle === g.DOLLY && (this.dollySpeed = Math.abs(this.dollySpeed));
    });
    __privateAdd(this, _g, (t) => {
      t.stopPropagation();
    });
    __privateSet(this, _t21, t), __privateSet(this, _i21, e), __privateGet(this, _i21).is_camera_controlled_by_current_client = true, __privateMethod(this, _ts_instances, a_fn6).call(this, this, r), __privateMethod(this, _ts_instances, c_fn4).call(this), n && this.activate(), __privateGet(this, _i21).rendering_surface.addEventListener("on-rendering-surface-resized", this.onViewportResize);
  }
  release() {
    var _a42;
    __privateGet(this, _i21).is_camera_controlled_by_current_client = false, __privateGet(this, _i21).rendering_surface.removeEventListener("on-rendering-surface-resized", this.onViewportResize), this.deactivate(), this.dispose(), (_a42 = this.keyboard_fly_controls) == null ? void 0 : _a42.dispose();
  }
  activate() {
    var _a42, _b, _c5, _d2;
    __privateGet(this, _n18) || (__privateSet(this, _n18, setInterval(() => {
      this.update(__privateGet(this, _e19).getDelta());
    }, 1e3 / 60)), (_a42 = this._domElement) == null ? void 0 : _a42.addEventListener("pointerdown", __privateGet(this, _x)), (_b = this._domElement) == null ? void 0 : _b.addEventListener("pointerup", __privateGet(this, _E)), (_c5 = this._domElement) == null ? void 0 : _c5.addEventListener("mousedown", __privateGet(this, _p2)), (_d2 = this.keyboard_fly_controls) == null ? void 0 : _d2.enable());
  }
  deactivate() {
    var _a42, _b, _c5, _d2, _e26, _f2;
    (_a42 = this._domElement) == null ? void 0 : _a42.removeEventListener("pointerdown", __privateGet(this, _x)), (_b = this._domElement) == null ? void 0 : _b.removeEventListener("pointerup", __privateGet(this, _E)), (_c5 = this._domElement) == null ? void 0 : _c5.removeEventListener("mousedown", __privateGet(this, _p2)), (_d2 = this._domElement) == null ? void 0 : _d2.removeEventListener("mouseup", __privateGet(this, _y2)), (_e26 = this._domElement) == null ? void 0 : _e26.removeEventListener("mousemove", __privateGet(this, __)), (_f2 = this.keyboard_fly_controls) == null ? void 0 : _f2.disable(), __privateGet(this, _n18) && (clearInterval(__privateGet(this, _n18)), __privateSet(this, _n18, null));
  }
}, _t21 = new WeakMap(), _i21 = new WeakMap(), _e19 = new WeakMap(), _n18 = new WeakMap(), _r13 = new WeakMap(), _o9 = new WeakMap(), _ts_instances = new WeakSet(), s_get = function() {
  var _a42;
  return ((_a42 = this._domElement) == null ? void 0 : _a42.ownerDocument.pointerLockElement) === this._domElement;
}, a_fn6 = function(t, ...e) {
  let n = (r) => typeof r == "object" && r !== null && !Array.isArray(r);
  return e.forEach((r) => {
    n(r) && Reflect.ownKeys(r).forEach((s) => {
      let o = t[s], a = r[s], h;
      n(o) && n(a) ? h = __privateMethod(this, _ts_instances, a_fn6).call(this, Object.create(Object.getPrototypeOf(o)), o, a) : h = window.structuredClone(a), t[s] = h;
    });
  }), t;
}, c_fn4 = function() {
  let { target: t } = this.init_options;
  t && this.setLookAt(...__privateGet(this, _t21).local_transform.position, ...t);
  let { forward_target_distance: e } = this.init_options;
  if (e !== void 0) {
    let r = new bt(...__privateGet(this, _t21).local_transform.orientation), s = new D(0, 0, -1).applyQuaternion(r);
    s.multiplyScalar(e);
    let o = this.getPosition(new D()).add(s);
    this.setTarget(...o.toArray());
  }
  let { keyboard_fly_controls: n } = this.init_options;
  if (n == null ? void 0 : n.enabled) {
    let { speed_multiplier: r } = n;
    this.keyboard_fly_controls = new Ui(this, __privateGet(this, _e19)), r !== void 0 && (this.keyboard_fly_controls.speedMultiplier = r);
  }
  this.saveState(), this.addEventListener("update", __privateGet(this, _h6));
}, _h6 = new WeakMap(), l_fn3 = function() {
  var _a42, _b;
  if (!this._domElement) return;
  let { ownerDocument: t } = this._domElement;
  __privateGet(this, _ts_instances, s_get) || ((_b = (_a42 = this._domElement).requestPointerLock) == null ? void 0 : _b.call(_a42), t.removeEventListener("pointerlockchange", __privateGet(this, _m2)), t.removeEventListener("pointerlockerror", __privateGet(this, _u2)), t.addEventListener("pointerlockchange", __privateGet(this, _m2)), t.addEventListener("pointerlockerror", __privateGet(this, _u2)));
}, d_fn4 = function() {
  var _a42;
  if (!this._domElement) return;
  let { ownerDocument: t } = this._domElement;
  t.removeEventListener("pointerlockchange", __privateGet(this, _m2)), t.removeEventListener("pointerlockerror", __privateGet(this, _u2)), __privateGet(this, _o9).count = 0, __privateGet(this, _ts_instances, s_get) && ((_a42 = t.exitPointerLock) == null ? void 0 : _a42.call(t));
}, _m2 = new WeakMap(), _u2 = new WeakMap(), _p2 = new WeakMap(), _y2 = new WeakMap(), __ = new WeakMap(), f_fn = function({ event: t, touch_actions: e, mouse_actions: n }) {
  if (e && e.length > 0 && t.pointerType === "touch") {
    let s = e.reduce((o, a) => o | a, 0);
    switch (this._activePointers.length) {
      case 1:
        return (this.touches.one | s) > 0;
      case 2:
        return (this.touches.two | s) > 0;
      case 3:
        return (this.touches.three | s) > 0;
      default:
        return false;
    }
  }
  if (!n || n.length === 0) return false;
  let r = g.NONE;
  switch (t.button) {
    case 0:
      r = this.mouseButtons.left;
      break;
    case 2:
      r = this.mouseButtons.right;
      break;
    case 1:
      r = this.mouseButtons.middle;
      break;
    default:
      return false;
  }
  return n.includes(r);
}, v_fn = function(t) {
  let { ROTATE: e, TOUCH_ROTATE: n, TOUCH_ZOOM_ROTATE: r, TOUCH_DOLLY_ROTATE: s } = g;
  return __privateMethod(this, _ts_instances, f_fn).call(this, { event: t, touch_actions: [n, r, s], mouse_actions: [e] });
}, _x = new WeakMap(), _E = new WeakMap(), _g = new WeakMap(), w_fn = async function(t) {
  var _a42;
  if (!this._domElement) return;
  let { clientX: e, clientY: n } = t, { left: r, top: s } = this._domElement.getBoundingClientRect(), o = [(e - r) / this._domElement.clientWidth, (n - s) / this._domElement.clientHeight], h = (_a42 = await __privateGet(this, _i21).castScreenSpaceRay({ screen_position: o, mode: "None" })) == null ? void 0 : _a42.world_position;
  h ? (__privateGet(this, _r13).orbit_point = h, this.setOrbitPoint(...h)) : this.orbit_on_cursor.cancel_target_offset && this.setOrbitPoint(...__privateGet(this, _r13).orbit_point), this.update(__privateGet(this, _e19).getDelta());
}, C_fn = async function(t) {
  __privateGet(this, _r13).rotate_speed || (__privateGet(this, _r13).rotate_speed = { azimuth: this.azimuthRotateSpeed, polar: this.polarRotateSpeed }), this.polarRotateSpeed = 0, this.azimuthRotateSpeed = 0, document.removeEventListener("pointermove", __privateGet(this, _g), true), document.addEventListener("pointermove", __privateGet(this, _g), { capture: true, once: true });
  try {
    await __privateMethod(this, _ts_instances, w_fn).call(this, t);
  } finally {
    if (document.removeEventListener("pointermove", __privateGet(this, _g), true), __privateGet(this, _r13).rotate_speed) {
      let { azimuth: e, polar: n } = __privateGet(this, _r13).rotate_speed;
      __privateGet(this, _r13).rotate_speed = void 0, this.azimuthRotateSpeed = e, this.polarRotateSpeed = n;
    }
  }
}, _a31);
function Hh(i8) {
  let t = i8.perspective_lens || i8.orthographic_lens;
  if (!t) throw new Error("Camera entity must have a perspective or orthographic lens");
  return t;
}
var Yh = 1e5;
var _t22, _i22, _e20, _n19, _r14, _o10, _s7, _es_instances, a_fn7, c_fn5, h_fn4, l_fn4, d_fn5, m_fn4, _a32;
var es = (_a32 = class {
  constructor({ camera_entity: t, viewport: e }) {
    __privateAdd(this, _es_instances);
    __publicField(this, "camera_entity");
    __publicField(this, "viewport");
    __privateAdd(this, _t22, [0, 0, 0]);
    __privateAdd(this, _i22, [0, 0, 0, 1]);
    __privateAdd(this, _e20, J.create());
    __privateAdd(this, _n19, J.create());
    __privateAdd(this, _r14, J.create());
    __privateAdd(this, _o10, J.create());
    __privateAdd(this, _s7, (t) => {
      t.isAnyComponentDirty({ components: ["perspective_lens", "orthographic_lens"] }) && this.updateProjectionMatrix();
    });
    __privateMethod(this, _es_instances, a_fn7).call(this, { camera_entity: t }), this.camera_entity = t, this.viewport = e, this.updateProjectionMatrix(), t.addEventListener("on-entity-updated", __privateGet(this, _s7));
  }
  get clip_from_view_matrix() {
    return __privateGet(this, _e20);
  }
  get view_from_clip_matrix() {
    return __privateGet(this, _n19);
  }
  get clip_from_world_matrix() {
    return __privateGet(this, _r14);
  }
  get world_from_clip_matrix() {
    return J.invert(J.create(), __privateGet(this, _r14));
  }
  get world_from_view_matrix() {
    return __privateGet(this, _o10);
  }
  get world_position() {
    return __privateGet(this, _t22);
  }
  get world_orientation() {
    return __privateGet(this, _i22);
  }
  get world_euler_orientation() {
    return ie(__privateGet(this, _i22));
  }
  projectWorldToClip({ world_position: t, out_clip_position: e = L.create() }) {
    return L.transformMat4(e, t, __privateGet(this, _r14)), e;
  }
  projectClipToWorld({ clip_position: t, out_world_position: e = L.create() }) {
    return L.transformMat4(e, t, this.world_from_clip_matrix), e;
  }
  computeRayFromScreenPosition({ screen_position: t }) {
    let e = __privateMethod(this, _es_instances, l_fn4).call(this, { screen_position: t });
    return this.computeRayFromClipPosition({ clip_position: e });
  }
  computeRayFromClipPosition({ clip_position: t }) {
    if (this.camera_entity.perspective_lens) return __privateMethod(this, _es_instances, c_fn5).call(this, { clip_position: t });
    if (this.camera_entity.orthographic_lens) return __privateMethod(this, _es_instances, h_fn4).call(this, { lens: this.camera_entity.orthographic_lens, clip_position: t });
    throw new Error("Camera entity must have a perspective or orthographic lens component");
  }
  updateProjectionMatrix() {
    this.camera_entity.perspective_lens ? __privateMethod(this, _es_instances, d_fn5).call(this, { lens: this.camera_entity.perspective_lens }) : this.camera_entity.orthographic_lens && __privateMethod(this, _es_instances, m_fn4).call(this, { lens: this.camera_entity.orthographic_lens }), J.invert(__privateGet(this, _n19), __privateGet(this, _e20));
  }
  updateFromFrameCameraTransform({ frame_camera_transform: t }) {
    __privateSet(this, _t22, t.world_position), __privateSet(this, _i22, t.world_orientation), __privateSet(this, _o10, Array.from(t.world_from_view_matrix));
    let e = __privateGet(this, _r14), n = J.invert(e, t.world_from_view_matrix);
    n || (console.warn("Failed to invert world_from_view_matrix from frame_camera_transform, using identity matrix instead", t), n = J.identity(e)), __privateSet(this, _r14, J.multiply(__privateGet(this, _r14), __privateGet(this, _e20), n));
  }
}, _t22 = new WeakMap(), _i22 = new WeakMap(), _e20 = new WeakMap(), _n19 = new WeakMap(), _r14 = new WeakMap(), _o10 = new WeakMap(), _s7 = new WeakMap(), _es_instances = new WeakSet(), a_fn7 = function({ camera_entity: t }) {
  if (!t.camera) throw new Error("Camera entity must have a camera component");
  if (!t.perspective_lens && !t.orthographic_lens) throw new Error("Camera entity must have a perspective or orthographic lens component");
}, c_fn5 = function({ clip_position: t }) {
  let e = { origin: L.fromValues(...__privateGet(this, _t22)), direction: L.create() };
  return this.projectClipToWorld({ clip_position: t, out_world_position: e.direction }), L.sub(e.direction, e.direction, e.origin), L.normalize(e.direction, e.direction), e;
}, h_fn4 = function({ lens: t, clip_position: e }) {
  let { zNear: n, zFar: r } = t, s = { origin: L.fromValues(e[0], e[1], (n + r) / (n - r)), direction: L.fromValues(0, 0, -1) };
  this.projectClipToWorld({ clip_position: e, out_world_position: s.origin });
  let o = me.fromMat4(me.create(), this.world_from_view_matrix);
  return L.transformMat3(s.direction, s.direction, o), s;
}, l_fn4 = function({ screen_position: t }) {
  return L.fromValues(t[0] * 2 - 1, 1 - t[1] * 2, 0.5);
}, d_fn5 = function({ lens: t }) {
  J.perspective(__privateGet(this, _e20), Vt.toRadian(t.fovy), this.viewport.aspect_ratio, t.nearPlane, t.farPlane || Yh);
}, m_fn4 = function({ lens: t }) {
  J.ortho(__privateGet(this, _e20), -this.viewport.aspect_ratio * t.zoomFactor[0], this.viewport.aspect_ratio * t.zoomFactor[0], -t.zoomFactor[1], t.zoomFactor[1], t.zNear, t.zFar);
}, _a32);
var Qt;
function Gh() {
  Qt = this, Qt || (typeof window < "u" ? Qt = window : typeof self < "u" && (Qt = self));
}
Gh();
var Kt = "https://cdn.3dverse.com/legacy/sdk/avc.wasm";
var qh = function(i8, t) {
  var e = typeof e < "u" ? e : {}, n = {}, r;
  for (r in e) e.hasOwnProperty(r) && (n[r] = e[r]);
  e.arguments = [], e.thisProgram = "./this.program", e.quit = function(T, b) {
    throw b;
  }, e.preRun = [], e.postRun = [];
  var s = false, o = false, a = false, h = false;
  if (e.ENVIRONMENT) if (e.ENVIRONMENT === "WEB") s = true;
  else if (e.ENVIRONMENT === "WORKER") o = true;
  else if (e.ENVIRONMENT === "NODE") a = true;
  else if (e.ENVIRONMENT === "SHELL") h = true;
  else throw new Error("Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.");
  else s = typeof window == "object", o = typeof importScripts == "function", a = typeof process == "object" && false, h = !s && !a && !o;
  if (h) typeof read < "u" && (e.read = function(b) {
    return read(b);
  }), e.readBinary = function(b) {
    var U;
    return typeof readbuffer == "function" ? new Uint8Array(readbuffer(b)) : (U = read(b, "binary"), y(typeof U == "object"), U);
  }, typeof scriptArgs < "u" ? e.arguments = scriptArgs : typeof arguments < "u" && (e.arguments = arguments), typeof quit == "function" && (e.quit = function(T, b) {
    quit(T);
  });
  else if (s || o) e.read = function(b) {
    var U = new XMLHttpRequest();
    return U.open("GET", b, false), U.send(null), U.responseText;
  }, o && (e.readBinary = function(b) {
    var U = new XMLHttpRequest();
    return U.open("GET", b, false), U.responseType = "arraybuffer", U.send(null), new Uint8Array(U.response);
  }), e.readAsync = function(b, U, I) {
    var H = new XMLHttpRequest();
    H.open("GET", b, true), H.responseType = "arraybuffer", H.onload = function() {
      if (H.status == 200 || H.status == 0 && H.response) {
        U(H.response);
        return;
      }
      I();
    }, H.onerror = I, H.send(null);
  }, e.setWindowTitle = function(T) {
    document.title = T;
  };
  else throw new Error("not compiled for this environment");
  e.print = typeof console < "u" ? console.log.bind(console) : typeof print < "u" ? print : null, e.printErr = typeof printErr < "u" ? printErr : typeof console < "u" && console.warn.bind(console) || e.print, e.print = e.print, e.printErr = e.printErr;
  for (r in n) n.hasOwnProperty(r) && (e[r] = n[r]);
  n = void 0;
  var c = 16;
  function l(T) {
    y(!Zi);
    var b = $;
    return $ = $ + T + 15 & -16, b;
  }
  function d(T, b) {
    b || (b = c);
    var U = T = Math.ceil(T / b) * b;
    return U;
  }
  var m = { "f64-rem": function(T, b) {
    return T % b;
  }, debugger: function() {
    debugger;
  } }, u = new Array(0), p = 1024, f = 0, _ = 0;
  function y(T, b) {
    T || Pt("Assertion failed: " + b);
  }
  function M(T, b) {
    if (b === 0 || !T) return "";
    for (var U = 0, I, H = 0; I = O[T + H >> 0], U |= I, !(I == 0 && !b || (H++, b && H == b)); ) ;
    b || (b = H);
    var nt = "";
    if (U < 128) {
      for (var st = 1024, ot; b > 0; ) ot = String.fromCharCode.apply(String, O.subarray(T, T + Math.min(b, st))), nt = nt ? nt + ot : ot, T += st, b -= st;
      return nt;
    }
    return E(T);
  }
  var v = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
  function x(T, b) {
    for (var U = b; T[U]; ) ++U;
    if (U - b > 16 && T.subarray && v) return v.decode(T.subarray(b, U));
    for (var I, H, nt, st, ot, gt, xt = ""; ; ) {
      if (I = T[b++], !I) return xt;
      if (!(I & 128)) {
        xt += String.fromCharCode(I);
        continue;
      }
      if (H = T[b++] & 63, (I & 224) == 192) {
        xt += String.fromCharCode((I & 31) << 6 | H);
        continue;
      }
      if (nt = T[b++] & 63, (I & 240) == 224 ? I = (I & 15) << 12 | H << 6 | nt : (st = T[b++] & 63, (I & 248) == 240 ? I = (I & 7) << 18 | H << 12 | nt << 6 | st : (ot = T[b++] & 63, (I & 252) == 248 ? I = (I & 3) << 24 | H << 18 | nt << 12 | st << 6 | ot : (gt = T[b++] & 63, I = (I & 1) << 30 | H << 24 | nt << 18 | st << 12 | ot << 6 | gt))), I < 65536) xt += String.fromCharCode(I);
      else {
        var Et = I - 65536;
        xt += String.fromCharCode(55296 | Et >> 10, 56320 | Et & 1023);
      }
    }
  }
  function E(T) {
    return x(O, T);
  }
  var w = typeof TextDecoder < "u" ? new TextDecoder("utf-16le") : void 0, C = 65536, S = 16777216;
  function P(T, b) {
    return T % b > 0 && (T += b - T % b), T;
  }
  var R, F, O, V, A, z, N, Q, rt;
  function ht(T) {
    e.buffer = R = T;
  }
  function _t30() {
    e.HEAP8 = F = new Int8Array(R), e.HEAP16 = V = new Int16Array(R), e.HEAP32 = z = new Int32Array(R), e.HEAPU8 = O = new Uint8Array(R), e.HEAPU16 = A = new Uint16Array(R), e.HEAPU32 = N = new Uint32Array(R), e.HEAPF32 = Q = new Float32Array(R), e.HEAPF64 = rt = new Float64Array(R);
  }
  var Z, $, Zi, Ki, qe, Qi, $i, je;
  Z = $ = Ki = qe = Qi = $i = je = 0, Zi = false;
  function In() {
    Pt("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + Jt + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
  }
  function ds() {
    In();
  }
  var Ji = e.TOTAL_STACK || 5242880, Jt = e.TOTAL_MEMORY || 52428800;
  Jt < Ji && e.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + Jt + "! (TOTAL_STACK=" + Ji + ")"), e.buffer ? R = e.buffer : (typeof WebAssembly == "object" && typeof WebAssembly.Memory == "function" ? (e.wasmMemory = new WebAssembly.Memory({ initial: Jt / C, maximum: Jt / C }), R = e.wasmMemory.buffer) : R = new ArrayBuffer(Jt), e.buffer = R), _t30();
  function ms() {
    return Jt;
  }
  if (z[0] = 1668509029, V[1] = 25459, O[2] !== 115 || O[3] !== 99) throw "Runtime error: expected the system to be little-endian!";
  function Te(T) {
    for (; T.length > 0; ) {
      var b = T.shift();
      if (typeof b == "function") {
        b();
        continue;
      }
      var U = b.func;
      typeof U == "number" ? b.arg === void 0 ? e.dynCall_v(U) : e.dynCall_vi(U, b.arg) : U(b.arg === void 0 ? null : b.arg);
    }
  }
  var Nn = [], Bn = [], us = [], ps = [], Hn = [], Yn = false, _s10 = false;
  function fs() {
    if (e.preRun) for (typeof e.preRun == "function" && (e.preRun = [e.preRun]); e.preRun.length; ) Es(e.preRun.shift());
    Te(Nn);
  }
  function ys() {
    Yn || (Yn = true, Te(Bn));
  }
  function vs() {
    Te(us);
  }
  function gs() {
    Te(ps), _s10 = true;
  }
  function xs() {
    if (e.postRun) for (typeof e.postRun == "function" && (e.postRun = [e.postRun]); e.postRun.length; ) ws(e.postRun.shift());
    Te(Hn);
  }
  function Es(T) {
    Nn.unshift(T);
  }
  function ws(T) {
    Hn.unshift(T);
  }
  var Zh = Math.abs, Kh = Math.cos, Qh = Math.sin, $h = Math.tan, Jh = Math.acos, tc = Math.asin, ec = Math.atan, ic = Math.atan2, nc = Math.exp, rc = Math.log, sc = Math.sqrt, oc = Math.ceil, ac = Math.floor, hc = Math.pow, cc = Math.imul, lc = Math.fround, dc = Math.round, mc = Math.min, uc = Math.max, pc = Math.clz32, _c5 = Math.trunc, te = 0, tn = null, be = null;
  function Cs(T) {
    te++, e.monitorRunDependencies && e.monitorRunDependencies(te);
  }
  function Ms(T) {
    if (te--, e.monitorRunDependencies && e.monitorRunDependencies(te), te == 0 && (tn !== null && (clearInterval(tn), tn = null), be)) {
      var b = be;
      be = null, b();
    }
  }
  e.preloadedImages = {}, e.preloadedAudios = {};
  var Gn = "data:application/octet-stream;base64,";
  function Xe(T) {
    return String.prototype.startsWith ? T.startsWith(Gn) : T.indexOf(Gn) === 0;
  }
  function Ts() {
    var T = "avc.wast", b = "avc.temp.asm.js";
    typeof e.locateFile == "function" && (Xe(T) || (T = e.locateFile(T)), Xe(Kt) || (Kt = e.locateFile(Kt)), Xe(b) || (b = e.locateFile(b)));
    var U = 64 * 1024, I = { global: null, env: null, asm2wasm: m, parent: e }, H = null;
    function nt(W) {
      var K = e.buffer;
      W.byteLength < K.byteLength && e.printErr("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here");
      var le = new Int8Array(K), ft = new Int8Array(W);
      ft.set(le), ht(W), _t30();
    }
    function st(W) {
      return W;
    }
    function ot() {
      try {
        if (e.wasmBinary) return new Uint8Array(e.wasmBinary);
        if (e.readBinary) return e.readBinary(Kt);
        throw "on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)";
      } catch (W) {
        Pt(W);
      }
    }
    function gt() {
      return !e.wasmBinary && (s || o) && typeof fetch == "function" ? fetch(Kt, {}).then(function(W) {
        if (!W.ok) throw "failed to load wasm binary file at '" + Kt + "'";
        return W.arrayBuffer();
      }).catch(function() {
        return ot();
      }) : new Promise(function(W, K) {
        W(ot());
      });
    }
    function xt(W, K, le) {
      if (typeof WebAssembly != "object") return e.printErr("no native wasm support detected"), false;
      if (!(e.wasmMemory instanceof WebAssembly.Memory)) return e.printErr("no native wasm Memory in use"), false;
      K.memory = e.wasmMemory, I.global = { NaN: NaN, Infinity: 1 / 0 }, I["global.Math"] = Math, I.env = K;
      function ft(Ot, Ae) {
        H = Ot.exports, H.memory && nt(H.memory), e.asm = H, e.usingWasm = true, Ms("wasm-instantiate");
      }
      if (Cs("wasm-instantiate"), e.instantiateWasm) try {
        return e.instantiateWasm(I, ft);
      } catch (Ot) {
        return e.printErr("Module.instantiateWasm callback failed with error: " + Ot), false;
      }
      function Yt(Ot) {
        ft(Ot.instance, Ot.module);
      }
      function ee(Ot) {
        gt().then(function(Ae) {
          return WebAssembly.instantiate(Ae, I);
        }).then(Ot).catch(function(Ae) {
          e.printErr("failed to asynchronously prepare wasm: " + Ae), Pt(Ae);
        });
      }
      return !e.wasmBinary && typeof WebAssembly.instantiateStreaming == "function" && !Xe(Kt) && typeof fetch == "function" ? WebAssembly.instantiateStreaming(fetch(Kt, {}), I).then(Yt).catch(function(Ot) {
        e.printErr("wasm streaming compile failed: " + Ot), e.printErr("falling back to ArrayBuffer instantiation"), ee(Yt);
      }) : ee(Yt), {};
    }
    e.asmPreload = e.asm;
    var Et = e.reallocBuffer, Re = function(W) {
      var K = e.usingWasm ? C : S;
      W = P(W, K);
      var le = e.buffer, ft = le.byteLength;
      if (e.usingWasm) try {
        var Yt = e.wasmMemory.grow((W - ft) / U);
        return Yt !== -1 ? e.buffer = e.wasmMemory.buffer : null;
      } catch {
        return null;
      }
    };
    e.reallocBuffer = function(W) {
      return ce === "asmjs" ? Et(W) : Re(W);
    };
    var ce = "";
    e.asm = function(W, K, le) {
      if (K = K, !K.table) {
        var ft = e.wasmTableSize;
        ft === void 0 && (ft = 1024);
        var Yt = e.wasmMaxTableSize;
        typeof WebAssembly == "object" && typeof WebAssembly.Table == "function" ? Yt !== void 0 ? K.table = new WebAssembly.Table({ initial: ft, maximum: Yt, element: "anyfunc" }) : K.table = new WebAssembly.Table({ initial: ft, element: "anyfunc" }) : K.table = new Array(ft), e.wasmTable = K.table;
      }
      K.memoryBase || (K.memoryBase = e.STATIC_BASE), K.tableBase || (K.tableBase = 0);
      var ee;
      return ee = xt(W, K, le), y(ee, "no binaryen method succeeded."), ee;
    };
  }
  Ts(), Z = p, $ = Z + 9888, Bn.push();
  var bs = 9888;
  e.STATIC_BASE = Z, e.STATIC_BUMP = bs, $ += 16;
  var tt = { varargs: 0, get: function(T) {
    tt.varargs += 4;
    var b = z[tt.varargs - 4 >> 2];
    return b;
  }, getStr: function() {
    var T = M(tt.get());
    return T;
  }, get64: function() {
    var T = tt.get(), b = tt.get();
    return T >= 0 ? y(b === 0) : y(b === -1), T;
  }, getZero: function() {
    y(tt.get() === 0);
  } };
  function Rs(T, b) {
    tt.varargs = b;
    try {
      var U = tt.getStreamFromFD(), I = tt.get(), H = tt.get(), nt = tt.get(), st = tt.get(), ot = H;
      return FS.llseek(U, ot, st), z[nt >> 2] = U.position, U.getdents && ot === 0 && st === 0 && (U.getdents = null), 0;
    } catch (gt) {
      return (typeof FS > "u" || !(gt instanceof FS.ErrnoError)) && Pt(gt), -gt.errno;
    }
  }
  function he(T, b) {
    tt.varargs = b;
    try {
      var U = tt.get(), I = tt.get(), H = tt.get(), nt = 0;
      he.buffers || (he.buffers = [null, [], []], he.printChar = function(Et, Re) {
        var ce = he.buffers[Et];
        y(ce), Re === 0 || Re === 10 ? ((Et === 1 ? e.print : e.printErr)(x(ce, 0)), ce.length = 0) : ce.push(Re);
      });
      for (var st = 0; st < H; st++) {
        for (var ot = z[I + st * 8 >> 2], gt = z[I + (st * 8 + 4) >> 2], xt = 0; xt < gt; xt++) he.printChar(U, O[ot + xt]);
        nt += gt;
      }
      return nt;
    } catch (Et) {
      return (typeof FS > "u" || !(Et instanceof FS.ErrnoError)) && Pt(Et), -Et.errno;
    }
  }
  function As(T, b) {
    tt.varargs = b;
    try {
      return 0;
    } catch (U) {
      return (typeof FS > "u" || !(U instanceof FS.ErrnoError)) && Pt(U), -U.errno;
    }
  }
  function Ss(T, b) {
    tt.varargs = b;
    try {
      var U = tt.getStreamFromFD();
      return FS.close(U), 0;
    } catch (I) {
      return (typeof FS > "u" || !(I instanceof FS.ErrnoError)) && Pt(I), -I.errno;
    }
  }
  function qn() {
    i8();
  }
  e._broadwayOnHeadersDecoded = qn;
  function jn(T, b, U) {
    t(T, b, U);
  }
  e._broadwayOnPictureDecoded = jn;
  function Ps(T, b, U) {
    return O.set(O.subarray(b, b + U), T), T;
  }
  function Os(T) {
    return e.___errno_location && (z[e.___errno_location() >> 2] = T), T;
  }
  je = l(4), Ki = qe = d($), Qi = Ki + Ji, $i = d(Qi), z[je >> 2] = $i, Zi = true, e.wasmTableSize = 10, e.wasmMaxTableSize = 10, e.asmGlobalArg = {}, e.asmLibraryArg = { abort: Pt, enlargeMemory: ds, getTotalMemory: ms, abortOnCannotGrowMemory: In, ___setErrNo: Os, ___syscall140: Rs, ___syscall146: he, ___syscall54: As, ___syscall6: Ss, _broadwayOnHeadersDecoded: qn, _broadwayOnPictureDecoded: jn, _emscripten_memcpy_big: Ps, DYNAMICTOP_PTR: je, STACKTOP: qe };
  var Xn = e.asm(e.asmGlobalArg, e.asmLibraryArg, R);
  e.asm = Xn;
  var fc = e._broadwayCreateStream = function() {
    return e.asm._broadwayCreateStream.apply(null, arguments);
  }, yc = e._broadwayExit = function() {
    return e.asm._broadwayExit.apply(null, arguments);
  }, vc = e._broadwayGetMajorVersion = function() {
    return e.asm._broadwayGetMajorVersion.apply(null, arguments);
  }, gc = e._broadwayGetMinorVersion = function() {
    return e.asm._broadwayGetMinorVersion.apply(null, arguments);
  }, xc = e._broadwayInit = function() {
    return e.asm._broadwayInit.apply(null, arguments);
  }, Ec = e._broadwayPlayStream = function() {
    return e.asm._broadwayPlayStream.apply(null, arguments);
  };
  e.asm = Xn;
  function We(T) {
    this.name = "ExitStatus", this.message = "Program terminated with exit(" + T + ")", this.status = T;
  }
  We.prototype = new Error(), We.prototype.constructor = We;
  var Ds;
  be = function T() {
    e.calledRun || en(), e.calledRun || (be = T);
  };
  function en(T) {
    if (T = T || e.arguments, te > 0 || (fs(), te > 0) || e.calledRun) return;
    function b() {
      e.calledRun || (e.calledRun = true, !f && (ys(), vs(), e.onRuntimeInitialized && e.onRuntimeInitialized(), xs()));
    }
    e.setStatus ? (e.setStatus("Running..."), setTimeout(function() {
      setTimeout(function() {
        e.setStatus("");
      }, 1), b();
    }, 1)) : b();
  }
  e.run = en;
  function zs(T, b) {
    b && e.noExitRuntime && T === 0 || (e.noExitRuntime || (f = true, _ = T, qe = Ds, gs(), e.onExit && e.onExit(T)), a && process.exit(T), e.quit(T, new We(T)));
  }
  e.exit = zs;
  function Pt(T) {
    throw e.onAbort && e.onAbort(T), T !== void 0 ? (e.print(T), e.printErr(T), T = JSON.stringify(T)) : T = "", f = true, _ = 1, "abort(" + T + "). Build with -s ASSERTIONS=1 for more info.";
  }
  if (e.abort = Pt, e.preInit) for (typeof e.preInit == "function" && (e.preInit = [e.preInit]); e.preInit.length > 0; ) e.preInit.pop()();
  e.noExitRuntime = true, en();
  var Ht;
  typeof Qt < "u" && Qt.Module && (Ht = Qt.Module), typeof e < "u" && (Ht = e), Ht._broadwayOnHeadersDecoded = i8, Ht._broadwayOnPictureDecoded = t;
  var Wn = false, nn, Fs = function() {
    Wn = true, nn && nn(Ht);
  };
  return Ht.onRuntimeInitialized = function() {
    Fs(Ht);
  }, function(T) {
    Wn ? T(Ht) : nn = T;
  };
};
var Dt = function() {
  return (/* @__PURE__ */ new Date()).getTime();
};
typeof performance < "u" && performance.now && (Dt = function() {
  return performance.now();
});
var qi = function(i8) {
  this.options = i8 || {}, this.now = Dt;
  var t, e = {}, n, r, s = (function(d, m, u) {
    var p = this.pictureBuffers[d];
    p || (p = this.pictureBuffers[d] = n(d, m * u * 3 / 2));
    var f, _ = false;
    if (this.infoAr.length && (_ = true, f = this.infoAr), this.infoAr = [], this.options.rgb) {
      t || (t = jh(m, u)), t.inp.set(p), t.doit();
      var y = new Uint8Array(t.outSize);
      y.set(t.out), _ && (f[0].finishDecoding = Dt()), this.onPictureDecoded(y, m, u, f);
      return;
    }
    _ && (f[0].finishDecoding = Dt()), this.onPictureDecoded(p, m, u, f);
  }).bind(this), o = false;
  this.options.sliceMode && (s = (function(d, m, u, p) {
    if (!o) {
      var f = this.pictureBuffers[d];
      f || (f = this.pictureBuffers[d] = n(d, m * u * 3 / 2));
      var _ = this.pictureBuffers[p];
      _ || (_ = this.pictureBuffers[p] = r(p, 18));
      var y, M = false;
      this.infoAr.length && (M = true, y = this.infoAr), this.infoAr = [], y[0].finishDecoding = Dt();
      for (var v = [], x = 0; x < 20; ++x) v.push(_[x]);
      y[0].sliceInfoAr = v, this.onPictureDecoded(f, m, u, y);
    }
  }).bind(this));
  var a = qh.apply(e, [function() {
  }, s]), h = 1024 * 1024, c = this;
  this.onPictureDecoded = function(d, m, u, p) {
  }, this.onDecoderReady = function() {
  };
  var l = [];
  this.decode = function(m, u, p) {
    l.push([m, u, p]);
  }, a(function(d) {
    var m = d.HEAP8, u = d.HEAPU8, p = d.HEAP16, f = d.HEAP32;
    d._broadwayInit(), n = function(M, v) {
      return u.subarray(M, M + v);
    }, r = function(M, v) {
      return new Uint32Array(u.buffer, M, v);
    }, c.streamBuffer = n(d._broadwayCreateStream(h), h), c.pictureBuffers = {}, c.infoAr = [];
    var _ = 0;
    if (c.options.sliceMode ? (_ = c.options.sliceNum, c.decode = function(v, x, E) {
      c.infoAr.push(x), x.startDecoding = Dt();
      var w = x.nals, C;
      if (!w) {
        w = [], x.nals = w;
        var S = v.length, P = false, R = 0, F = 0;
        for (C = 0; C < S; ++C) if (v[C] === 1 && v[C - 1] === 0 && v[C - 2] === 0) {
          var O = C - 2;
          v[C - 3] === 0 && (O = C - 3), P && w.push({ offset: R, end: O, type: v[F] & 31 }), R = O, F = O + 3, v[C - 3] === 0 && (F = O + 4), P = true;
        }
        P && w.push({ offset: R, end: C, type: v[F] & 31 });
      }
      var V = 0, A, z = 0;
      for (C = 0; C < w.length; ++C) w[C].type === 1 || w[C].type === 5 ? (V === _ && (A = v.subarray(w[C].offset, w[C].end), c.streamBuffer[z] = 0, z += 1, c.streamBuffer.set(A, z), z += A.length), V += 1) : (A = v.subarray(w[C].offset, w[C].end), c.streamBuffer[z] = 0, z += 1, c.streamBuffer.set(A, z), z += A.length, d._broadwayPlayStream(z), z = 0);
      E(), d._broadwayPlayStream(z);
    }) : c.decode = function(v, x) {
      x && (c.infoAr.push(x), x.startDecoding = Dt()), c.streamBuffer.set(v), d._broadwayPlayStream(v.length);
    }, l.length) {
      var y = 0;
      for (y = 0; y < l.length; ++y) c.decode(l[y][0], l[y][1], l[y][2]);
      l = [];
    }
    c.onDecoderReady(c);
  });
};
qi.prototype = {};
var On = {};
var jh = function(i8, t) {
  var e = "" + i8 + "x" + t;
  if (On[e]) return On[e];
  for (var n = i8 * t, r = (n | 0) >> 2, s = n + r + r, o = i8 * t * 4, a = Math.pow(2, 24) * 4, h = s + o + a, c = Math.pow(2, 24), l = c; l < h; ) l += c;
  var d = new ArrayBuffer(l), m = Xh(Qt, {}, d);
  return m.init(i8, t), On[e] = m, m.heap = d, m.out = new Uint8Array(d, 0, o), m.inp = new Uint8Array(d, o, s), m.outSize = o, m;
};
function Xh(i8, t, e) {
  var n = i8.Math.imul, r = i8.Math.min, s = i8.Math.max, o = i8.Math.pow, a = new i8.Uint8Array(e), h = new i8.Uint32Array(e), c = new i8.Uint8Array(e), l = new i8.Uint8Array(e), d = new i8.Uint32Array(e), m = 0, u = 0, p = 0, f = 0, _ = 0, y = 0, M = 0, v = 0, x = 0, E = 0;
  function w(P, R) {
    P = P | 0, R = R | 0;
    var F = 0, O = 0;
    for (m = P, x = n(P, 4) | 0, u = R, p = n(m | 0, u | 0) | 0, f = (p | 0) >> 2, y = n(n(m, u) | 0, 4) | 0, _ = p + f | 0 + f | 0, v = 0, M = v + y | 0, E = M + _ | 0, O = ~~+o(2, 24), O = n(O, 4) | 0, F = 0; (F | 0) < (O | 0) | 0; F = F + 4 | 0) d[(E + F | 0) >> 2] = 0;
  }
  function C() {
    var P = 0, R = 0, F = 0, O = 0, V = 0, A = 0, z = 0, N = 0, Q = 0, rt = 0, ht = 0, _t30 = 0, Z = 0, $ = 0;
    for (Z = v | 0, P = M | 0, R = P + p | 0 | 0, F = R + f | 0, Q = 0; (Q | 0) < (u | 0); Q = Q + 2 | 0) {
      for (ht = R, _t30 = F, rt = 0; (rt | 0) < (m | 0); rt = rt + 2 | 0) O = c[P >> 0] | 0, V = c[(P + m | 0) >> 0] | 0, A = c[R >> 0] | 0, z = c[F >> 0] | 0, $ = ((O << 16 | 0) + (A << 8 | 0) | 0) + z | 0, N = d[(E + $ | 0) >> 2] | 0, N || (N = S(O, A, z) | 0, d[(E + $ | 0) >> 2] = N | 0), d[Z >> 2] = N, $ = ((V << 16 | 0) + (A << 8 | 0) | 0) + z | 0, N = d[(E + $ | 0) >> 2] | 0, N || (N = S(V, A, z) | 0, d[(E + $ | 0) >> 2] = N | 0), d[(Z + x | 0) >> 2] = N, Z = Z + 4 | 0, P = P + 1 | 0, O = c[P >> 0] | 0, V = c[(P + m | 0) >> 0] | 0, $ = ((O << 16 | 0) + (A << 8 | 0) | 0) + z | 0, N = d[(E + $ | 0) >> 2] | 0, N || (N = S(O, A, z) | 0, d[(E + $ | 0) >> 2] = N | 0), d[Z >> 2] = N, $ = ((V << 16 | 0) + (A << 8 | 0) | 0) + z | 0, N = d[(E + $ | 0) >> 2] | 0, N || (N = S(V, A, z) | 0, d[(E + $ | 0) >> 2] = N | 0), d[(Z + x | 0) >> 2] = N, Z = Z + 4 | 0, P = P + 1 | 0, R = R + 1 | 0, F = F + 1 | 0;
      Z = Z + x | 0, P = P + m | 0;
    }
  }
  function S(P, R, F) {
    P = P | 0, R = R | 0, F = F | 0;
    var O = 0, V = 0, A = 0, z = 0, N = 0, Q = 0, rt = 0, ht = 0, _t30 = 0;
    return N = n(1192, P - 16 | 0) | 0, Q = n(1634, F - 128 | 0) | 0, rt = n(832, F - 128 | 0) | 0, ht = n(400, R - 128 | 0) | 0, _t30 = n(2066, R - 128 | 0) | 0, O = (N + Q | 0) >> 10 | 0, V = ((N - rt | 0) - ht | 0) >> 10 | 0, A = (N + _t30 | 0) >> 10 | 0, (O & 255 | 0) != (O | 0) | 0 && (O = r(255, s(0, O | 0) | 0) | 0), (V & 255 | 0) != (V | 0) | 0 && (V = r(255, s(0, V | 0) | 0) | 0), (A & 255 | 0) != (A | 0) | 0 && (A = r(255, s(0, A | 0) | 0) | 0), z = 255, z = z << 8 | 0, z = z + A | 0, z = z << 8 | 0, z = z + V | 0, z = z << 8 | 0, z = z + O | 0, z | 0;
  }
  return { init: w, doit: C };
}
typeof self < "u" && (Dn = false, Ii = false, Ne = false, Be = 0, Ni = 0, Bi = 0, He = 0, Yi = [], Ge = [], Vn = function(i8) {
  if (Ge.length) {
    for (var t = Ge.shift(); t && t.byteLength !== i8; ) t = Ge.shift();
    if (t) return t;
  }
  return new ArrayBuffer(i8);
}, Gi = function(i8, t, e, n, r) {
  var s = n * r, o = s / 4, a = s, h = s + o, c = function(p, f) {
    var _ = 0;
    for (_ = 0; _ < 16; ++_) {
      var y = p + n * _, M = f + n * _;
      t.set(i8.subarray(y, M), y);
    }
  }, l = function(p, f) {
    var _ = 0;
    for (_ = 0; _ < 8; ++_) {
      var y = p + n / 2 * _, M = f + n / 2 * _;
      t.set(i8.subarray(y, M), y);
    }
  }, d = function(p, f) {
    t.set(i8.subarray(p, f), p);
  }, m = e[0], u = e[1];
  u > 0 && (c(m, u), l(e[2], e[3]), l(e[4], e[5])), m = e[6], u = e[7], u > 0 && (c(m, u), l(e[8], e[9]), l(e[10], e[11])), m = e[12], u = e[15], u > 0 && (d(m, u), d(e[13], e[16]), d(e[14], e[17]));
}, Wh = function() {
}, Un = function(i8) {
  Ni = i8, Bi = Ni - 1;
}, self.addEventListener("message", function(i8) {
  if (Dn) {
    if (Ii && i8.data.reuse && Ge.push(i8.data.reuse), i8.data.buf) {
      Ne && He !== 0 ? Yi.push(i8.data) : ae.decode(new Uint8Array(i8.data.buf, i8.data.offset || 0, i8.data.length), i8.data.info, function() {
        Ne && Be !== Bi && postMessage(i8.data, [i8.data.buf]);
      });
      return;
    }
    if (i8.data.slice) {
      var t = Dt();
      if (Gi(new Uint8Array(i8.data.slice), Hi, i8.data.infos[0].sliceInfoAr, i8.data.width, i8.data.height), i8.data.theOne && (Gi(Hi, new Uint8Array(i8.data.slice), zn, i8.data.width, i8.data.height), Ye > i8.data.infos[0].timeDecoding && (i8.data.infos[0].timeDecoding = Ye), i8.data.infos[0].timeCopy += Dt() - t), postMessage(i8.data, [i8.data.slice]), He -= 1, He === 0 && Yi.length) {
        var e = Yi.shift();
        ae.decode(new Uint8Array(e.buf, e.offset || 0, e.length), e.info, function() {
          Ne && Be !== Bi && postMessage(e, [e.buf]);
        });
      }
      return;
    }
    if (i8.data.setSliceCnt) {
      Un(i8.data.sliceCnt);
      return;
    }
  } else i8.data && i8.data.type === "Broadway.js - Worker init" && (Dn = true, ae = new qi(i8.data.options), i8.data.options.sliceMode ? (Ii = true, Ne = true, Be = i8.data.options.sliceNum, Un(i8.data.options.sliceCnt), ae.onPictureDecoded = function(n, r, s, o) {
    var a = new Uint8Array(Vn(n.length));
    Gi(n, a, o[0].sliceInfoAr, r, s), Fn = o[0].startDecoding, Ln = o[0].finishDecoding, Ye = Ln - Fn, o[0].timeDecoding = Ye, o[0].timeCopy = 0, postMessage({ slice: a.buffer, sliceNum: Be, width: r, height: s, infos: o }, [a.buffer]), He = Ni - 1, Hi = n, zn = o[0].sliceInfoAr;
  }) : i8.data.options.reuseMemory ? (Ii = true, ae.onPictureDecoded = function(n, r, s, o) {
    var a = new Uint8Array(Vn(n.length));
    a.set(n, 0, n.length), postMessage({ buf: a.buffer, length: n.length, width: r, height: s, infos: o }, [a.buffer]);
  }) : ae.onPictureDecoded = function(n, r, s, o) {
    n && (n = new Uint8Array(n));
    var a = new Uint8Array(n.length);
    a.set(n, 0, n.length), postMessage({ buf: a.buffer, length: n.length, width: r, height: s, infos: o }, [a.buffer]);
  }, postMessage({ consoleLog: "broadway worker initialized" }));
}, false));
var Dn;
var ae;
var Ii;
var Ne;
var Be;
var Ni;
var Bi;
var zn;
var Hi;
var He;
var Yi;
var Fn;
var Ln;
var Ye;
var Ge;
var Vn;
var Gi;
var Wh;
var Un;
qi.nowValue = Dt;
var is = qi;
var os = Hs(rs());
var _t23, _we_instances, i_fn, e_fn3, _a33;
var we = (_a33 = class {
  constructor({ decoded_frame_consumer: t }) {
    __privateAdd(this, _we_instances);
    __privateAdd(this, _t23, null);
    __privateSet(this, _t23, t);
  }
  _onFrameDecoded({ decoded_frame: t }) {
    var _a42;
    __privateMethod(this, _we_instances, i_fn).call(this, { meta_data: t.meta_data }), (_a42 = __privateGet(this, _t23)) == null ? void 0 : _a42.consumeDecodedFrame({ decoded_frame: t });
  }
}, _t23 = new WeakMap(), _we_instances = new WeakSet(), i_fn = function({ meta_data: t }) {
  var _a42;
  __privateMethod(this, _we_instances, e_fn3).call(this, { meta_data: t });
  for (let e of t.viewport_layout_camera_entities) (_a42 = e.viewport.camera_projection) == null ? void 0 : _a42.updateFromFrameCameraTransform({ frame_camera_transform: e });
}, e_fn3 = function({ meta_data: t }) {
  for (let { camera_entity: e, world_position: n, world_orientation: r } of t.other_clients_camera_entities) e._setGlobalTransform({ global_transform: { position: n, orientation: r }, change_source: "external" });
}, _a33);
var _t24, _i23, _e21, _n20, _a34;
var ss = (_a34 = class extends we {
  constructor({ decoded_frame_consumer: t }) {
    super({ decoded_frame_consumer: t });
    __privateAdd(this, _t24, new is());
    __privateAdd(this, _i23, null);
    __privateAdd(this, _e21, null);
    __privateAdd(this, _n20, (t, e, n, r) => {
      let s = e, o = n, a = e / 2, h = n / 2, c = s * o, l = a * h;
      __privateGet(this, _e21).drawNextOutputPicture({ yData: t.subarray(0, c), uData: t.subarray(c, c + l), vData: t.subarray(c + l, c + l + l), yDataPerRow: s, yRowCnt: o, uDataPerRow: a, uRowCnt: h });
      let d = r[0];
      super._onFrameDecoded({ decoded_frame: { pixels: __privateGet(this, _i23), dimensions_in_pixels: [e, n], meta_data: d } });
    });
  }
  configure({ codec: t, frame_dimensions: e }) {
    if (t !== "h264") throw new Error("Software decoder supports only h264 encoding");
    return __privateSet(this, _i23, new OffscreenCanvas(e[0], e[1])), __privateSet(this, _e21, new os.default({ canvas: __privateGet(this, _i23), width: e[0], height: e[1] })), __privateGet(this, _t24).onPictureDecoded = __privateGet(this, _n20), Promise.resolve(this);
  }
  resize({ frame_dimensions: t }) {
    __privateGet(this, _i23) && (__privateGet(this, _i23).width = t[0], __privateGet(this, _i23).height = t[1]), __privateGet(this, _e21) && (__privateGet(this, _e21).width = t[0], __privateGet(this, _e21).height = t[1]);
  }
  release() {
  }
  consumeEncodedFrame({ encoded_frame: t }) {
    let e = new Uint8Array(t.video_stream.buffer, t.video_stream.byteOffset, t.video_stream.byteLength);
    __privateGet(this, _t24).decode(e, t.meta_data);
  }
}, _t24 = new WeakMap(), _i23 = new WeakMap(), _e21 = new WeakMap(), _n20 = new WeakMap(), _a34);
var _i_static, _a35, t_get, i_fn2, _e22, _n21, _r15, _o11, _s8, _a36;
var as = (_a35 = class extends we {
  constructor({ decoded_frame_consumer: t }) {
    super({ decoded_frame_consumer: t });
    __privateAdd(this, _e22, null);
    __privateAdd(this, _n21, null);
    __privateAdd(this, _r15, true);
    __privateAdd(this, _o11, /* @__PURE__ */ new Map());
    __privateAdd(this, _s8, null);
    __privateAdd(this, _a36, (t) => {
      __privateGet(this, _s8) && __privateGet(this, _s8).close();
      let e = __privateGet(this, _o11).get(t.timestamp);
      if (!e) {
        console.error("No meta data for frame", t.timestamp);
        return;
      }
      super._onFrameDecoded({ decoded_frame: { pixels: t, dimensions_in_pixels: [t.displayWidth, t.displayHeight], meta_data: e } }), __privateGet(this, _o11).delete(t.timestamp), __privateSet(this, _s8, t);
    });
  }
  static async findSupportedCodec() {
    var _a42;
    if (typeof VideoDecoder > "u") return null;
    for (let t of __privateGet(this, _i_static, t_get).keys()) {
      let e = await __privateMethod(_a42 = _a35, _i_static, i_fn2).call(_a42, { codec: t });
      if (e) return e.codec, t;
    }
    return null;
  }
  async configure({ codec: t, frame_dimensions: e }) {
    var _a42;
    this.release();
    let n = await __privateMethod(_a42 = _a35, _i_static, i_fn2).call(_a42, { codec: t, frame_dimensions: e });
    if (!n) throw new Error("Codec not supported");
    return __privateSet(this, _e22, new VideoDecoder({ output: __privateGet(this, _a36), error: (r) => console.error(r.message) })), __privateSet(this, _n21, n), __privateGet(this, _e22).configure(__privateGet(this, _n21)), __privateGet(this, _n21), this;
  }
  resize({ frame_dimensions: t }) {
    __privateGet(this, _e22) && __privateGet(this, _n21) && (__privateGet(this, _n21).codedWidth = t[0], __privateGet(this, _n21).codedHeight = t[1], __privateSet(this, _r15, false), __privateGet(this, _e22).configure(__privateGet(this, _n21)));
  }
  release() {
    var _a42, _b;
    (_a42 = __privateGet(this, _s8)) == null ? void 0 : _a42.close(), (_b = __privateGet(this, _e22)) == null ? void 0 : _b.close();
  }
  consumeEncodedFrame({ encoded_frame: t }) {
    let e = new EncodedVideoChunk({ timestamp: t.meta_data.frame_counter, type: __privateGet(this, _r15) ? "key" : "delta", data: new Uint8Array(t.video_stream.buffer, t.video_stream.byteOffset, t.video_stream.byteLength) });
    __privateSet(this, _r15, false), __privateGet(this, _o11).set(t.meta_data.frame_counter, t.meta_data), __privateGet(this, _e22).decode(e);
  }
}, _i_static = new WeakSet(), t_get = function() {
  return Object.freeze(/* @__PURE__ */ new Map([["h265", ["hvc1.1.6.L123.00"]], ["h264", ["avc1.42001E", "avc1.42002A", "avc1.42E01E", "avc1.64001f", "avc1.42002A"]]]));
}, i_fn2 = async function({ codec: t, frame_dimensions: e }) {
  if (typeof VideoDecoder > "u" || !__privateGet(_a35, _i_static, t_get).has(t)) return null;
  let n = __privateGet(_a35, _i_static, t_get).get(t), r = { codec: "", codedWidth: e == null ? void 0 : e[0], codedHeight: e == null ? void 0 : e[1], optimizeForLatency: true }, s = ["prefer-hardware", "prefer-software", "no-preference"];
  for (let o of s) if (!(t === "h264" && o === "prefer-hardware")) for (let a of n) {
    r.codec = a;
    let h = await VideoDecoder.isConfigSupported({ ...r, hardwareAcceleration: o });
    if (h.supported && h.config) return h.config;
  }
  return null;
}, _e22 = new WeakMap(), _n21 = new WeakMap(), _r15 = new WeakMap(), _o11 = new WeakMap(), _s8 = new WeakMap(), _a36 = new WeakMap(), __privateAdd(_a35, _i_static), _a35);
var Ce = class {
  refreshSize() {
  }
};
var ji = class extends Ce {
  constructor(t, e) {
    super();
    __publicField(this, "_canvas");
    __publicField(this, "_context2D");
    let n = t.getContext("2d", e);
    if (n === null) throw new Error(`Cannot create a 2d context from canvas ${t}`);
    this._canvas = t, this._context2D = n;
  }
  drawFrameSection({ frame_section: t, viewport: e }) {
    let n = t.section.left * t.dimensions_in_pixels[0], r = t.section.top * t.dimensions_in_pixels[1], s = t.section.width * t.dimensions_in_pixels[0], o = t.section.height * t.dimensions_in_pixels[1], a = e.left * this._canvas.width, h = e.top * this._canvas.height, c = e.width * this._canvas.width, l = e.height * this._canvas.height;
    this._context2D.drawImage(t.pixels, n, r, s, o, a, h, c, l);
  }
  release() {
    this._context2D.reset();
  }
};
var Xi = class extends Ce {
  constructor(t, e = "webgl", n) {
    super();
    __publicField(this, "_canvas");
    __publicField(this, "_context");
    __publicField(this, "_texture_ref", null);
    __publicField(this, "_shader_program", null);
    __publicField(this, "_frame_buffer", null);
    let r = t.getContext(e, n);
    if (r === null) throw new Error(`Cannot create a ${e} context from canvas`);
    this._canvas = t, this._context = r, this._initShaderProgram(), this._initBuffers(), this._initTexture();
  }
  get native() {
    return this._context;
  }
  set frame_buffer(t) {
    this._frame_buffer = t;
  }
  drawFrameSection({ frame_section: t }) {
    let e = this._context;
    this._frame_buffer !== null && e.bindFramebuffer(e.FRAMEBUFFER, this._frame_buffer), e.clearColor(1, 0, 0, 1), e.clear(e.COLOR_BUFFER_BIT | e.DEPTH_BUFFER_BIT);
    let n = e.getUniformLocation(this._shader_program, "size"), r = e.getUniformLocation(this._shader_program, "offset");
    e.uniform2fv(n, [t.section.width, t.section.height]), e.uniform2fv(r, [t.section.left, t.section.top]), e.activeTexture(e.TEXTURE0), e.bindTexture(e.TEXTURE_2D, this._texture_ref), e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t.pixels), e.drawArrays(e.TRIANGLE_STRIP, 0, 4);
  }
  refreshSize() {
    this._context.viewport(0, 0, this._canvas.width, this._canvas.height);
  }
  release() {
    let t = this._context;
    t.clear(t.COLOR_BUFFER_BIT | t.DEPTH_BUFFER_BIT);
  }
  _initShaderProgram() {
    let t = this._context, e = `
            attribute vec2 position;
            varying vec2 texCoord;
            uniform vec2 size;
            uniform vec2 offset;

            void main() {
                texCoord = (position + 1.0) * 0.5;
                texCoord.y = 1.0 - texCoord.y;
                texCoord = size * texCoord + offset;
                gl_Position = vec4(position, 0.0, 1.0);
            }`, n = t.createShader(t.VERTEX_SHADER);
    t.shaderSource(n, e), t.compileShader(n), t.getShaderParameter(n, t.COMPILE_STATUS) || console.error("Vertex shader failed to compile: " + t.getShaderInfoLog(n));
    let r = `
            precision mediump float;
            varying vec2 texCoord;
            uniform sampler2D texture;

            void main() {
                gl_FragColor = texture2D(texture, texCoord);
            }`, s = t.createShader(t.FRAGMENT_SHADER);
    t.shaderSource(s, r), t.compileShader(s), t.getShaderParameter(s, t.COMPILE_STATUS) || console.error("Fragment shader failed to compile: " + t.getShaderInfoLog(s));
    let o = t.createProgram();
    t.attachShader(o, n), t.attachShader(o, s), t.linkProgram(o), t.useProgram(o), t.getProgramParameter(o, t.LINK_STATUS) || console.error("Program failed to compile: " + t.getProgramInfoLog(o)), t.useProgram(o), this._shader_program = o;
  }
  _initBuffers() {
    let t = this._context, e = t.createBuffer(), n = new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]);
    t.bindBuffer(t.ARRAY_BUFFER, e), t.bufferData(t.ARRAY_BUFFER, n, t.STATIC_DRAW);
    let r = t.getAttribLocation(this._shader_program, "position");
    t.enableVertexAttribArray(r), t.vertexAttribPointer(r, 2, t.FLOAT, false, 0, 0);
  }
  _initTexture() {
    let t = this._context;
    this._texture_ref = t.createTexture(), t.bindTexture(t.TEXTURE_2D, this._texture_ref), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), t.bindTexture(t.TEXTURE_2D, null);
    let e = t.getUniformLocation(this._shader_program, "texture");
    t.uniform1i(e, 0);
  }
};
var _t25, _a37;
var $t = (_a37 = class extends mt {
  constructor() {
    super(...arguments);
    __publicField(this, "viewports", []);
    __privateAdd(this, _t25, null);
    __publicField(this, "relative_rect", new dt({ left: 0, top: 0, width: 1, height: 1 }));
  }
  get dimensions() {
    return [this.width, this.height];
  }
  addViewport({ viewport: t }) {
    this.viewports.push(t);
  }
  removeViewport({ viewport: t }) {
    let e = this.viewports.indexOf(t);
    e !== -1 && this.viewports.splice(e, 1);
  }
  release() {
    __privateSet(this, _t25, null);
    for (let t of this.viewports) t.release();
  }
  isValid() {
    return this.viewports.length > 0 && this.viewports.every((t) => t.isValid());
  }
  drawFrame({ decoded_frame: t }) {
    __privateSet(this, _t25, t), this._drawFrame({ decoded_frame: t });
  }
  redrawLastFrame() {
    __privateGet(this, _t25) !== null && this._drawFrame({ decoded_frame: __privateGet(this, _t25) });
  }
  _getViewportConfigs({ width: t, height: e }) {
    if (!this.isValid()) throw new Error("Invalid config");
    let n = [this.relative_rect.left * t, this.relative_rect.top * e];
    return this.viewports.map((r) => ({ camera_rtid: r.camera_projection.camera_entity.rtid, left: (n[0] + r.relative_rect.left * this.width) / t, top: (n[1] + r.relative_rect.top * this.height) / e, width: r.width / t, height: r.height / e, render_target_index: r.render_target_index, z_index: r.z_index }));
  }
}, _t25 = new WeakMap(), _a37);
var _t26, _a38;
var hs = (_a38 = class extends $t {
  constructor({ width: t, height: e }) {
    super();
    __privateAdd(this, _t26);
    __privateSet(this, _t26, new Ft({ width: t, height: e }));
  }
  get width() {
    return __privateGet(this, _t26).width;
  }
  get height() {
    return __privateGet(this, _t26).height;
  }
  getBoundingRect() {
    return __privateGet(this, _t26);
  }
  _drawFrame() {
  }
}, _t26 = new WeakMap(), _a38);
var _t27, _i24, _e23, _n22, _r16, _o12, _s9, _Wi_instances, a_fn8, _a39;
var Wi = (_a39 = class {
  constructor({ canvas: t, onResized: e }) {
    __privateAdd(this, _Wi_instances);
    __privateAdd(this, _t27);
    __privateAdd(this, _i24);
    __privateAdd(this, _e23, null);
    __privateAdd(this, _n22, 500);
    __privateAdd(this, _r16);
    __privateAdd(this, _o12, () => {
      __privateGet(this, _e23) && clearTimeout(__privateGet(this, _e23)), __privateSet(this, _e23, setTimeout(__privateGet(this, _s9), __privateGet(this, _n22)));
    });
    __privateAdd(this, _s9, () => {
      let t = [__privateGet(this, _t27).width, __privateGet(this, _t27).height];
      __privateGet(this, _t27).width = __privateGet(this, _t27).clientWidth, __privateGet(this, _t27).height = __privateGet(this, _t27).clientHeight;
      let e = [__privateGet(this, _t27).width, __privateGet(this, _t27).height];
      __privateGet(this, _t27).width === 0 || __privateGet(this, _t27).height === 0 || __privateMethod(this, _Wi_instances, a_fn8).call(this, t, e) && __privateGet(this, _r16).call(this, { old_size: t, new_size: e });
    });
    __privateSet(this, _t27, t), __privateSet(this, _i24, new ResizeObserver(__privateGet(this, _o12))), __privateSet(this, _r16, e), __privateGet(this, _i24).observe(__privateGet(this, _t27));
  }
  release() {
    __privateGet(this, _i24).disconnect();
  }
}, _t27 = new WeakMap(), _i24 = new WeakMap(), _e23 = new WeakMap(), _n22 = new WeakMap(), _r16 = new WeakMap(), _o12 = new WeakMap(), _s9 = new WeakMap(), _Wi_instances = new WeakSet(), a_fn8 = function(t, e) {
  return t.some((n, r) => n !== e[r]);
}, _a39);
var Me = class extends Event {
  constructor() {
    super("on-rendering-surface-resized");
  }
};
var _t28, _i25, _e24, _n23, _a40;
var cs = (_a40 = class extends $t {
  constructor({ canvas_element: t, context_type: e, context_attributes: n }) {
    super();
    __privateAdd(this, _t28);
    __privateAdd(this, _i25);
    __privateAdd(this, _e24);
    __privateAdd(this, _n23, (t) => {
      __privateGet(this, _i25).refreshSize(), this._dispatchEvent(new Me());
      for (let e of this.viewports) e._onResize();
    });
    let r = typeof t == "string" ? document.getElementById(t) : t;
    if (r === null) throw new Error(`Cannot find canvas ${t}`);
    if (r.nodeName !== "CANVAS") throw new Error(`HTML element ${t} is a '${r.nodeName}', it MUST be CANVAS`);
    switch (__privateSet(this, _t28, r), e) {
      case "2d":
        __privateSet(this, _i25, new ji(__privateGet(this, _t28)));
        break;
      case "webgl":
      case "webgl2":
        __privateSet(this, _i25, new Xi(__privateGet(this, _t28), e, n));
        break;
    }
    this.canvas.width = this.canvas.clientWidth, this.canvas.height = this.canvas.clientHeight, __privateSet(this, _e24, new Wi({ canvas: this.canvas, onResized: __privateGet(this, _n23) })), __privateGet(this, _i25).refreshSize();
  }
  get width() {
    return __privateGet(this, _t28).clientWidth;
  }
  get height() {
    return __privateGet(this, _t28).clientHeight;
  }
  get canvas() {
    return __privateGet(this, _t28);
  }
  release() {
    super.release(), __privateGet(this, _e24).release(), __privateGet(this, _i25).release();
  }
  getContext() {
    return __privateGet(this, _i25);
  }
  getBoundingRect() {
    let t = this.canvas.getClientRects()[0];
    return t && (t.x = Math.ceil(t.x), t.y = Math.ceil(t.y), t.width = Math.ceil(t.width), t.height = Math.ceil(t.height)), new Ft(t ?? { width: this.canvas.width, height: this.canvas.height });
  }
  _drawFrame({ decoded_frame: t }) {
    __privateGet(this, _i25).drawFrameSection({ frame_section: { pixels: t.pixels, dimensions_in_pixels: t.dimensions_in_pixels, meta_data: t.meta_data, section: this.relative_rect }, viewport: dt.default });
    for (let e of this.viewports) {
      let n = e._drawOverlays();
      n && __privateGet(this, _i25).drawFrameSection({ frame_section: { pixels: n, dimensions_in_pixels: [n.width, n.height], meta_data: t.meta_data, section: dt.default }, viewport: e.relative_rect });
    }
  }
}, _t28 = new WeakMap(), _i25 = new WeakMap(), _e24 = new WeakMap(), _n23 = new WeakMap(), _a40);
var _t29, _i26, _e25, _a41;
var ls = (_a41 = class extends $t {
  constructor({ width: t, height: e, context_constructor: n, context_type: r, context_options: s, resolution_scale: o = 1 }) {
    super();
    __privateAdd(this, _t29);
    __privateAdd(this, _i26);
    __privateAdd(this, _e25);
    __privateSet(this, _t29, document.createElement("canvas")), __privateGet(this, _t29).width = t, __privateGet(this, _t29).height = e, __privateSet(this, _i26, new n(__privateGet(this, _t29), r, s)), __privateSet(this, _e25, o);
  }
  get width() {
    return Math.floor(__privateGet(this, _t29).width * __privateGet(this, _e25));
  }
  get height() {
    return Math.floor(__privateGet(this, _t29).height * __privateGet(this, _e25));
  }
  get context() {
    return __privateGet(this, _i26);
  }
  get cameras() {
    return this.viewports.map((t) => {
      var _a42;
      return ((_a42 = t.camera_projection) == null ? void 0 : _a42.camera_entity) ? t.camera_projection.camera_entity : null;
    }).filter((t) => t !== null);
  }
  release() {
    super.release(), __privateGet(this, _i26).release();
  }
  _drawFrame({ decoded_frame: t }) {
    __privateGet(this, _i26).drawFrameSection({ frame_section: { pixels: t.pixels, section: this.relative_rect, dimensions_in_pixels: t.dimensions_in_pixels, meta_data: t.meta_data }, viewport: dt.default });
  }
  getBoundingRect() {
    return new Ft({ width: this.width, height: this.height });
  }
  resize(t, e) {
    __privateGet(this, _t29).width = t, __privateGet(this, _t29).height = e, __privateGet(this, _i26).refreshSize();
  }
  get resolution_scale() {
    return __privateGet(this, _e25);
  }
  set resolution_scale(t) {
    __privateGet(this, _e25) !== t && (__privateSet(this, _e25, t), this._dispatchEvent(new Me()));
  }
}, _t29 = new WeakMap(), _i26 = new WeakMap(), _e25 = new WeakMap(), _a41);
typeof window < "u" && (window.__LIVELINK__ || (window.__LIVELINK__ = {}), Object.prototype.hasOwnProperty.call(window.__LIVELINK__, "@3dverse/livelink") ? console.warn("⚠️ WARNING ⚠️ Multiple instances of Livelink being imported.") : window.__LIVELINK__["@3dverse/livelink"] = "0.8.43");

export {
  Qn,
  Ft,
  on,
  an,
  dt,
  Gt,
  Pe,
  ri,
  si,
  qt,
  ai,
  Oe,
  hi,
  ci,
  li,
  di,
  mi,
  ui,
  De,
  pi,
  _i13 as _i,
  vl,
  et,
  fn,
  ue,
  Ct,
  vi,
  gi,
  Ir,
  Pn,
  ts,
  es,
  we,
  ss,
  as,
  Ce,
  ji,
  Xi,
  $t,
  hs,
  Me,
  cs,
  ls
};
//# sourceMappingURL=chunk-CAVFLB42.js.map

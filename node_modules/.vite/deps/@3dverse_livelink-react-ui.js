import {
  O,
  P,
  et,
  fn,
  vl
} from "./chunk-Y4BRPL5V.js";
import "./chunk-XUV2MALO.js";
import {
  __commonJS,
  __export,
  __privateAdd,
  __privateGet,
  __privateSet,
  __publicField,
  __toESM,
  require_react
} from "./chunk-QZQWHSAO.js";

// node_modules/is-retry-allowed/index.js
var require_is_retry_allowed = __commonJS({
  "node_modules/is-retry-allowed/index.js"(exports, module) {
    "use strict";
    var denyList = /* @__PURE__ */ new Set([
      "ENOTFOUND",
      "ENETUNREACH",
      // SSL errors from https://github.com/nodejs/node/blob/fc8e3e2cdc521978351de257030db0076d79e0ab/src/crypto/crypto_common.cc#L301-L328
      "UNABLE_TO_GET_ISSUER_CERT",
      "UNABLE_TO_GET_CRL",
      "UNABLE_TO_DECRYPT_CERT_SIGNATURE",
      "UNABLE_TO_DECRYPT_CRL_SIGNATURE",
      "UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY",
      "CERT_SIGNATURE_FAILURE",
      "CRL_SIGNATURE_FAILURE",
      "CERT_NOT_YET_VALID",
      "CERT_HAS_EXPIRED",
      "CRL_NOT_YET_VALID",
      "CRL_HAS_EXPIRED",
      "ERROR_IN_CERT_NOT_BEFORE_FIELD",
      "ERROR_IN_CERT_NOT_AFTER_FIELD",
      "ERROR_IN_CRL_LAST_UPDATE_FIELD",
      "ERROR_IN_CRL_NEXT_UPDATE_FIELD",
      "OUT_OF_MEM",
      "DEPTH_ZERO_SELF_SIGNED_CERT",
      "SELF_SIGNED_CERT_IN_CHAIN",
      "UNABLE_TO_GET_ISSUER_CERT_LOCALLY",
      "UNABLE_TO_VERIFY_LEAF_SIGNATURE",
      "CERT_CHAIN_TOO_LONG",
      "CERT_REVOKED",
      "INVALID_CA",
      "PATH_LENGTH_EXCEEDED",
      "INVALID_PURPOSE",
      "CERT_UNTRUSTED",
      "CERT_REJECTED",
      "HOSTNAME_MISMATCH"
    ]);
    module.exports = (error) => !denyList.has(error && error.code);
  }
});

// node_modules/@3dverse/livelink-react-ui/dist/index.mjs
var import_react3 = __toESM(require_react(), 1);
var import_react4 = __toESM(require_react(), 1);
var import_react5 = __toESM(require_react(), 1);
var import_react6 = __toESM(require_react(), 1);

// node_modules/axios-retry/lib/esm/index.js
var import_is_retry_allowed = __toESM(require_is_retry_allowed());
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn2) {
  return function() {
    var self2 = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn2.apply(self2, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var namespace = "axios-retry";
function isNetworkError(error) {
  var CODE_EXCLUDE_LIST = ["ERR_CANCELED", "ECONNABORTED"];
  return !error.response && Boolean(error.code) && // Prevents retrying cancelled requests
  !CODE_EXCLUDE_LIST.includes(error.code) && // Prevents retrying timed out & cancelled requests
  (0, import_is_retry_allowed.default)(error);
}
var SAFE_HTTP_METHODS = ["get", "head", "options"];
var IDEMPOTENT_HTTP_METHODS = SAFE_HTTP_METHODS.concat(["put", "delete"]);
function isRetryableError(error) {
  return error.code !== "ECONNABORTED" && (!error.response || error.response.status >= 500 && error.response.status <= 599);
}
function isSafeRequestError(error) {
  if (!error.config) {
    return false;
  }
  return isRetryableError(error) && SAFE_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
function isIdempotentRequestError(error) {
  if (!error.config) {
    return false;
  }
  return isRetryableError(error) && IDEMPOTENT_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
function isNetworkOrIdempotentRequestError(error) {
  return isNetworkError(error) || isIdempotentRequestError(error);
}
function noDelay() {
  return 0;
}
function exponentialDelay() {
  var retryNumber = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
  var error = arguments.length > 1 ? arguments[1] : void 0;
  var delayFactor = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 100;
  var delay = Math.pow(2, retryNumber) * delayFactor;
  var randomSum = delay * 0.2 * Math.random();
  return delay + randomSum;
}
var DEFAULT_OPTIONS = {
  retries: 3,
  retryCondition: isNetworkOrIdempotentRequestError,
  retryDelay: noDelay,
  shouldResetTimeout: false,
  onRetry: () => {
  }
};
function getRequestOptions(config, defaultOptions) {
  return _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), defaultOptions), config[namespace]);
}
function getCurrentState(config, defaultOptions) {
  var currentState = getRequestOptions(config, defaultOptions);
  currentState.retryCount = currentState.retryCount || 0;
  config[namespace] = currentState;
  return currentState;
}
function fixConfig(axios2, config) {
  if (axios2.defaults.agent === config.agent) {
    delete config.agent;
  }
  if (axios2.defaults.httpAgent === config.httpAgent) {
    delete config.httpAgent;
  }
  if (axios2.defaults.httpsAgent === config.httpsAgent) {
    delete config.httpsAgent;
  }
}
function shouldRetry(_x, _x2) {
  return _shouldRetry.apply(this, arguments);
}
function _shouldRetry() {
  _shouldRetry = _asyncToGenerator(function* (currentState, error) {
    var {
      retries,
      retryCondition
    } = currentState;
    var shouldRetryOrPromise = currentState.retryCount < retries && retryCondition(error);
    if (typeof shouldRetryOrPromise === "object") {
      try {
        var shouldRetryPromiseResult = yield shouldRetryOrPromise;
        return shouldRetryPromiseResult !== false;
      } catch (_err) {
        return false;
      }
    }
    return shouldRetryOrPromise;
  });
  return _shouldRetry.apply(this, arguments);
}
function axiosRetry(axios2, defaultOptions) {
  var requestInterceptorId = axios2.interceptors.request.use((config) => {
    var currentState = getCurrentState(config, defaultOptions);
    currentState.lastRequestTime = Date.now();
    return config;
  });
  var responseInterceptorId = axios2.interceptors.response.use(null, function() {
    var _ref = _asyncToGenerator(function* (error) {
      var {
        config
      } = error;
      if (!config) {
        return Promise.reject(error);
      }
      var currentState = getCurrentState(config, defaultOptions);
      if (yield shouldRetry(currentState, error)) {
        currentState.retryCount += 1;
        var {
          retryDelay,
          shouldResetTimeout,
          onRetry
        } = currentState;
        var delay = retryDelay(currentState.retryCount, error);
        fixConfig(axios2, config);
        if (!shouldResetTimeout && config.timeout && currentState.lastRequestTime) {
          var lastRequestDuration = Date.now() - currentState.lastRequestTime;
          var timeout = config.timeout - lastRequestDuration - delay;
          if (timeout <= 0) {
            return Promise.reject(error);
          }
          config.timeout = timeout;
        }
        config.transformRequest = [(data) => data];
        yield onRetry(currentState.retryCount, error, config);
        return new Promise((resolve) => setTimeout(() => resolve(axios2(config)), delay));
      }
      return Promise.reject(error);
    });
    return function(_x3) {
      return _ref.apply(this, arguments);
    };
  }());
  return {
    requestInterceptorId,
    responseInterceptorId
  };
}
axiosRetry.isNetworkError = isNetworkError;
axiosRetry.isSafeRequestError = isSafeRequestError;
axiosRetry.isIdempotentRequestError = isIdempotentRequestError;
axiosRetry.isNetworkOrIdempotentRequestError = isNetworkOrIdempotentRequestError;
axiosRetry.exponentialDelay = exponentialDelay;
axiosRetry.isRetryableError = isRetryableError;

// node_modules/axios/lib/helpers/bind.js
function bind(fn2, thisArg) {
  return function wrap() {
    return fn2.apply(thisArg, arguments);
  };
}

// node_modules/axios/lib/utils.js
var { toString } = Object.prototype;
var { getPrototypeOf } = Object;
var { iterator, toStringTag } = Symbol;
var kindOf = /* @__PURE__ */ ((cache) => (thing) => {
  const str = toString.call(thing);
  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null));
var kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type;
};
var typeOfTest = (type) => (thing) => typeof thing === type;
var { isArray } = Array;
var isUndefined = typeOfTest("undefined");
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}
var isArrayBuffer = kindOfTest("ArrayBuffer");
function isArrayBufferView(val) {
  let result;
  if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }
  return result;
}
var isString = typeOfTest("string");
var isFunction = typeOfTest("function");
var isNumber = typeOfTest("number");
var isObject = (thing) => thing !== null && typeof thing === "object";
var isBoolean = (thing) => thing === true || thing === false;
var isPlainObject = (val) => {
  if (kindOf(val) !== "object") {
    return false;
  }
  const prototype3 = getPrototypeOf(val);
  return (prototype3 === null || prototype3 === Object.prototype || Object.getPrototypeOf(prototype3) === null) && !(toStringTag in val) && !(iterator in val);
};
var isDate = kindOfTest("Date");
var isFile = kindOfTest("File");
var isBlob = kindOfTest("Blob");
var isFileList = kindOfTest("FileList");
var isStream = (val) => isObject(val) && isFunction(val.pipe);
var isFormData = (thing) => {
  let kind;
  return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
  kind === "object" && isFunction(thing.toString) && thing.toString() === "[object FormData]"));
};
var isURLSearchParams = kindOfTest("URLSearchParams");
var [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
var trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function forEach(obj, fn2, { allOwnKeys = false } = {}) {
  if (obj === null || typeof obj === "undefined") {
    return;
  }
  let i;
  let l;
  if (typeof obj !== "object") {
    obj = [obj];
  }
  if (isArray(obj)) {
    for (i = 0, l = obj.length; i < l; i++) {
      fn2.call(null, obj[i], i, obj);
    }
  } else {
    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys.length;
    let key;
    for (i = 0; i < len; i++) {
      key = keys[i];
      fn2.call(null, obj[key], key, obj);
    }
  }
}
function findKey(obj, key) {
  key = key.toLowerCase();
  const keys = Object.keys(obj);
  let i = keys.length;
  let _key;
  while (i-- > 0) {
    _key = keys[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}
var _global = (() => {
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
})();
var isContextDefined = (context) => !isUndefined(context) && context !== _global;
function merge() {
  const { caseless } = isContextDefined(this) && this || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray(val)) {
      result[targetKey] = val.slice();
    } else {
      result[targetKey] = val;
    }
  };
  for (let i = 0, l = arguments.length; i < l; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}
var extend = (a, b, thisArg, { allOwnKeys } = {}) => {
  forEach(b, (val, key) => {
    if (thisArg && isFunction(val)) {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  }, { allOwnKeys });
  return a;
};
var stripBOM = (content) => {
  if (content.charCodeAt(0) === 65279) {
    content = content.slice(1);
  }
  return content;
};
var inherits = (constructor, superConstructor, props, descriptors2) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, "super", {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
};
var toFlatObject = (sourceObj, destObj, filter2, propFilter) => {
  let props;
  let i;
  let prop;
  const merged = {};
  destObj = destObj || {};
  if (sourceObj == null) return destObj;
  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter2 !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter2 || filter2(sourceObj, destObj)) && sourceObj !== Object.prototype);
  return destObj;
};
var endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === void 0 || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};
var toArray = (thing) => {
  if (!thing) return null;
  if (isArray(thing)) return thing;
  let i = thing.length;
  if (!isNumber(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
};
var isTypedArray = /* @__PURE__ */ ((TypedArray) => {
  return (thing) => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
var forEachEntry = (obj, fn2) => {
  const generator = obj && obj[iterator];
  const _iterator = generator.call(obj);
  let result;
  while ((result = _iterator.next()) && !result.done) {
    const pair = result.value;
    fn2.call(obj, pair[0], pair[1]);
  }
};
var matchAll = (regExp, str) => {
  let matches;
  const arr = [];
  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }
  return arr;
};
var isHTMLForm = kindOfTest("HTMLFormElement");
var toCamelCase = (str) => {
  return str.toLowerCase().replace(
    /[-_\s]([a-z\d])(\w*)/g,
    function replacer(m, p1, p2) {
      return p1.toUpperCase() + p2;
    }
  );
};
var hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype);
var isRegExp = kindOfTest("RegExp");
var reduceDescriptors = (obj, reducer) => {
  const descriptors2 = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};
  forEach(descriptors2, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });
  Object.defineProperties(obj, reducedDescriptors);
};
var freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    if (isFunction(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
      return false;
    }
    const value = obj[name];
    if (!isFunction(value)) return;
    descriptor.enumerable = false;
    if ("writable" in descriptor) {
      descriptor.writable = false;
      return;
    }
    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error("Can not rewrite read-only method '" + name + "'");
      };
    }
  });
};
var toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};
  const define2 = (arr) => {
    arr.forEach((value) => {
      obj[value] = true;
    });
  };
  isArray(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter));
  return obj;
};
var noop = () => {
};
var toFiniteNumber = (value, defaultValue) => {
  return value != null && Number.isFinite(value = +value) ? value : defaultValue;
};
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction(thing.append) && thing[toStringTag] === "FormData" && thing[iterator]);
}
var toJSONObject = (obj) => {
  const stack = new Array(10);
  const visit = (source, i) => {
    if (isObject(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }
      if (!("toJSON" in source)) {
        stack[i] = source;
        const target = isArray(source) ? [] : {};
        forEach(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });
        stack[i] = void 0;
        return target;
      }
    }
    return source;
  };
  return visit(obj, 0);
};
var isAsyncFn = kindOfTest("AsyncFunction");
var isThenable = (thing) => thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);
var _setImmediate = ((setImmediateSupported, postMessageSupported) => {
  if (setImmediateSupported) {
    return setImmediate;
  }
  return postMessageSupported ? ((token, callbacks) => {
    _global.addEventListener("message", ({ source, data }) => {
      if (source === _global && data === token) {
        callbacks.length && callbacks.shift()();
      }
    }, false);
    return (cb) => {
      callbacks.push(cb);
      _global.postMessage(token, "*");
    };
  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);
})(
  typeof setImmediate === "function",
  isFunction(_global.postMessage)
);
var asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
var isIterable = (thing) => thing != null && isFunction(thing[iterator]);
var utils_default = {
  isArray,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isBoolean,
  isObject,
  isPlainObject,
  isReadableStream,
  isRequest,
  isResponse,
  isHeaders,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isRegExp,
  isFunction,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge,
  extend,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty,
  hasOwnProp: hasOwnProperty,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop,
  toFiniteNumber,
  findKey,
  global: _global,
  isContextDefined,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable,
  setImmediate: _setImmediate,
  asap,
  isIterable
};

// node_modules/axios/lib/core/AxiosError.js
function AxiosError(message, code, config, request, response) {
  Error.call(this);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack;
  }
  this.message = message;
  this.name = "AxiosError";
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}
utils_default.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils_default.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
var prototype = AxiosError.prototype;
var descriptors = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((code) => {
  descriptors[code] = { value: code };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, "isAxiosError", { value: true });
AxiosError.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(prototype);
  utils_default.toFlatObject(error, axiosError, function filter2(obj) {
    return obj !== Error.prototype;
  }, (prop) => {
    return prop !== "isAxiosError";
  });
  AxiosError.call(axiosError, error.message, code, config, request, response);
  axiosError.cause = error;
  axiosError.name = error.name;
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};
var AxiosError_default = AxiosError;

// node_modules/axios/lib/helpers/null.js
var null_default = null;

// node_modules/axios/lib/helpers/toFormData.js
function isVisitable(thing) {
  return utils_default.isPlainObject(thing) || utils_default.isArray(thing);
}
function removeBrackets(key) {
  return utils_default.endsWith(key, "[]") ? key.slice(0, -2) : key;
}
function renderKey(path, key, dots) {
  if (!path) return key;
  return path.concat(key).map(function each(token, i) {
    token = removeBrackets(token);
    return !dots && i ? "[" + token + "]" : token;
  }).join(dots ? "." : "");
}
function isFlatArray(arr) {
  return utils_default.isArray(arr) && !arr.some(isVisitable);
}
var predicates = utils_default.toFlatObject(utils_default, {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});
function toFormData(obj, formData, options) {
  if (!utils_default.isObject(obj)) {
    throw new TypeError("target must be an object");
  }
  formData = formData || new (null_default || FormData)();
  options = utils_default.toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    return !utils_default.isUndefined(source[option]);
  });
  const metaTokens = options.metaTokens;
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
  const useBlob = _Blob && utils_default.isSpecCompliantForm(formData);
  if (!utils_default.isFunction(visitor)) {
    throw new TypeError("visitor must be a function");
  }
  function convertValue(value) {
    if (value === null) return "";
    if (utils_default.isDate(value)) {
      return value.toISOString();
    }
    if (!useBlob && utils_default.isBlob(value)) {
      throw new AxiosError_default("Blob is not supported. Use a Buffer instead.");
    }
    if (utils_default.isArrayBuffer(value) || utils_default.isTypedArray(value)) {
      return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
    }
    return value;
  }
  function defaultVisitor(value, key, path) {
    let arr = value;
    if (value && !path && typeof value === "object") {
      if (utils_default.endsWith(key, "{}")) {
        key = metaTokens ? key : key.slice(0, -2);
        value = JSON.stringify(value);
      } else if (utils_default.isArray(value) && isFlatArray(value) || (utils_default.isFileList(value) || utils_default.endsWith(key, "[]")) && (arr = utils_default.toArray(value))) {
        key = removeBrackets(key);
        arr.forEach(function each(el, index) {
          !(utils_default.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + "[]",
            convertValue(el)
          );
        });
        return false;
      }
    }
    if (isVisitable(value)) {
      return true;
    }
    formData.append(renderKey(path, key, dots), convertValue(value));
    return false;
  }
  const stack = [];
  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });
  function build(value, path) {
    if (utils_default.isUndefined(value)) return;
    if (stack.indexOf(value) !== -1) {
      throw Error("Circular reference detected in " + path.join("."));
    }
    stack.push(value);
    utils_default.forEach(value, function each(el, key) {
      const result = !(utils_default.isUndefined(el) || el === null) && visitor.call(
        formData,
        el,
        utils_default.isString(key) ? key.trim() : key,
        path,
        exposedHelpers
      );
      if (result === true) {
        build(el, path ? path.concat(key) : [key]);
      }
    });
    stack.pop();
  }
  if (!utils_default.isObject(obj)) {
    throw new TypeError("data must be an object");
  }
  build(obj);
  return formData;
}
var toFormData_default = toFormData;

// node_modules/axios/lib/helpers/AxiosURLSearchParams.js
function encode(str) {
  const charMap = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}
function AxiosURLSearchParams(params, options) {
  this._pairs = [];
  params && toFormData_default(params, this, options);
}
var prototype2 = AxiosURLSearchParams.prototype;
prototype2.append = function append(name, value) {
  this._pairs.push([name, value]);
};
prototype2.toString = function toString2(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode);
  } : encode;
  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + "=" + _encode(pair[1]);
  }, "").join("&");
};
var AxiosURLSearchParams_default = AxiosURLSearchParams;

// node_modules/axios/lib/helpers/buildURL.js
function encode2(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function buildURL(url, params, options) {
  if (!params) {
    return url;
  }
  const _encode = options && options.encode || encode2;
  if (utils_default.isFunction(options)) {
    options = {
      serialize: options
    };
  }
  const serializeFn = options && options.serialize;
  let serializedParams;
  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils_default.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams_default(params, options).toString(_encode);
  }
  if (serializedParams) {
    const hashmarkIndex = url.indexOf("#");
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
  }
  return url;
}

// node_modules/axios/lib/core/InterceptorManager.js
var InterceptorManager = class {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn2) {
    utils_default.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn2(h);
      }
    });
  }
};
var InterceptorManager_default = InterceptorManager;

// node_modules/axios/lib/defaults/transitional.js
var transitional_default = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};

// node_modules/axios/lib/platform/browser/classes/URLSearchParams.js
var URLSearchParams_default = typeof URLSearchParams !== "undefined" ? URLSearchParams : AxiosURLSearchParams_default;

// node_modules/axios/lib/platform/browser/classes/FormData.js
var FormData_default = typeof FormData !== "undefined" ? FormData : null;

// node_modules/axios/lib/platform/browser/classes/Blob.js
var Blob_default = typeof Blob !== "undefined" ? Blob : null;

// node_modules/axios/lib/platform/browser/index.js
var browser_default = {
  isBrowser: true,
  classes: {
    URLSearchParams: URLSearchParams_default,
    FormData: FormData_default,
    Blob: Blob_default
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
};

// node_modules/axios/lib/platform/common/utils.js
var utils_exports = {};
__export(utils_exports, {
  hasBrowserEnv: () => hasBrowserEnv,
  hasStandardBrowserEnv: () => hasStandardBrowserEnv,
  hasStandardBrowserWebWorkerEnv: () => hasStandardBrowserWebWorkerEnv,
  navigator: () => _navigator,
  origin: () => origin
});
var hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
var _navigator = typeof navigator === "object" && navigator || void 0;
var hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
var hasStandardBrowserWebWorkerEnv = (() => {
  return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
  self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
})();
var origin = hasBrowserEnv && window.location.href || "http://localhost";

// node_modules/axios/lib/platform/index.js
var platform_default = {
  ...utils_exports,
  ...browser_default
};

// node_modules/axios/lib/helpers/toURLEncodedForm.js
function toURLEncodedForm(data, options) {
  return toFormData_default(data, new platform_default.classes.URLSearchParams(), Object.assign({
    visitor: function(value, key, path, helpers) {
      if (platform_default.isNode && utils_default.isBuffer(value)) {
        this.append(key, value.toString("base64"));
        return false;
      }
      return helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}

// node_modules/axios/lib/helpers/formDataToJSON.js
function parsePropPath(name) {
  return utils_default.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
    return match[0] === "[]" ? "" : match[1] || match[0];
  });
}
function arrayToObject(arr) {
  const obj = {};
  const keys = Object.keys(arr);
  let i;
  const len = keys.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys[i];
    obj[key] = arr[key];
  }
  return obj;
}
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    let name = path[index++];
    if (name === "__proto__") return true;
    const isNumericKey = Number.isFinite(+name);
    const isLast = index >= path.length;
    name = !name && utils_default.isArray(target) ? target.length : name;
    if (isLast) {
      if (utils_default.hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }
      return !isNumericKey;
    }
    if (!target[name] || !utils_default.isObject(target[name])) {
      target[name] = [];
    }
    const result = buildPath(path, value, target[name], index);
    if (result && utils_default.isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }
    return !isNumericKey;
  }
  if (utils_default.isFormData(formData) && utils_default.isFunction(formData.entries)) {
    const obj = {};
    utils_default.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });
    return obj;
  }
  return null;
}
var formDataToJSON_default = formDataToJSON;

// node_modules/axios/lib/defaults/index.js
function stringifySafely(rawValue, parser, encoder) {
  if (utils_default.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils_default.trim(rawValue);
    } catch (e) {
      if (e.name !== "SyntaxError") {
        throw e;
      }
    }
  }
  return (encoder || JSON.stringify)(rawValue);
}
var defaults = {
  transitional: transitional_default,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || "";
    const hasJSONContentType = contentType.indexOf("application/json") > -1;
    const isObjectPayload = utils_default.isObject(data);
    if (isObjectPayload && utils_default.isHTMLForm(data)) {
      data = new FormData(data);
    }
    const isFormData2 = utils_default.isFormData(data);
    if (isFormData2) {
      return hasJSONContentType ? JSON.stringify(formDataToJSON_default(data)) : data;
    }
    if (utils_default.isArrayBuffer(data) || utils_default.isBuffer(data) || utils_default.isStream(data) || utils_default.isFile(data) || utils_default.isBlob(data) || utils_default.isReadableStream(data)) {
      return data;
    }
    if (utils_default.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils_default.isURLSearchParams(data)) {
      headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
      return data.toString();
    }
    let isFileList2;
    if (isObjectPayload) {
      if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
        return toURLEncodedForm(data, this.formSerializer).toString();
      }
      if ((isFileList2 = utils_default.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
        const _FormData = this.env && this.env.FormData;
        return toFormData_default(
          isFileList2 ? { "files[]": data } : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }
    if (isObjectPayload || hasJSONContentType) {
      headers.setContentType("application/json", false);
      return stringifySafely(data);
    }
    return data;
  }],
  transformResponse: [function transformResponse(data) {
    const transitional2 = this.transitional || defaults.transitional;
    const forcedJSONParsing = transitional2 && transitional2.forcedJSONParsing;
    const JSONRequested = this.responseType === "json";
    if (utils_default.isResponse(data) || utils_default.isReadableStream(data)) {
      return data;
    }
    if (data && utils_default.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
      const silentJSONParsing = transitional2 && transitional2.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === "SyntaxError") {
            throw AxiosError_default.from(e, AxiosError_default.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }
    return data;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: platform_default.classes.FormData,
    Blob: platform_default.classes.Blob
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      "Accept": "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
utils_default.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
  defaults.headers[method] = {};
});
var defaults_default = defaults;

// node_modules/axios/lib/helpers/parseHeaders.js
var ignoreDuplicateOf = utils_default.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]);
var parseHeaders_default = (rawHeaders) => {
  const parsed = {};
  let key;
  let val;
  let i;
  rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
    i = line.indexOf(":");
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();
    if (!key || parsed[key] && ignoreDuplicateOf[key]) {
      return;
    }
    if (key === "set-cookie") {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
    }
  });
  return parsed;
};

// node_modules/axios/lib/core/AxiosHeaders.js
var $internals = Symbol("internals");
function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }
  return utils_default.isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  const tokens = /* @__PURE__ */ Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;
  while (match = tokensRE.exec(str)) {
    tokens[match[1]] = match[2];
  }
  return tokens;
}
var isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(context, value, header, filter2, isHeaderNameFilter) {
  if (utils_default.isFunction(filter2)) {
    return filter2.call(this, value, header);
  }
  if (isHeaderNameFilter) {
    value = header;
  }
  if (!utils_default.isString(value)) return;
  if (utils_default.isString(filter2)) {
    return value.indexOf(filter2) !== -1;
  }
  if (utils_default.isRegExp(filter2)) {
    return filter2.test(value);
  }
}
function formatHeader(header) {
  return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
    return char.toUpperCase() + str;
  });
}
function buildAccessors(obj, header) {
  const accessorName = utils_default.toCamelCase(" " + header);
  ["get", "set", "has"].forEach((methodName) => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}
var AxiosHeaders = class {
  constructor(headers) {
    headers && this.set(headers);
  }
  set(header, valueOrRewrite, rewrite) {
    const self2 = this;
    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);
      if (!lHeader) {
        throw new Error("header name must be a non-empty string");
      }
      const key = utils_default.findKey(self2, lHeader);
      if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
        self2[key || _header] = normalizeValue(_value);
      }
    }
    const setHeaders = (headers, _rewrite) => utils_default.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
    if (utils_default.isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite);
    } else if (utils_default.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders(parseHeaders_default(header), valueOrRewrite);
    } else if (utils_default.isObject(header) && utils_default.isIterable(header)) {
      let obj = {}, dest, key;
      for (const entry of header) {
        if (!utils_default.isArray(entry)) {
          throw TypeError("Object iterator must return a key-value pair");
        }
        obj[key = entry[0]] = (dest = obj[key]) ? utils_default.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]] : entry[1];
      }
      setHeaders(obj, valueOrRewrite);
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }
    return this;
  }
  get(header, parser) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils_default.findKey(this, header);
      if (key) {
        const value = this[key];
        if (!parser) {
          return value;
        }
        if (parser === true) {
          return parseTokens(value);
        }
        if (utils_default.isFunction(parser)) {
          return parser.call(this, value, key);
        }
        if (utils_default.isRegExp(parser)) {
          return parser.exec(value);
        }
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(header, matcher) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils_default.findKey(this, header);
      return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }
    return false;
  }
  delete(header, matcher) {
    const self2 = this;
    let deleted = false;
    function deleteHeader(_header) {
      _header = normalizeHeader(_header);
      if (_header) {
        const key = utils_default.findKey(self2, _header);
        if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
          delete self2[key];
          deleted = true;
        }
      }
    }
    if (utils_default.isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }
    return deleted;
  }
  clear(matcher) {
    const keys = Object.keys(this);
    let i = keys.length;
    let deleted = false;
    while (i--) {
      const key = keys[i];
      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }
    return deleted;
  }
  normalize(format) {
    const self2 = this;
    const headers = {};
    utils_default.forEach(this, (value, header) => {
      const key = utils_default.findKey(headers, header);
      if (key) {
        self2[key] = normalizeValue(value);
        delete self2[header];
        return;
      }
      const normalized = format ? formatHeader(header) : String(header).trim();
      if (normalized !== header) {
        delete self2[header];
      }
      self2[normalized] = normalizeValue(value);
      headers[normalized] = true;
    });
    return this;
  }
  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }
  toJSON(asStrings) {
    const obj = /* @__PURE__ */ Object.create(null);
    utils_default.forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && utils_default.isArray(value) ? value.join(", ") : value);
    });
    return obj;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
  }
  getSetCookie() {
    return this.get("set-cookie") || [];
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }
  static concat(first, ...targets) {
    const computed = new this(first);
    targets.forEach((target) => computed.set(target));
    return computed;
  }
  static accessor(header) {
    const internals = this[$internals] = this[$internals] = {
      accessors: {}
    };
    const accessors = internals.accessors;
    const prototype3 = this.prototype;
    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);
      if (!accessors[lHeader]) {
        buildAccessors(prototype3, _header);
        accessors[lHeader] = true;
      }
    }
    utils_default.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
    return this;
  }
};
AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
utils_default.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1);
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  };
});
utils_default.freezeMethods(AxiosHeaders);
var AxiosHeaders_default = AxiosHeaders;

// node_modules/axios/lib/core/transformData.js
function transformData(fns, response) {
  const config = this || defaults_default;
  const context = response || config;
  const headers = AxiosHeaders_default.from(context.headers);
  let data = context.data;
  utils_default.forEach(fns, function transform(fn2) {
    data = fn2.call(config, data, headers.normalize(), response ? response.status : void 0);
  });
  headers.normalize();
  return data;
}

// node_modules/axios/lib/cancel/isCancel.js
function isCancel(value) {
  return !!(value && value.__CANCEL__);
}

// node_modules/axios/lib/cancel/CanceledError.js
function CanceledError(message, config, request) {
  AxiosError_default.call(this, message == null ? "canceled" : message, AxiosError_default.ERR_CANCELED, config, request);
  this.name = "CanceledError";
}
utils_default.inherits(CanceledError, AxiosError_default, {
  __CANCEL__: true
});
var CanceledError_default = CanceledError;

// node_modules/axios/lib/core/settle.js
function settle(resolve, reject, response) {
  const validateStatus2 = response.config.validateStatus;
  if (!response.status || !validateStatus2 || validateStatus2(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError_default(
      "Request failed with status code " + response.status,
      [AxiosError_default.ERR_BAD_REQUEST, AxiosError_default.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}

// node_modules/axios/lib/helpers/parseProtocol.js
function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || "";
}

// node_modules/axios/lib/helpers/speedometer.js
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;
  min = min !== void 0 ? min : 1e3;
  return function push(chunkLength) {
    const now = Date.now();
    const startedAt = timestamps[tail];
    if (!firstSampleTS) {
      firstSampleTS = now;
    }
    bytes[head] = chunkLength;
    timestamps[head] = now;
    let i = tail;
    let bytesCount = 0;
    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }
    head = (head + 1) % samplesCount;
    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }
    if (now - firstSampleTS < min) {
      return;
    }
    const passed = startedAt && now - startedAt;
    return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
  };
}
var speedometer_default = speedometer;

// node_modules/axios/lib/helpers/throttle.js
function throttle(fn2, freq) {
  let timestamp = 0;
  let threshold = 1e3 / freq;
  let lastArgs;
  let timer;
  const invoke = (args, now = Date.now()) => {
    timestamp = now;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn2.apply(null, args);
  };
  const throttled = (...args) => {
    const now = Date.now();
    const passed = now - timestamp;
    if (passed >= threshold) {
      invoke(args, now);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke(lastArgs);
        }, threshold - passed);
      }
    }
  };
  const flush = () => lastArgs && invoke(lastArgs);
  return [throttled, flush];
}
var throttle_default = throttle;

// node_modules/axios/lib/helpers/progressEventReducer.js
var progressEventReducer = (listener, isDownloadStream, freq = 3) => {
  let bytesNotified = 0;
  const _speedometer = speedometer_default(50, 250);
  return throttle_default((e) => {
    const loaded = e.loaded;
    const total = e.lengthComputable ? e.total : void 0;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;
    bytesNotified = loaded;
    const data = {
      loaded,
      total,
      progress: total ? loaded / total : void 0,
      bytes: progressBytes,
      rate: rate ? rate : void 0,
      estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
      event: e,
      lengthComputable: total != null,
      [isDownloadStream ? "download" : "upload"]: true
    };
    listener(data);
  }, freq);
};
var progressEventDecorator = (total, throttled) => {
  const lengthComputable = total != null;
  return [(loaded) => throttled[0]({
    lengthComputable,
    total,
    loaded
  }), throttled[1]];
};
var asyncDecorator = (fn2) => (...args) => utils_default.asap(() => fn2(...args));

// node_modules/axios/lib/helpers/isURLSameOrigin.js
var isURLSameOrigin_default = platform_default.hasStandardBrowserEnv ? /* @__PURE__ */ ((origin2, isMSIE) => (url) => {
  url = new URL(url, platform_default.origin);
  return origin2.protocol === url.protocol && origin2.host === url.host && (isMSIE || origin2.port === url.port);
})(
  new URL(platform_default.origin),
  platform_default.navigator && /(msie|trident)/i.test(platform_default.navigator.userAgent)
) : () => true;

// node_modules/axios/lib/helpers/cookies.js
var cookies_default = platform_default.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path, domain, secure) {
      const cookie = [name + "=" + encodeURIComponent(value)];
      utils_default.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
      utils_default.isString(path) && cookie.push("path=" + path);
      utils_default.isString(domain) && cookie.push("domain=" + domain);
      secure === true && cookie.push("secure");
      document.cookie = cookie.join("; ");
    },
    read(name) {
      const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove(name) {
      this.write(name, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);

// node_modules/axios/lib/helpers/isAbsoluteURL.js
function isAbsoluteURL(url) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}

// node_modules/axios/lib/helpers/combineURLs.js
function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
}

// node_modules/axios/lib/core/buildFullPath.js
function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
  let isRelativeUrl = !isAbsoluteURL(requestedURL);
  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}

// node_modules/axios/lib/core/mergeConfig.js
var headersToObject = (thing) => thing instanceof AxiosHeaders_default ? { ...thing } : thing;
function mergeConfig(config1, config2) {
  config2 = config2 || {};
  const config = {};
  function getMergedValue(target, source, prop, caseless) {
    if (utils_default.isPlainObject(target) && utils_default.isPlainObject(source)) {
      return utils_default.merge.call({ caseless }, target, source);
    } else if (utils_default.isPlainObject(source)) {
      return utils_default.merge({}, source);
    } else if (utils_default.isArray(source)) {
      return source.slice();
    }
    return source;
  }
  function mergeDeepProperties(a, b, prop, caseless) {
    if (!utils_default.isUndefined(b)) {
      return getMergedValue(a, b, prop, caseless);
    } else if (!utils_default.isUndefined(a)) {
      return getMergedValue(void 0, a, prop, caseless);
    }
  }
  function valueFromConfig2(a, b) {
    if (!utils_default.isUndefined(b)) {
      return getMergedValue(void 0, b);
    }
  }
  function defaultToConfig2(a, b) {
    if (!utils_default.isUndefined(b)) {
      return getMergedValue(void 0, b);
    } else if (!utils_default.isUndefined(a)) {
      return getMergedValue(void 0, a);
    }
  }
  function mergeDirectKeys(a, b, prop) {
    if (prop in config2) {
      return getMergedValue(a, b);
    } else if (prop in config1) {
      return getMergedValue(void 0, a);
    }
  }
  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b, prop) => mergeDeepProperties(headersToObject(a), headersToObject(b), prop, true)
  };
  utils_default.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
    const merge2 = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge2(config1[prop], config2[prop], prop);
    utils_default.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
  });
  return config;
}

// node_modules/axios/lib/helpers/resolveConfig.js
var resolveConfig_default = (config) => {
  const newConfig = mergeConfig({}, config);
  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
  newConfig.headers = headers = AxiosHeaders_default.from(headers);
  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);
  if (auth) {
    headers.set(
      "Authorization",
      "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
    );
  }
  let contentType;
  if (utils_default.isFormData(data)) {
    if (platform_default.hasStandardBrowserEnv || platform_default.hasStandardBrowserWebWorkerEnv) {
      headers.setContentType(void 0);
    } else if ((contentType = headers.getContentType()) !== false) {
      const [type, ...tokens] = contentType ? contentType.split(";").map((token) => token.trim()).filter(Boolean) : [];
      headers.setContentType([type || "multipart/form-data", ...tokens].join("; "));
    }
  }
  if (platform_default.hasStandardBrowserEnv) {
    withXSRFToken && utils_default.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
    if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin_default(newConfig.url)) {
      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies_default.read(xsrfCookieName);
      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }
  return newConfig;
};

// node_modules/axios/lib/adapters/xhr.js
var isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
var xhr_default = isXHRAdapterSupported && function(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    const _config = resolveConfig_default(config);
    let requestData = _config.data;
    const requestHeaders = AxiosHeaders_default.from(_config.headers).normalize();
    let { responseType, onUploadProgress, onDownloadProgress } = _config;
    let onCanceled;
    let uploadThrottled, downloadThrottled;
    let flushUpload, flushDownload;
    function done() {
      flushUpload && flushUpload();
      flushDownload && flushDownload();
      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
      _config.signal && _config.signal.removeEventListener("abort", onCanceled);
    }
    let request = new XMLHttpRequest();
    request.open(_config.method.toUpperCase(), _config.url, true);
    request.timeout = _config.timeout;
    function onloadend() {
      if (!request) {
        return;
      }
      const responseHeaders = AxiosHeaders_default.from(
        "getAllResponseHeaders" in request && request.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
      const response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };
      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);
      request = null;
    }
    if ("onloadend" in request) {
      request.onloadend = onloadend;
    } else {
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
          return;
        }
        setTimeout(onloadend);
      };
    }
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }
      reject(new AxiosError_default("Request aborted", AxiosError_default.ECONNABORTED, config, request));
      request = null;
    };
    request.onerror = function handleError() {
      reject(new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, config, request));
      request = null;
    };
    request.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
      const transitional2 = _config.transitional || transitional_default;
      if (_config.timeoutErrorMessage) {
        timeoutErrorMessage = _config.timeoutErrorMessage;
      }
      reject(new AxiosError_default(
        timeoutErrorMessage,
        transitional2.clarifyTimeoutError ? AxiosError_default.ETIMEDOUT : AxiosError_default.ECONNABORTED,
        config,
        request
      ));
      request = null;
    };
    requestData === void 0 && requestHeaders.setContentType(null);
    if ("setRequestHeader" in request) {
      utils_default.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }
    if (!utils_default.isUndefined(_config.withCredentials)) {
      request.withCredentials = !!_config.withCredentials;
    }
    if (responseType && responseType !== "json") {
      request.responseType = _config.responseType;
    }
    if (onDownloadProgress) {
      [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
      request.addEventListener("progress", downloadThrottled);
    }
    if (onUploadProgress && request.upload) {
      [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
      request.upload.addEventListener("progress", uploadThrottled);
      request.upload.addEventListener("loadend", flushUpload);
    }
    if (_config.cancelToken || _config.signal) {
      onCanceled = (cancel) => {
        if (!request) {
          return;
        }
        reject(!cancel || cancel.type ? new CanceledError_default(null, config, request) : cancel);
        request.abort();
        request = null;
      };
      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
      if (_config.signal) {
        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
      }
    }
    const protocol = parseProtocol(_config.url);
    if (protocol && platform_default.protocols.indexOf(protocol) === -1) {
      reject(new AxiosError_default("Unsupported protocol " + protocol + ":", AxiosError_default.ERR_BAD_REQUEST, config));
      return;
    }
    request.send(requestData || null);
  });
};

// node_modules/axios/lib/helpers/composeSignals.js
var composeSignals = (signals, timeout) => {
  const { length } = signals = signals ? signals.filter(Boolean) : [];
  if (timeout || length) {
    let controller = new AbortController();
    let aborted;
    const onabort = function(reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = reason instanceof Error ? reason : this.reason;
        controller.abort(err instanceof AxiosError_default ? err : new CanceledError_default(err instanceof Error ? err.message : err));
      }
    };
    let timer = timeout && setTimeout(() => {
      timer = null;
      onabort(new AxiosError_default(`timeout ${timeout} of ms exceeded`, AxiosError_default.ETIMEDOUT));
    }, timeout);
    const unsubscribe = () => {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach((signal2) => {
          signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
        });
        signals = null;
      }
    };
    signals.forEach((signal2) => signal2.addEventListener("abort", onabort));
    const { signal } = controller;
    signal.unsubscribe = () => utils_default.asap(unsubscribe);
    return signal;
  }
};
var composeSignals_default = composeSignals;

// node_modules/axios/lib/helpers/trackStream.js
var streamChunk = function* (chunk, chunkSize) {
  let len = chunk.byteLength;
  if (!chunkSize || len < chunkSize) {
    yield chunk;
    return;
  }
  let pos = 0;
  let end;
  while (pos < len) {
    end = pos + chunkSize;
    yield chunk.slice(pos, end);
    pos = end;
  }
};
var readBytes = async function* (iterable, chunkSize) {
  for await (const chunk of readStream(iterable)) {
    yield* streamChunk(chunk, chunkSize);
  }
};
var readStream = async function* (stream) {
  if (stream[Symbol.asyncIterator]) {
    yield* stream;
    return;
  }
  const reader = stream.getReader();
  try {
    for (; ; ) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      yield value;
    }
  } finally {
    await reader.cancel();
  }
};
var trackStream = (stream, chunkSize, onProgress, onFinish) => {
  const iterator2 = readBytes(stream, chunkSize);
  let bytes = 0;
  let done;
  let _onFinish = (e) => {
    if (!done) {
      done = true;
      onFinish && onFinish(e);
    }
  };
  return new ReadableStream({
    async pull(controller) {
      try {
        const { done: done2, value } = await iterator2.next();
        if (done2) {
          _onFinish();
          controller.close();
          return;
        }
        let len = value.byteLength;
        if (onProgress) {
          let loadedBytes = bytes += len;
          onProgress(loadedBytes);
        }
        controller.enqueue(new Uint8Array(value));
      } catch (err) {
        _onFinish(err);
        throw err;
      }
    },
    cancel(reason) {
      _onFinish(reason);
      return iterator2.return();
    }
  }, {
    highWaterMark: 2
  });
};

// node_modules/axios/lib/adapters/fetch.js
var isFetchSupported = typeof fetch === "function" && typeof Request === "function" && typeof Response === "function";
var isReadableStreamSupported = isFetchSupported && typeof ReadableStream === "function";
var encodeText = isFetchSupported && (typeof TextEncoder === "function" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) : async (str) => new Uint8Array(await new Response(str).arrayBuffer()));
var test = (fn2, ...args) => {
  try {
    return !!fn2(...args);
  } catch (e) {
    return false;
  }
};
var supportsRequestStream = isReadableStreamSupported && test(() => {
  let duplexAccessed = false;
  const hasContentType = new Request(platform_default.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      duplexAccessed = true;
      return "half";
    }
  }).headers.has("Content-Type");
  return duplexAccessed && !hasContentType;
});
var DEFAULT_CHUNK_SIZE = 64 * 1024;
var supportsResponseStream = isReadableStreamSupported && test(() => utils_default.isReadableStream(new Response("").body));
var resolvers = {
  stream: supportsResponseStream && ((res) => res.body)
};
isFetchSupported && ((res) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
    !resolvers[type] && (resolvers[type] = utils_default.isFunction(res[type]) ? (res2) => res2[type]() : (_, config) => {
      throw new AxiosError_default(`Response type '${type}' is not supported`, AxiosError_default.ERR_NOT_SUPPORT, config);
    });
  });
})(new Response());
var getBodyLength = async (body) => {
  if (body == null) {
    return 0;
  }
  if (utils_default.isBlob(body)) {
    return body.size;
  }
  if (utils_default.isSpecCompliantForm(body)) {
    const _request = new Request(platform_default.origin, {
      method: "POST",
      body
    });
    return (await _request.arrayBuffer()).byteLength;
  }
  if (utils_default.isArrayBufferView(body) || utils_default.isArrayBuffer(body)) {
    return body.byteLength;
  }
  if (utils_default.isURLSearchParams(body)) {
    body = body + "";
  }
  if (utils_default.isString(body)) {
    return (await encodeText(body)).byteLength;
  }
};
var resolveBodyLength = async (headers, body) => {
  const length = utils_default.toFiniteNumber(headers.getContentLength());
  return length == null ? getBodyLength(body) : length;
};
var fetch_default = isFetchSupported && (async (config) => {
  let {
    url,
    method,
    data,
    signal,
    cancelToken,
    timeout,
    onDownloadProgress,
    onUploadProgress,
    responseType,
    headers,
    withCredentials = "same-origin",
    fetchOptions
  } = resolveConfig_default(config);
  responseType = responseType ? (responseType + "").toLowerCase() : "text";
  let composedSignal = composeSignals_default([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
  let request;
  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
    composedSignal.unsubscribe();
  });
  let requestContentLength;
  try {
    if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
      let _request = new Request(url, {
        method: "POST",
        body: data,
        duplex: "half"
      });
      let contentTypeHeader;
      if (utils_default.isFormData(data) && (contentTypeHeader = _request.headers.get("content-type"))) {
        headers.setContentType(contentTypeHeader);
      }
      if (_request.body) {
        const [onProgress, flush] = progressEventDecorator(
          requestContentLength,
          progressEventReducer(asyncDecorator(onUploadProgress))
        );
        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
      }
    }
    if (!utils_default.isString(withCredentials)) {
      withCredentials = withCredentials ? "include" : "omit";
    }
    const isCredentialsSupported = "credentials" in Request.prototype;
    request = new Request(url, {
      ...fetchOptions,
      signal: composedSignal,
      method: method.toUpperCase(),
      headers: headers.normalize().toJSON(),
      body: data,
      duplex: "half",
      credentials: isCredentialsSupported ? withCredentials : void 0
    });
    let response = await fetch(request);
    const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
    if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
      const options = {};
      ["status", "statusText", "headers"].forEach((prop) => {
        options[prop] = response[prop];
      });
      const responseContentLength = utils_default.toFiniteNumber(response.headers.get("content-length"));
      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(
        responseContentLength,
        progressEventReducer(asyncDecorator(onDownloadProgress), true)
      ) || [];
      response = new Response(
        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
          flush && flush();
          unsubscribe && unsubscribe();
        }),
        options
      );
    }
    responseType = responseType || "text";
    let responseData = await resolvers[utils_default.findKey(resolvers, responseType) || "text"](response, config);
    !isStreamResponse && unsubscribe && unsubscribe();
    return await new Promise((resolve, reject) => {
      settle(resolve, reject, {
        data: responseData,
        headers: AxiosHeaders_default.from(response.headers),
        status: response.status,
        statusText: response.statusText,
        config,
        request
      });
    });
  } catch (err) {
    unsubscribe && unsubscribe();
    if (err && err.name === "TypeError" && /Load failed|fetch/i.test(err.message)) {
      throw Object.assign(
        new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, config, request),
        {
          cause: err.cause || err
        }
      );
    }
    throw AxiosError_default.from(err, err && err.code, config, request);
  }
});

// node_modules/axios/lib/adapters/adapters.js
var knownAdapters = {
  http: null_default,
  xhr: xhr_default,
  fetch: fetch_default
};
utils_default.forEach(knownAdapters, (fn2, value) => {
  if (fn2) {
    try {
      Object.defineProperty(fn2, "name", { value });
    } catch (e) {
    }
    Object.defineProperty(fn2, "adapterName", { value });
  }
});
var renderReason = (reason) => `- ${reason}`;
var isResolvedHandle = (adapter) => utils_default.isFunction(adapter) || adapter === null || adapter === false;
var adapters_default = {
  getAdapter: (adapters) => {
    adapters = utils_default.isArray(adapters) ? adapters : [adapters];
    const { length } = adapters;
    let nameOrAdapter;
    let adapter;
    const rejectedReasons = {};
    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters[i];
      let id;
      adapter = nameOrAdapter;
      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
        if (adapter === void 0) {
          throw new AxiosError_default(`Unknown adapter '${id}'`);
        }
      }
      if (adapter) {
        break;
      }
      rejectedReasons[id || "#" + i] = adapter;
    }
    if (!adapter) {
      const reasons = Object.entries(rejectedReasons).map(
        ([id, state]) => `adapter ${id} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
      );
      let s = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
      throw new AxiosError_default(
        `There is no suitable adapter to dispatch the request ` + s,
        "ERR_NOT_SUPPORT"
      );
    }
    return adapter;
  },
  adapters: knownAdapters
};

// node_modules/axios/lib/core/dispatchRequest.js
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
  if (config.signal && config.signal.aborted) {
    throw new CanceledError_default(null, config);
  }
}
function dispatchRequest(config) {
  throwIfCancellationRequested(config);
  config.headers = AxiosHeaders_default.from(config.headers);
  config.data = transformData.call(
    config,
    config.transformRequest
  );
  if (["post", "put", "patch"].indexOf(config.method) !== -1) {
    config.headers.setContentType("application/x-www-form-urlencoded", false);
  }
  const adapter = adapters_default.getAdapter(config.adapter || defaults_default.adapter);
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);
    response.data = transformData.call(
      config,
      config.transformResponse,
      response
    );
    response.headers = AxiosHeaders_default.from(response.headers);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          config.transformResponse,
          reason.response
        );
        reason.response.headers = AxiosHeaders_default.from(reason.response.headers);
      }
    }
    return Promise.reject(reason);
  });
}

// node_modules/axios/lib/env/data.js
var VERSION = "1.9.0";

// node_modules/axios/lib/helpers/validator.js
var validators = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i) => {
  validators[type] = function validator(thing) {
    return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
  };
});
var deprecatedWarnings = {};
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
  }
  return (value, opt, opts) => {
    if (validator === false) {
      throw new AxiosError_default(
        formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
        AxiosError_default.ERR_DEPRECATED
      );
    }
    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      console.warn(
        formatMessage(
          opt,
          " has been deprecated since v" + version + " and will be removed in the near future"
        )
      );
    }
    return validator ? validator(value, opt, opts) : true;
  };
};
validators.spelling = function spelling(correctSpelling) {
  return (value, opt) => {
    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
    return true;
  };
};
function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== "object") {
    throw new AxiosError_default("options must be an object", AxiosError_default.ERR_BAD_OPTION_VALUE);
  }
  const keys = Object.keys(options);
  let i = keys.length;
  while (i-- > 0) {
    const opt = keys[i];
    const validator = schema[opt];
    if (validator) {
      const value = options[opt];
      const result = value === void 0 || validator(value, opt, options);
      if (result !== true) {
        throw new AxiosError_default("option " + opt + " must be " + result, AxiosError_default.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError_default("Unknown option " + opt, AxiosError_default.ERR_BAD_OPTION);
    }
  }
}
var validator_default = {
  assertOptions,
  validators
};

// node_modules/axios/lib/core/Axios.js
var validators2 = validator_default.validators;
var Axios = class {
  constructor(instanceConfig) {
    this.defaults = instanceConfig || {};
    this.interceptors = {
      request: new InterceptorManager_default(),
      response: new InterceptorManager_default()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(configOrUrl, config) {
    try {
      return await this._request(configOrUrl, config);
    } catch (err) {
      if (err instanceof Error) {
        let dummy = {};
        Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();
        const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
        try {
          if (!err.stack) {
            err.stack = stack;
          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
            err.stack += "\n" + stack;
          }
        } catch (e) {
        }
      }
      throw err;
    }
  }
  _request(configOrUrl, config) {
    if (typeof configOrUrl === "string") {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }
    config = mergeConfig(this.defaults, config);
    const { transitional: transitional2, paramsSerializer, headers } = config;
    if (transitional2 !== void 0) {
      validator_default.assertOptions(transitional2, {
        silentJSONParsing: validators2.transitional(validators2.boolean),
        forcedJSONParsing: validators2.transitional(validators2.boolean),
        clarifyTimeoutError: validators2.transitional(validators2.boolean)
      }, false);
    }
    if (paramsSerializer != null) {
      if (utils_default.isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer
        };
      } else {
        validator_default.assertOptions(paramsSerializer, {
          encode: validators2.function,
          serialize: validators2.function
        }, true);
      }
    }
    if (config.allowAbsoluteUrls !== void 0) {
    } else if (this.defaults.allowAbsoluteUrls !== void 0) {
      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
    } else {
      config.allowAbsoluteUrls = true;
    }
    validator_default.assertOptions(config, {
      baseUrl: validators2.spelling("baseURL"),
      withXsrfToken: validators2.spelling("withXSRFToken")
    }, true);
    config.method = (config.method || this.defaults.method || "get").toLowerCase();
    let contextHeaders = headers && utils_default.merge(
      headers.common,
      headers[config.method]
    );
    headers && utils_default.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (method) => {
        delete headers[method];
      }
    );
    config.headers = AxiosHeaders_default.concat(contextHeaders, headers);
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
        return;
      }
      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    let promise;
    let i = 0;
    let len;
    if (!synchronousRequestInterceptors) {
      const chain = [dispatchRequest.bind(this), void 0];
      chain.unshift.apply(chain, requestInterceptorChain);
      chain.push.apply(chain, responseInterceptorChain);
      len = chain.length;
      promise = Promise.resolve(config);
      while (i < len) {
        promise = promise.then(chain[i++], chain[i++]);
      }
      return promise;
    }
    len = requestInterceptorChain.length;
    let newConfig = config;
    i = 0;
    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }
    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }
    i = 0;
    len = responseInterceptorChain.length;
    while (i < len) {
      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
    }
    return promise;
  }
  getUri(config) {
    config = mergeConfig(this.defaults, config);
    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
};
utils_default.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method,
      url,
      data: (config || {}).data
    }));
  };
});
utils_default.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method,
        headers: isForm ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url,
        data
      }));
    };
  }
  Axios.prototype[method] = generateHTTPMethod();
  Axios.prototype[method + "Form"] = generateHTTPMethod(true);
});
var Axios_default = Axios;

// node_modules/axios/lib/cancel/CancelToken.js
var CancelToken = class _CancelToken {
  constructor(executor) {
    if (typeof executor !== "function") {
      throw new TypeError("executor must be a function.");
    }
    let resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });
    const token = this;
    this.promise.then((cancel) => {
      if (!token._listeners) return;
      let i = token._listeners.length;
      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });
    this.promise.then = (onfulfilled) => {
      let _resolve;
      const promise = new Promise((resolve) => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);
      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };
      return promise;
    };
    executor(function cancel(message, config, request) {
      if (token.reason) {
        return;
      }
      token.reason = new CanceledError_default(message, config, request);
      resolvePromise(token.reason);
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }
    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }
  toAbortSignal() {
    const controller = new AbortController();
    const abort = (err) => {
      controller.abort(err);
    };
    this.subscribe(abort);
    controller.signal.unsubscribe = () => this.unsubscribe(abort);
    return controller.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new _CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token,
      cancel
    };
  }
};
var CancelToken_default = CancelToken;

// node_modules/axios/lib/helpers/spread.js
function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}

// node_modules/axios/lib/helpers/isAxiosError.js
function isAxiosError(payload) {
  return utils_default.isObject(payload) && payload.isAxiosError === true;
}

// node_modules/axios/lib/helpers/HttpStatusCode.js
var HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});
var HttpStatusCode_default = HttpStatusCode;

// node_modules/axios/lib/axios.js
function createInstance(defaultConfig) {
  const context = new Axios_default(defaultConfig);
  const instance = bind(Axios_default.prototype.request, context);
  utils_default.extend(instance, Axios_default.prototype, context, { allOwnKeys: true });
  utils_default.extend(instance, context, null, { allOwnKeys: true });
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };
  return instance;
}
var axios = createInstance(defaults_default);
axios.Axios = Axios_default;
axios.CanceledError = CanceledError_default;
axios.CancelToken = CancelToken_default;
axios.isCancel = isCancel;
axios.VERSION = VERSION;
axios.toFormData = toFormData_default;
axios.AxiosError = AxiosError_default;
axios.Cancel = axios.CanceledError;
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread;
axios.isAxiosError = isAxiosError;
axios.mergeConfig = mergeConfig;
axios.AxiosHeaders = AxiosHeaders_default;
axios.formToJSON = (thing) => formDataToJSON_default(utils_default.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = adapters_default.getAdapter;
axios.HttpStatusCode = HttpStatusCode_default;
axios.default = axios;
var axios_default = axios;

// node_modules/axios/index.js
var {
  Axios: Axios2,
  AxiosError: AxiosError2,
  CanceledError: CanceledError2,
  isCancel: isCancel2,
  CancelToken: CancelToken2,
  VERSION: VERSION2,
  all: all2,
  Cancel,
  isAxiosError: isAxiosError2,
  spread: spread2,
  toFormData: toFormData2,
  AxiosHeaders: AxiosHeaders2,
  HttpStatusCode: HttpStatusCode2,
  formToJSON,
  getAdapter,
  mergeConfig: mergeConfig2
} = axios_default;

// node_modules/@3dverse/api/dist/index.mjs
var axiosInstance = axios_default.create({
  baseURL: "https://api.3dverse.com/app/v1"
});
function getAssetDescription({
  asset_container,
  asset_id
}, headers) {
  return axiosInstance({
    method: "get",
    url: "/assets/" + asset_container + "/" + asset_id + "/description",
    headers
  });
}
function setUserToken(userToken) {
  axiosInstance.defaults.headers.common["user_token"] = userToken;
  delete axiosInstance.defaults.headers.common["api_key"];
}
var ServiceError = class extends Error {
  //--------------------------------------------------------------------------
  constructor(errorCode, httpCode, message) {
    super();
    __publicField(this, "errorCode");
    __publicField(this, "httpCode");
    __publicField(this, "message");
    this.errorCode = errorCode;
    this.httpCode = httpCode;
    this.message = message;
  }
};
var ApiError = class extends ServiceError {
  constructor(errorCode, status, message, serviceError) {
    super(errorCode, status, message);
    __publicField(this, "serviceError");
    this.serviceError = serviceError;
  }
};
var UnexpectedServiceError = class extends ServiceError {
  constructor(status, unexpectedError) {
    super(0, status, "Unexpected service error error");
    __publicField(this, "unexpectedError");
    this.unexpectedError = unexpectedError;
  }
};
function installInterceptors() {
  const CLIENT_ERROR = 400;
  const INTERNAL_SERVER_ERROR = 500;
  axiosRetry(axiosInstance, {
    retries: 5,
    retryDelay: axiosRetry.exponentialDelay,
    retryCondition: shouldRetryRequest
  });
  axiosInstance.interceptors.response.use(
    (successFulResponse) => {
      if (successFulResponse.config.responseType === "stream") {
        successFulResponse.data.pause();
      }
      return successFulResponse;
    },
    (error) => {
      var _a2, _b;
      if (!error.response) {
        return Promise.reject(error);
      }
      const axiosError = error;
      const status = ((_a2 = axiosError.response) == null ? void 0 : _a2.status) || INTERNAL_SERVER_ERROR;
      const errorData = (_b = axiosError.response) == null ? void 0 : _b.data;
      if (!errorData && axiosError.request.method === "HEAD" && status >= CLIENT_ERROR && status < INTERNAL_SERVER_ERROR) {
        return axiosError.response;
      }
      if (!errorData || typeof errorData !== "object") {
        return Promise.reject(new UnexpectedServiceError(status, errorData));
      }
      const serviceError = errorData;
      return Promise.reject(new ApiError(serviceError.errorCode, status, serviceError.message, serviceError));
    }
  );
}
function shouldRetryRequest(error) {
  var _a2;
  const status = (_a2 = error.response) == null ? void 0 : _a2.status;
  switch (status) {
    case 403:
    case 404:
      return true;
    default:
      return isNetworkError(error) || isIdempotentRequestError(error);
  }
}
installInterceptors();

// node_modules/react-icons/lib/iconBase.mjs
var import_react2 = __toESM(require_react(), 1);

// node_modules/react-icons/lib/iconContext.mjs
var import_react = __toESM(require_react(), 1);
var DefaultContext = {
  color: void 0,
  size: void 0,
  className: void 0,
  style: void 0,
  attr: void 0
};
var IconContext = import_react.default.createContext && import_react.default.createContext(DefaultContext);

// node_modules/react-icons/lib/iconBase.mjs
var _excluded = ["attr", "size", "title"];
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  for (var key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty2(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
function _defineProperty2(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function Tree2Element(tree) {
  return tree && tree.map((node, i) => import_react2.default.createElement(node.tag, _objectSpread2({
    key: i
  }, node.attr), Tree2Element(node.child)));
}
function GenIcon(data) {
  return (props) => import_react2.default.createElement(IconBase, _extends({
    attr: _objectSpread2({}, data.attr)
  }, props), Tree2Element(data.child));
}
function IconBase(props) {
  var elem = (conf) => {
    var {
      attr,
      size,
      title
    } = props, svgProps = _objectWithoutProperties(props, _excluded);
    var computedSize = size || conf.size || "1em";
    var className;
    if (conf.className) className = conf.className;
    if (props.className) className = (className ? className + " " : "") + props.className;
    return import_react2.default.createElement("svg", _extends({
      stroke: "currentColor",
      fill: "currentColor",
      strokeWidth: "0"
    }, conf.attr, attr, svgProps, {
      className,
      style: _objectSpread2(_objectSpread2({
        color: props.color || conf.color
      }, conf.style), props.style),
      height: computedSize,
      width: computedSize,
      xmlns: "http://www.w3.org/2000/svg"
    }), title && import_react2.default.createElement("title", null, title), props.children);
  };
  return IconContext !== void 0 ? import_react2.default.createElement(IconContext.Consumer, null, (conf) => elem(conf)) : elem(DefaultContext);
}

// node_modules/react-icons/fa6/index.mjs
function FaArrowRotateLeft(props) {
  return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 512 512" }, "child": [{ "tag": "path", "attr": { "d": "M125.7 160l50.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L48 224c-17.7 0-32-14.3-32-32L16 64c0-17.7 14.3-32 32-32s32 14.3 32 32l0 51.2L97.6 97.6c87.5-87.5 229.3-87.5 316.8 0s87.5 229.3 0 316.8s-229.3 87.5-316.8 0c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3s-163.8-62.5-226.3 0L125.7 160z" }, "child": [] }] })(props);
}
function FaFolder(props) {
  return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 512 512" }, "child": [{ "tag": "path", "attr": { "d": "M64 480H448c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64H288c-10.1 0-19.6-4.7-25.6-12.8L243.2 57.6C231.1 41.5 212.1 32 192 32H64C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64z" }, "child": [] }] })(props);
}
function FaRegSun(props) {
  return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 512 512" }, "child": [{ "tag": "path", "attr": { "d": "M375.7 19.7c-1.5-8-6.9-14.7-14.4-17.8s-16.1-2.2-22.8 2.4L256 61.1 173.5 4.2c-6.7-4.6-15.3-5.5-22.8-2.4s-12.9 9.8-14.4 17.8l-18.1 98.5L19.7 136.3c-8 1.5-14.7 6.9-17.8 14.4s-2.2 16.1 2.4 22.8L61.1 256 4.2 338.5c-4.6 6.7-5.5 15.3-2.4 22.8s9.8 13 17.8 14.4l98.5 18.1 18.1 98.5c1.5 8 6.9 14.7 14.4 17.8s16.1 2.2 22.8-2.4L256 450.9l82.5 56.9c6.7 4.6 15.3 5.5 22.8 2.4s12.9-9.8 14.4-17.8l18.1-98.5 98.5-18.1c8-1.5 14.7-6.9 17.8-14.4s2.2-16.1-2.4-22.8L450.9 256l56.9-82.5c4.6-6.7 5.5-15.3 2.4-22.8s-9.8-12.9-17.8-14.4l-98.5-18.1L375.7 19.7zM269.6 110l65.6-45.2 14.4 78.3c1.8 9.8 9.5 17.5 19.3 19.3l78.3 14.4L402 242.4c-5.7 8.2-5.7 19 0 27.2l45.2 65.6-78.3 14.4c-9.8 1.8-17.5 9.5-19.3 19.3l-14.4 78.3L269.6 402c-8.2-5.7-19-5.7-27.2 0l-65.6 45.2-14.4-78.3c-1.8-9.8-9.5-17.5-19.3-19.3L64.8 335.2 110 269.6c5.7-8.2 5.7-19 0-27.2L64.8 176.8l78.3-14.4c9.8-1.8 17.5-9.5 19.3-19.3l14.4-78.3L242.4 110c8.2 5.7 19 5.7 27.2 0zM256 368a112 112 0 1 0 0-224 112 112 0 1 0 0 224zM192 256a64 64 0 1 1 128 0 64 64 0 1 1 -128 0z" }, "child": [] }] })(props);
}

// node_modules/@3dverse/livelink-react-ui/dist/index.mjs
var import_react7 = __toESM(require_react(), 1);
var import_react8 = __toESM(require_react(), 1);
var import_react9 = __toESM(require_react(), 1);
var import_react10 = __toESM(require_react(), 1);
var import_react11 = __toESM(require_react(), 1);
var import_react12 = __toESM(require_react(), 1);
var import_react13 = __toESM(require_react(), 1);
var import_react14 = __toESM(require_react(), 1);
var import_react15 = __toESM(require_react(), 1);
var import_react16 = __toESM(require_react(), 1);
var import_react17 = __toESM(require_react(), 1);
var import_react18 = __toESM(require_react(), 1);
var import_react19 = __toESM(require_react(), 1);
var import_react20 = __toESM(require_react(), 1);
var import_react21 = __toESM(require_react(), 1);
var import_react22 = __toESM(require_react(), 1);
var import_react23 = __toESM(require_react(), 1);
var import_react24 = __toESM(require_react(), 1);
var import_react25 = __toESM(require_react(), 1);
globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"] = `:root{--3dverse-color-bg-ground: hsl(227, 39%, 5%);--3dverse-color-bg-underground: hsl(240, 20%, 2%);--3dverse-color-bg-overground: hsl(224, 30.61%, 9.61%);--3dverse-color-bg-foreground: hsl(228, 15%, 13%);--3dverse-color-content-primary: hsl(227.44, 84.31%, 90%);--3dverse-color-content-primary-dark: hsl(229, 27%, 12%);--3dverse-color-content-secondary: hsl(231, 70%, 84%);--3dverse-color-content-tertiary: hsl(231, 40%, 70%);--3dverse-color-content-quaternary: hsl(230, 18%, 34%);--3dverse-color-border-primary-alpha: hsl(228, 21%, 40%, .5);--3dverse-color-border-secondary-alpha: hsl(228, 19%, 30%, .5);--3dverse-color-border-tertiary-alpha: hsl(228, 21%, 20%, .5);--3dverse-color-border-primary: hsl(228, 19%, 40%);--3dverse-color-border-secondary: hsl(228, 19%, 30%);--3dverse-color-border-tertiary: hsl(228, 21%, 23%);--3dverse-color-border-quaternary: hsl(227, 11%, 15%);--3dverse-color-accent: var(--3dverse-color-accent-500);--3dverse-color-accent-100: hsl(47, 85%, 78%);--3dverse-color-accent-400: hsl(47, 90%, 60%);--3dverse-color-accent-500: hsl(47, 100%, 50%);--3dverse-color-accent-600: hsl(47, 100%, 45%);--3dverse-color-accent-700: hsl(47, 90%, 16%);--3dverse-color-accent-800: hsl(57, 180%, 6%);--3dverse-color-feedback-informative: var(--3dverse-color-feedback-informative-500);--3dverse-color-feedback-informative-100: hsl(202, 100%, 84%);--3dverse-color-feedback-informative-500: hsl(202, 100%, 62%);--3dverse-color-feedback-informative-800: hsl(203, 94%, 21%);--3dverse-color-feedback-informative-900: hsl(202, 50%, 25%);--3dverse-color-feedback-positive: var(--3dverse-color-feedback-positive-500);--3dverse-color-feedback-positive-500: hsl(158, 64%, 52%);--3dverse-color-feedback-positive-800: hsl(157.2, 48%, 20.4%);--3dverse-color-feedback-positive-900: hsl(158, 62.5%, 9.41%);--3dverse-color-feedback-warning: var(--3dverse-color-feedback-warning-500);--3dverse-color-feedback-warning-500: hsl(14.4, 86%, 55.3%);--3dverse-color-feedback-warning-800: hsl(12, 29.4%, 13.3%);--3dverse-color-feedback-negative: var(--3dverse-color-feedback-negative-500);--3dverse-color-feedback-negative-400: hsl(0, 87.8%, 67.84%);--3dverse-color-feedback-negative-500: hsl(0, 95.7%, 63.53%);--3dverse-color-feedback-negative-600: hsl(0, 63%, 48%);--3dverse-color-feedback-negative-800: hsl(355.52, 46.21%, 28.43%);--3dverse-spacing-1: .25rem;--3dverse-spacing-2: .5rem;--3dverse-spacing-3: .75rem;--3dverse-spacing-4: 1rem;--3dverse-spacing-5: 1.25rem;--3dverse-spacing-6: 1.5rem;--3dverse-spacing-7: 1.75rem;--3dverse-spacing-8: 2rem;--3dverse-spacing-9: 2.25rem;--3dverse-spacing-10: 2.5rem;--3dverse-spacing-12: 3rem;--3dverse-spacing-14: 3.5rem;--3dverse-spacing-16: 4rem;--3dverse-spacing-20: 5rem;--3dverse-spacing-24: 6rem;--3dverse-spacing-28: 7rem;--3dverse-spacing-32: 8rem;--3dverse-spacing-36: 9rem;--3dverse-spacing-40: 10rem;--3dverse-spacing-44: 11rem;--3dverse-spacing-48: 12rem;--3dverse-spacing-52: 13rem;--3dverse-spacing-56: 14rem;--3dverse-spacing-60: 15rem;--3dverse-spacing-64: 16rem;--3dverse-spacing-72: 18rem;--3dverse-spacing-80: 20rem;--3dverse-spacing-96: 24rem;--3dverse-font-size-3xs: .7rem;--3dverse-font-size-2xs: .8rem;--3dverse-font-size-xs: .85rem;--3dverse-font-size-sm: .95rem;--3dverse-font-size-md: 1rem;--3dverse-font-size-lg: 1.125rem;--3dverse-font-size-xl: 1.25rem;--3dverse-font-size-2xl: 1.5rem;--3dverse-font-size-3xl: 1.875rem;--3dverse-font-size-4xl: 2.25rem;--3dverse-font-size-5xl: 3rem;--3dverse-font-size-6xl: 3.75rem;--3dverse-font-size-7xl: 4rem;--3dverse-font-size-8xl: 6rem;--3dverse-font-size-9xl: 8rem;--3dverse-leading-3: .75rem;--3dverse-leading-4: 1rem;--3dverse-leading-5: 1.25rem;--3dverse-leading-6: 1.5rem;--3dverse-leading-7: 1.75rem;--3dverse-leading-8: 2rem;--3dverse-leading-9: 2.25rem;--3dverse-leading-10: 2.5rem;--3dverse-leading-none: 1;--3dverse-leading-tight: 1.25;--3dverse-leading-snug: 1.375;--3dverse-leading-normal: 1.5;--3dverse-leading-relaxed: 1.625;--3dverse-leading-loose: 2;--3dverse-border-radius-sm: .125rem;--3dverse-border-radius-md: .3125rem;--3dverse-border-radius-lg: .5rem;--3dverse-border-radius-xl: .75rem;--3dverse-border-radius-2xl: 1rem;--3dverse-border-radius-3xl: 1.5rem;--3dverse-shadow-xs: 0px 1px 1px oklab(0 0 0 / .5);--3dverse-shadow-sm: 0 1px 2px 0 oklab(0 0 0 / .5);--3dverse-shadow-md: 0 4px 6px -1px oklab(0 0 0 / .5), 0 2px 4px -2px oklab(0 0 0 / .5);--3dverse-shadow-lg: 0 10px 15px -3px oklab(0 0 0 / .2), 0 4px 6px -4px oklab(0 0 0 / .5);--3dverse-shadow-xl: 0 20px 25px -5px oklab(0 0 0 / .2), 0 8px 10px -6px oklab(0 0 0 / .5);--3dverse-shadow-2xl: 0 25px 50px -12px oklab(0 0 0 / .5);--3dverse-shadow-3xl: 0 35px 60px -15px oklab(0 0 0 / .5)}.livelink-react-ui-component{font-family:ui-sans-serif,sans-serif;line-height:1.5;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent;-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:100%;color:var(--3dverse-color-content-primary)}.livelink-react-ui-component :where(h1,h2,h3,h4,p,figure,blockquote,dl,dd){margin:0}.livelink-react-ui-component :where(input,button,textarea,select){font:inherit}.livelink-react-ui-component :where(input,textarea){caret-color:var(--3dverse-color-accent);&::selection{background-color:var(--3dverse-color-accent);color:var(--3dverse-color-content-primary-dark)}}.livelink-react-ui-component :where(*,*:before,*:after){box-sizing:border-box}[data-theme=light] .livelink-react-ui-component{color:var(--3dverse-color-content-primary)}.style-module__wrapper_8jv4Ha__032{background-color:color-mix(in srgb,var(--3dverse-color-bg-foreground) 85%,transparent);backdrop-filter:blur(34px);box-shadow:0 0 0 1px var(--3dverse-color-border-primary);border-radius:.5rem;display:flex}.style-module__container_nGfgUW__032{width:100%;height:100%;position:absolute;top:0;left:0}.style-module__overlay_nGfgUW__032{background-color:var(--3dverse-color-bg-underground);z-index:1;width:100%;height:100%;position:absolute;inset:0}.style-module__panelContainer_nGfgUW__032{z-index:2;display:flex;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.style-module__panel_nGfgUW__032{background-color:color-mix(in srgb,var(--3dverse-color-bg-ground) 20%,transparent);width:18rem;box-shadow:none;border-radius:9999px;flex-direction:column;padding:6px;animation:.3s ease-in-out style-module__appear-top_nGfgUW__032;display:flex}.style-module__inner_nGfgUW__032{text-align:center;padding:.85rem 0;position:relative}.style-module__startLine_nGfgUW__032{background-color:var(--3dverse-color-accent);border-radius:9999px;width:1px;height:.5rem;position:absolute;top:1px;left:50%;transform:translate(-50%,-50%)}.style-module__svgLine_nGfgUW__032{fill:none;width:100%;height:100%;position:absolute;top:50%;left:50%;overflow:visible;transform:translate(-50%,-50%)}.style-module__label_nGfgUW__032{color:var(--3dverse-color-content-primary);font-size:.875rem;font-weight:400;line-height:1.25rem}.style-module__timerLabel_nGfgUW__032{letter-spacing:.04em;color:var(--3dverse-color-content-secondary);margin-top:1px;font-size:.75rem;font-weight:400}.style-module__timer_nGfgUW__032{letter-spacing:.03em;font-variant-numeric:tabular-nums;color:var(--3dverse-color-accent)}@keyframes style-module__appear-top_nGfgUW__032{0%{translate:var(--translate-x, 0px) calc(calc(var(--translate-y, 0) * 1px) + var(--animation-appear-offset, 16px));opacity:0}to{translate:var(--translate-x, 0px) var(--translate-y, 0px);opacity:1}}.style-module__xs_8VcAhq__032{width:.65rem}.style-module__sm_8VcAhq__032{width:.85rem}.style-module__md_8VcAhq__032{width:1rem}.style-module__button_XePJ4q__032{cursor:pointer;border:1px solid #0000;border-radius:4px;justify-content:center;align-items:center;font-weight:500;transition:all .2s;display:inline-flex}.style-module__button_XePJ4q__032:disabled{opacity:.5;cursor:not-allowed}.style-module__ghost_XePJ4q__032{color:var(--3dverse-color-content-primary);background-color:#0000;border-color:#0000}.style-module__secondary_XePJ4q__032{color:var(--3dverse-color-content-primary);background-color:var(--3dverse-color-background-secondary);border-color:#0000}.style-module__outline_XePJ4q__032{color:var(--3dverse-color-content-primary);border-color:var(--3dverse-color-content-primary);background-color:#0000}.style-module__xs_XePJ4q__032{font-size:var(--3dverse-font-size-xs);padding:4px 8px}.style-module__sm_XePJ4q__032{font-size:var(--3dverse-font-size-sm);padding:6px 12px}.style-module__md_XePJ4q__032{font-size:var(--3dverse-font-size-md);padding:8px 16px}.style-module__iconButton_789LYW__032{padding:0}.style-module__xs_789LYW__032{padding:4px;font-size:12px}.style-module__sm_789LYW__032{padding:6px;font-size:14px}.style-module__md_789LYW__032{padding:8px;font-size:16px}.style-module__wrapper_49y43q__032{--tooltip-bg: var(--3dverse-color-content-primary);--tooltip-color: var(--3dverse-color-bg-underground);display:flex;position:relative}.style-module__tooltipContent_49y43q__032{padding:0 var(--3dverse-spacing-2);font-size:var(--3dverse-font-size-xs);white-space:nowrap;color:var(--tooltip-color);background-color:var(--tooltip-bg);box-shadow:var(--3dverse-shadow-lg);opacity:0;pointer-events:none;z-index:10;border-radius:4px;transition:opacity .2s,translate .2s;position:absolute;bottom:100%;left:50%;translate:-50% -.25rem}.style-module__wrapper_49y43q__032:hover .style-module__tooltipContent_49y43q__032,.style-module__wrapper_49y43q__032:focus-within .style-module__tooltipContent_49y43q__032{opacity:1;pointer-events:auto;translate:-50% -.5rem}.style-module__tooltipContent_49y43q__032:after{content:"";border-style:solid;border-width:4px;border-color:var(--tooltip-bg) transparent transparent transparent;position:absolute;top:100%;left:50%;translate:-50%}.style-module__spinner_NG8udW__032{width:var(--spinner-size, 1.25rem);height:var(--spinner-size, 1.25rem);border:1px solid #0000;border-top-color:var(--3dverse-color-accent);border-radius:9999px;animation:.8s linear infinite style-module__spin_NG8udW__032}@keyframes style-module__spin_NG8udW__032{to{transform:rotate(360deg)}}.style-module__wrapper_j6QF-q__032{cursor:pointer;user-select:none;align-items:center;gap:.5rem;display:inline-flex}.style-module__input_j6QF-q__032{opacity:0;pointer-events:none;position:absolute}.style-module__box_j6QF-q__032{width:var(--size);height:var(--size);border:1px solid var(--3dverse-color-border-primary);background-color:var(--3dverse-color-bg-overground);border-radius:3px;place-items:center;transition:all .2s;display:grid}.style-module__icon_j6QF-q__032{width:calc(var(--size) * .75);height:calc(var(--size) * .75);stroke:var(--3dverse-color-content-primary-dark);stroke-width:4px;stroke-linecap:round;stroke-linejoin:round;fill:none;transition:transform .2s;transform:scale(0)}.style-module__input_j6QF-q__032:checked+.style-module__box_j6QF-q__032 .style-module__icon_j6QF-q__032{transform:scale(1)}.style-module__input_j6QF-q__032:checked+.style-module__box_j6QF-q__032{border-color:var(--3dverse-color-accent);background:color-mix(in srgb,var(--3dverse-color-accent) 80%,transparent)}.style-module__labelText_j6QF-q__032{font-size:var(--3dverse-font-size-sm);color:var(--3dverse-color-content-secondary);transition:color .22s}.style-module__input_j6QF-q__032:checked+.style-module__labelText_j6QF-q__032{color:var(--3dverse-color-content-primary)}.style-module__xs_j6QF-q__032{--size: 12px}.style-module__xs_j6QF-q__032 .style-module__labelText_j6QF-q__032{font-size:var(--3dverse-font-size-2xs)}.style-module__sm_j6QF-q__032{--size: 16px}.style-module__md_j6QF-q__032{--size: 20px}.style-module__wrapper_zl_2Va__032{cursor:pointer;user-select:none;align-items:center;gap:.5rem;display:inline-flex}.style-module__switchInput_zl_2Va__032{opacity:0;pointer-events:none;position:absolute}.style-module__switchTrack_zl_2Va__032{--switch-padding: 2px;width:var(--switch-width);height:var(--switch-height);background-color:var(--3dverse-color-border-tertiary);border-radius:9999px;transition:background-color .25s;position:relative}.style-module__switchThumb_zl_2Va__032{top:var(--switch-padding);left:var(--switch-padding);width:calc(var(--switch-height) - var(--switch-padding) * 2);height:calc(var(--switch-height) - var(--switch-padding) * 2);background-color:var(--3dverse-color-content-primary);border-radius:50%;transition:transform .25s,background-color .25s;position:absolute}.style-module__switchInput_zl_2Va__032:checked+.style-module__switchTrack_zl_2Va__032{background-color:var(--3dverse-color-accent)}.style-module__switchInput_zl_2Va__032:checked+.style-module__switchTrack_zl_2Va__032 .style-module__switchThumb_zl_2Va__032{transform:translate(calc(var(--switch-width) - var(--switch-height)));background-color:var(--3dverse-color-bg-ground)}.style-module__switchInput_zl_2Va__032:disabled+.style-module__switchTrack_zl_2Va__032{mix-blend-mode:luminosity;opacity:.5;cursor:not-allowed}.style-module__xs_zl_2Va__032{--switch-height: 1rem;--switch-width: 1.75rem}.style-module__sm_zl_2Va__032{--switch-height: 1.25rem;--switch-width: 2.25rem}.style-module__md_zl_2Va__032{--switch-height: 1.5rem;--switch-width: 2.75rem}.style-module__input_tM-LSW__032{color:inherit;border:1px solid var(--3dverse-color-border-tertiary);border-radius:var(--3dverse-border-radius-md);background-color:#0000;transition:border-color .22s}.style-module__input_tM-LSW__032:hover{border-color:var(--3dverse-color-border-secondary);z-index:1}.style-module__input_tM-LSW__032:focus{border-color:var(--3dverse-color-accent);z-index:1}.style-module__input_tM-LSW__032:focus-visible{border-color:var(--3dverse-color-accent);z-index:1;outline:none}.style-module__input_tM-LSW__032:active{border-color:var(--3dverse-color-accent);z-index:1}.style-module__xs_tM-LSW__032{font-size:var(--3dverse-font-size-3xs);line-height:var(--3dverse-leading-tight);height:24px;padding:1px 2px}.style-module__sm_tM-LSW__032{font-size:var(--3dverse-font-size-xs);padding:6px 12px}.style-module__md_tM-LSW__032{font-size:var(--3dverse-font-size-md);padding:8px 16px}.style-module__inputs_5zQSDq__032{display:flex}.style-module__inputVector_5zQSDq__032{text-align:right;border-radius:0;flex-basis:33%;max-width:5rem;margin-left:-1px}.style-module__inputNumber_w_gnsq__032{text-align:right}.style-module__item_lJj5pq__032{border-top:1px solid var(--3dverse-color-border-tertiary-alpha)}.style-module__button_lJj5pq__032{display:flex}summary.style-module__button_lJj5pq__032{cursor:pointer}summary.style-module__button_lJj5pq__032::marker{display:none}.style-module__icon_lJj5pq__032{transition:transform .3s}.style-module__open_lJj5pq__032 .style-module__icon_lJj5pq__032{transform:rotate(90deg)}.style-module__panel_lJj5pq__032{animation:.25s style-module__fadeIn_lJj5pq__032}@keyframes style-module__fadeIn_lJj5pq__032{0%{opacity:0;translate:0 -4px}to{opacity:1;translate:0}}.style-module__container_OiyPSG__032{flex-direction:column;align-items:center;display:flex}.style-module__spinnerContainer_OiyPSG__032{padding-block:var(--3dverse-spacing-8);justify-content:center;align-items:center;display:flex}.style-module__innerContainer_OiyPSG__032{flex-direction:column;display:flex}.style-module__subCategory_OiyPSG__032{flex-grow:1;display:flex}.style-module__subCategoryHeader_OiyPSG__032{align-items:center;gap:var(--3dverse-spacing-2);flex-grow:1;display:flex}.style-module__subCategoryName_OiyPSG__032{font-size:var(--3dverse-font-size-xs);user-select:none;font-weight:500}.style-module__accordion_OiyPSG__032{border-top:1px solid var(--3dverse-color-border-tertiary-alpha)}.style-module__accordionButton_OiyPSG__032{width:100%;padding-inline:var(--3dverse-spacing-2);padding-block:var(--3dverse-spacing-1);color:var(--3dverse-color-content-tertiary)}.style-module__accordionPanel_OiyPSG__032{padding-bottom:var(--3dverse-spacing-2)}.style-module__formControl_OiyPSG__032{font-size:var(--3dverse-font-size-sm);border-radius:var(--3dverse-border-radius-sm);cursor:pointer;flex-direction:row;align-items:center;padding-right:3px;transition:background-color .22s;display:flex}.style-module__formControl_OiyPSG__032:hover,.style-module__formControl_OiyPSG__032:focus{background-color:var(--3dverse-color-bg-foreground)}.style-module__formLabel_OiyPSG__032{text-align:start;padding-inline:var(--3dverse-spacing-2);padding-block:var(--3dverse-spacing-1);font-size:var(--3dverse-font-size-xs);letter-spacing:.02em;text-transform:capitalize;text-overflow:ellipsis;-webkit-line-clamp:var(--line-clamp);--line-clamp: 1;cursor:pointer;user-select:none;-webkit-box-orient:vertical;flex-grow:1;display:-webkit-box;overflow:hidden}.style-module__formControlWrapper_OiyPSG__032{align-items:center;gap:var(--3dverse-spacing-2);flex-shrink:0;display:flex}.style-module__resetButton_OiyPSG__032{width:var(--3dverse-spacing-5);min-width:auto;color:var(--3dverse-color-content-tertiary)}.style-module__resetAllButton_OiyPSG__032{width:max-content;margin-inline:var(--3dverse-spacing-1);margin-right:var(--3dverse-spacing-2);align-self:end}.style-module__container_BHEzva__032{--size: 81px;flex-direction:column;align-items:center;display:flex}.style-module__circleShadow_BHEzva__032{width:var(--size);aspect-ratio:1;pointer-events:none;z-index:-10;border-radius:100%;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);box-shadow:inset 0 0 10px #665ee160}.style-module__movingLightHint_BHEzva__032{width:var(--size);aspect-ratio:1;border:2px solid var(--3dverse-color-accent);filter:blur(2px);-webkit-mask-composite:destination-in;pointer-events:none;border-radius:100%;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);-webkit-mask-image:radial-gradient(circle,#000 20%,#0000 50%);mask-image:radial-gradient(circle,#000 20%,#0000 50%);-webkit-mask-position:-100px -100px;mask-position:-100px -100px;-webkit-mask-size:100%;mask-size:100%;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-composite:source-in;mask-composite:intersect}.style-module__skeleton_BHEzva__032{aspect-ratio:1;background-color:var(--3dverse-color-bg-foreground);border-radius:50%;justify-content:center;align-items:center;margin:11px;animation:1.5s infinite style-module__pulseAnimation_BHEzva__032;display:flex}.style-module__skeleton_BHEzva__032 .style-module__icon_BHEzva__032{width:24px;height:24px;color:var(--3dverse-color-content-tertiary);stroke:var(--3dverse-color-bg-foreground);stroke-width:24px;opacity:.25}@keyframes style-module__pulseAnimation_BHEzva__032{0%,to{opacity:1}50%{opacity:.5}}.style-module__container_N2j2sa__032{justify-content:center;align-items:center;gap:var(--3dverse-spacing-3);background-color:var(--3dverse-color-bg-overground);flex-direction:column;width:100%;height:100%;display:flex;position:absolute}.style-module__glowEffectStyle_N2j2sa__032:before{content:"";aspect-ratio:1;mix-blend-mode:screen;background:radial-gradient(var(--3dverse-color-bg-overground),transparent);filter:blur(50px);pointer-events:none;z-index:0;border-radius:100%;width:150%;max-width:12rem;position:absolute;top:50%;left:50%;translate:-50% -50%}@media (width >= 80em){.style-module__glowEffectStyle_N2j2sa__032:before{max-width:18rem}}.style-module__logoContainer_N2j2sa__032{width:1.75rem;color:var(--3dverse-color-accent);filter:drop-shadow(0 18px 2px color-mix(in srgb,var(--3dverse-color-bg-ground) 50%,transparent))}@media (width >= 80em){.style-module__logoContainer_N2j2sa__032{width:2rem}}.style-module__loaderProgressBarIndeterminateContainer_N2j2sa__032{background-color:var(--3dverse-color-bg-foreground);border-radius:2rem;width:3rem;padding:7px 8px}.style-module__loaderProgressBarIndeterminateTrack_N2j2sa__032{background-color:var(--3dverse-color-bg-underground);border-radius:1rem;width:100%;height:1px;position:relative;overflow:hidden}.style-module__loaderProgressBarIndeterminateTrack_N2j2sa__032:before{content:"''";will-change:left;background-color:var(--3dverse-color-accent);border-radius:1px;min-width:50%;height:100%;animation:1s infinite style-module__loader-progress-bar-indeterminate_N2j2sa__032;position:absolute}.style-module__loaderProgressBarIndeterminateTrack_N2j2sa__032:after{content:"";will-change:left;background-color:var(--3dverse-color-accent);opacity:.4;border-radius:1px;min-width:75%;height:100%;animation:1.5s .25s infinite style-module__loader-progress-bar-indeterminate_N2j2sa__032;position:absolute}@keyframes style-module__loader-progress-bar-indeterminate_N2j2sa__032{0%{left:-40%}to{left:100%}}.style-module__label_N2j2sa__032{color:var(--3dverse-color-content-tertiary);font-size:var(--3dverse-font-size-xs);letter-spacing:.05em;user-select:none;font-weight:500}.style-module__gamepadCrossContainer_dqwhla__032{width:120px;height:120px;position:absolute;bottom:10%;right:0;transform:translate(-50%)}.style-module__gamepadButton_dqwhla__032{--btn-color: 170, 0, 0;background-color:rgba(var(--btn-color),.55);border-radius:25px;position:absolute}.style-module__gamepadButton_dqwhla__032:hover{background-color:rgba(var(--btn-color),.6)}.style-module__gamepadButton_dqwhla__032:active{background-color:rgba(var(--btn-color),1)}.style-module__redButtonColor_dqwhla__032{--btn-color: 170, 0, 0;top:50%;right:0;transform:translateY(-50%)}.style-module__blueButtonColor_dqwhla__032{--btn-color: 0, 0, 170;top:50%;left:0;transform:translateY(-50%)}.style-module__greenButtonColor_dqwhla__032{--btn-color: 0, 170, 0;bottom:0;left:50%;transform:translate(-50%)}.style-module__yellowButtonColor_dqwhla__032{--btn-color: 170, 170, 0;top:0;left:50%;transform:translate(-50%)}
`;
globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"] = "80c61df4974603c2d6b323713b64b99d";
var fo = Object.create;
var tt = Object.defineProperty;
var yo = Object.getOwnPropertyDescriptor;
var go = Object.getOwnPropertyNames;
var vo = Object.getPrototypeOf;
var bo = Object.prototype.hasOwnProperty;
var xo = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports);
var wo = (e, t, i, s) => {
  if (t && typeof t == "object" || typeof t == "function") for (let d of go(t)) !bo.call(e, d) && d !== i && tt(e, d, { get: () => t[d], enumerable: !(s = yo(t, d)) || s.enumerable });
  return e;
};
var ko = (e, t, i) => (i = e != null ? fo(vo(e)) : {}, wo(t || !e || !e.__esModule ? tt(i, "default", { value: e, enumerable: true }) : i, e));
var io = xo((Oe, Qe) => {
  (function(e, t) {
    typeof Oe == "object" && typeof Qe == "object" ? Qe.exports = t() : typeof define == "function" && define.amd ? define("nipplejs", [], t) : typeof Oe == "object" ? Oe.nipplejs = t() : e.nipplejs = t();
  })(window, function() {
    return function(e) {
      var t = {};
      function i(s) {
        if (t[s]) return t[s].exports;
        var d = t[s] = { i: s, l: false, exports: {} };
        return e[s].call(d.exports, d, d.exports, i), d.l = true, d.exports;
      }
      return i.m = e, i.c = t, i.d = function(s, d, u) {
        i.o(s, d) || Object.defineProperty(s, d, { enumerable: true, get: u });
      }, i.r = function(s) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(s, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(s, "__esModule", { value: true });
      }, i.t = function(s, d) {
        if (1 & d && (s = i(s)), 8 & d || 4 & d && typeof s == "object" && s && s.__esModule) return s;
        var u = /* @__PURE__ */ Object.create(null);
        if (i.r(u), Object.defineProperty(u, "default", { enumerable: true, value: s }), 2 & d && typeof s != "string") for (var m in s) i.d(u, m, (function(x) {
          return s[x];
        }).bind(null, m));
        return u;
      }, i.n = function(s) {
        var d = s && s.__esModule ? function() {
          return s.default;
        } : function() {
          return s;
        };
        return i.d(d, "a", d), d;
      }, i.o = function(s, d) {
        return Object.prototype.hasOwnProperty.call(s, d);
      }, i.p = "", i(i.s = 0);
    }([function(e, t, i) {
      "use strict";
      i.r(t);
      var s, d = function(r, o) {
        var n = o.x - r.x, a = o.y - r.y;
        return Math.sqrt(n * n + a * a);
      }, u = function(r) {
        return r * (Math.PI / 180);
      }, m = function(r) {
        return r * (180 / Math.PI);
      }, x = /* @__PURE__ */ new Map(), g = function(r) {
        x.has(r) && clearTimeout(x.get(r)), x.set(r, setTimeout(r, 100));
      }, O2 = function(r, o, n) {
        for (var a, l = o.split(/[ ,]+/g), p = 0; p < l.length; p += 1) a = l[p], r.addEventListener ? r.addEventListener(a, n, false) : r.attachEvent && r.attachEvent(a, n);
      }, h = function(r, o, n) {
        for (var a, l = o.split(/[ ,]+/g), p = 0; p < l.length; p += 1) a = l[p], r.removeEventListener ? r.removeEventListener(a, n) : r.detachEvent && r.detachEvent(a, n);
      }, c = function(r) {
        return r.preventDefault(), r.type.match(/^touch/) ? r.changedTouches : r;
      }, f = function() {
        return { x: window.pageXOffset !== void 0 ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft, y: window.pageYOffset !== void 0 ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop };
      }, b = function(r, o) {
        o.top || o.right || o.bottom || o.left ? (r.style.top = o.top, r.style.right = o.right, r.style.bottom = o.bottom, r.style.left = o.left) : (r.style.left = o.x + "px", r.style.top = o.y + "px");
      }, L = function(r, o, n) {
        var a = k(r);
        for (var l in a) if (a.hasOwnProperty(l)) if (typeof o == "string") a[l] = o + " " + n;
        else {
          for (var p = "", y = 0, _ = o.length; y < _; y += 1) p += o[y] + " " + n + ", ";
          a[l] = p.slice(0, -2);
        }
        return a;
      }, k = function(r) {
        var o = {};
        return o[r] = "", ["webkit", "Moz", "o"].forEach(function(n) {
          o[n + r.charAt(0).toUpperCase() + r.slice(1)] = "";
        }), o;
      }, W = function(r, o) {
        for (var n in o) o.hasOwnProperty(n) && (r[n] = o[n]);
        return r;
      }, z = function(r, o) {
        if (r.length) for (var n = 0, a = r.length; n < a; n += 1) o(r[n]);
        else o(r);
      }, C = "ontouchstart" in window, G = !!window.PointerEvent, R = !!window.MSPointerEvent, X = { start: "mousedown", move: "mousemove", end: "mouseup" }, Y = {};
      function H() {
      }
      G ? s = { start: "pointerdown", move: "pointermove", end: "pointerup, pointercancel" } : R ? s = { start: "MSPointerDown", move: "MSPointerMove", end: "MSPointerUp" } : C ? (s = { start: "touchstart", move: "touchmove", end: "touchend, touchcancel" }, Y = X) : s = X, H.prototype.on = function(r, o) {
        var n, a = r.split(/[ ,]+/g);
        this._handlers_ = this._handlers_ || {};
        for (var l = 0; l < a.length; l += 1) n = a[l], this._handlers_[n] = this._handlers_[n] || [], this._handlers_[n].push(o);
        return this;
      }, H.prototype.off = function(r, o) {
        return this._handlers_ = this._handlers_ || {}, r === void 0 ? this._handlers_ = {} : o === void 0 ? this._handlers_[r] = null : this._handlers_[r] && this._handlers_[r].indexOf(o) >= 0 && this._handlers_[r].splice(this._handlers_[r].indexOf(o), 1), this;
      }, H.prototype.trigger = function(r, o) {
        var n, a = this, l = r.split(/[ ,]+/g);
        a._handlers_ = a._handlers_ || {};
        for (var p = 0; p < l.length; p += 1) n = l[p], a._handlers_[n] && a._handlers_[n].length && a._handlers_[n].forEach(function(y) {
          y.call(a, { type: n, target: a }, o);
        });
      }, H.prototype.config = function(r) {
        this.options = this.defaults || {}, r && (this.options = function(o, n) {
          var a = {};
          for (var l in o) o.hasOwnProperty(l) && n.hasOwnProperty(l) ? a[l] = n[l] : o.hasOwnProperty(l) && (a[l] = o[l]);
          return a;
        }(this.options, r));
      }, H.prototype.bindEvt = function(r, o) {
        var n = this;
        return n._domHandlers_ = n._domHandlers_ || {}, n._domHandlers_[o] = function() {
          typeof n["on" + o] == "function" ? n["on" + o].apply(n, arguments) : console.warn('[WARNING] : Missing "on' + o + '" handler.');
        }, O2(r, s[o], n._domHandlers_[o]), Y[o] && O2(r, Y[o], n._domHandlers_[o]), n;
      }, H.prototype.unbindEvt = function(r, o) {
        return this._domHandlers_ = this._domHandlers_ || {}, h(r, s[o], this._domHandlers_[o]), Y[o] && h(r, Y[o], this._domHandlers_[o]), delete this._domHandlers_[o], this;
      };
      var oe = H;
      function P2(r, o) {
        return this.identifier = o.identifier, this.position = o.position, this.frontPosition = o.frontPosition, this.collection = r, this.defaults = { size: 100, threshold: 0.1, color: "white", fadeTime: 250, dataOnly: false, restJoystick: true, restOpacity: 0.5, mode: "dynamic", zone: document.body, lockX: false, lockY: false, shape: "circle" }, this.config(o), this.options.mode === "dynamic" && (this.options.restOpacity = 0), this.id = P2.id, P2.id += 1, this.buildEl().stylize(), this.instance = { el: this.ui.el, on: this.on.bind(this), off: this.off.bind(this), show: this.show.bind(this), hide: this.hide.bind(this), add: this.addToDom.bind(this), remove: this.removeFromDom.bind(this), destroy: this.destroy.bind(this), setPosition: this.setPosition.bind(this), resetDirection: this.resetDirection.bind(this), computeDirection: this.computeDirection.bind(this), trigger: this.trigger.bind(this), position: this.position, frontPosition: this.frontPosition, ui: this.ui, identifier: this.identifier, id: this.id, options: this.options }, this.instance;
      }
      P2.prototype = new oe(), P2.constructor = P2, P2.id = 0, P2.prototype.buildEl = function(r) {
        return this.ui = {}, this.options.dataOnly ? this : (this.ui.el = document.createElement("div"), this.ui.back = document.createElement("div"), this.ui.front = document.createElement("div"), this.ui.el.className = "nipple collection_" + this.collection.id, this.ui.back.className = "back", this.ui.front.className = "front", this.ui.el.setAttribute("id", "nipple_" + this.collection.id + "_" + this.id), this.ui.el.appendChild(this.ui.back), this.ui.el.appendChild(this.ui.front), this);
      }, P2.prototype.stylize = function() {
        if (this.options.dataOnly) return this;
        var r = this.options.fadeTime + "ms", o = function(l, p) {
          var y = k(l);
          for (var _ in y) y.hasOwnProperty(_) && (y[_] = p);
          return y;
        }("borderRadius", "50%"), n = L("transition", "opacity", r), a = {};
        return a.el = { position: "absolute", opacity: this.options.restOpacity, display: "block", zIndex: 999 }, a.back = { position: "absolute", display: "block", width: this.options.size + "px", height: this.options.size + "px", left: 0, marginLeft: -this.options.size / 2 + "px", marginTop: -this.options.size / 2 + "px", background: this.options.color, opacity: ".5" }, a.front = { width: this.options.size / 2 + "px", height: this.options.size / 2 + "px", position: "absolute", display: "block", left: 0, marginLeft: -this.options.size / 4 + "px", marginTop: -this.options.size / 4 + "px", background: this.options.color, opacity: ".5", transform: "translate(0px, 0px)" }, W(a.el, n), this.options.shape === "circle" && W(a.back, o), W(a.front, o), this.applyStyles(a), this;
      }, P2.prototype.applyStyles = function(r) {
        for (var o in this.ui) if (this.ui.hasOwnProperty(o)) for (var n in r[o]) this.ui[o].style[n] = r[o][n];
        return this;
      }, P2.prototype.addToDom = function() {
        return this.options.dataOnly || document.body.contains(this.ui.el) ? this : (this.options.zone.appendChild(this.ui.el), this);
      }, P2.prototype.removeFromDom = function() {
        return this.options.dataOnly || !document.body.contains(this.ui.el) ? this : (this.options.zone.removeChild(this.ui.el), this);
      }, P2.prototype.destroy = function() {
        clearTimeout(this.removeTimeout), clearTimeout(this.showTimeout), clearTimeout(this.restTimeout), this.trigger("destroyed", this.instance), this.removeFromDom(), this.off();
      }, P2.prototype.show = function(r) {
        var o = this;
        return o.options.dataOnly || (clearTimeout(o.removeTimeout), clearTimeout(o.showTimeout), clearTimeout(o.restTimeout), o.addToDom(), o.restCallback(), setTimeout(function() {
          o.ui.el.style.opacity = 1;
        }, 0), o.showTimeout = setTimeout(function() {
          o.trigger("shown", o.instance), typeof r == "function" && r.call(this);
        }, o.options.fadeTime)), o;
      }, P2.prototype.hide = function(r) {
        var o = this;
        if (o.options.dataOnly) return o;
        if (o.ui.el.style.opacity = o.options.restOpacity, clearTimeout(o.removeTimeout), clearTimeout(o.showTimeout), clearTimeout(o.restTimeout), o.removeTimeout = setTimeout(function() {
          var l = o.options.mode === "dynamic" ? "none" : "block";
          o.ui.el.style.display = l, typeof r == "function" && r.call(o), o.trigger("hidden", o.instance);
        }, o.options.fadeTime), o.options.restJoystick) {
          var n = o.options.restJoystick, a = {};
          a.x = n === true || n.x !== false ? 0 : o.instance.frontPosition.x, a.y = n === true || n.y !== false ? 0 : o.instance.frontPosition.y, o.setPosition(r, a);
        }
        return o;
      }, P2.prototype.setPosition = function(r, o) {
        var n = this;
        n.frontPosition = { x: o.x, y: o.y };
        var a = n.options.fadeTime + "ms", l = {};
        l.front = L("transition", ["transform"], a);
        var p = { front: {} };
        p.front = { transform: "translate(" + n.frontPosition.x + "px," + n.frontPosition.y + "px)" }, n.applyStyles(l), n.applyStyles(p), n.restTimeout = setTimeout(function() {
          typeof r == "function" && r.call(n), n.restCallback();
        }, n.options.fadeTime);
      }, P2.prototype.restCallback = function() {
        var r = {};
        r.front = L("transition", "none", ""), this.applyStyles(r), this.trigger("rested", this.instance);
      }, P2.prototype.resetDirection = function() {
        this.direction = { x: false, y: false, angle: false };
      }, P2.prototype.computeDirection = function(r) {
        var o, n, a, l = r.angle.radian, p = Math.PI / 4, y = Math.PI / 2;
        if (l > p && l < 3 * p && !r.lockX ? o = "up" : l > -p && l <= p && !r.lockY ? o = "left" : l > 3 * -p && l <= -p && !r.lockX ? o = "down" : r.lockY || (o = "right"), r.lockY || (n = l > -y && l < y ? "left" : "right"), r.lockX || (a = l > 0 ? "up" : "down"), r.force > this.options.threshold) {
          var _, I = {};
          for (_ in this.direction) this.direction.hasOwnProperty(_) && (I[_] = this.direction[_]);
          var v = {};
          for (_ in this.direction = { x: n, y: a, angle: o }, r.direction = this.direction, I) I[_] === this.direction[_] && (v[_] = true);
          if (v.x && v.y && v.angle) return r;
          v.x && v.y || this.trigger("plain", r), v.x || this.trigger("plain:" + n, r), v.y || this.trigger("plain:" + a, r), v.angle || this.trigger("dir dir:" + o, r);
        } else this.resetDirection();
        return r;
      };
      var ge = P2;
      function T(r, o) {
        this.nipples = [], this.idles = [], this.actives = [], this.ids = [], this.pressureIntervals = {}, this.manager = r, this.id = T.id, T.id += 1, this.defaults = { zone: document.body, multitouch: false, maxNumberOfNipples: 10, mode: "dynamic", position: { top: 0, left: 0 }, catchDistance: 200, size: 100, threshold: 0.1, color: "white", fadeTime: 250, dataOnly: false, restJoystick: true, restOpacity: 0.5, lockX: false, lockY: false, shape: "circle", dynamicPage: false, follow: false }, this.config(o), this.options.mode !== "static" && this.options.mode !== "semi" || (this.options.multitouch = false), this.options.multitouch || (this.options.maxNumberOfNipples = 1);
        var n = getComputedStyle(this.options.zone.parentElement);
        return n && n.display === "flex" && (this.parentIsFlex = true), this.updateBox(), this.prepareNipples(), this.bindings(), this.begin(), this.nipples;
      }
      T.prototype = new oe(), T.constructor = T, T.id = 0, T.prototype.prepareNipples = function() {
        var r = this.nipples;
        r.on = this.on.bind(this), r.off = this.off.bind(this), r.options = this.options, r.destroy = this.destroy.bind(this), r.ids = this.ids, r.id = this.id, r.processOnMove = this.processOnMove.bind(this), r.processOnEnd = this.processOnEnd.bind(this), r.get = function(o) {
          if (o === void 0) return r[0];
          for (var n = 0, a = r.length; n < a; n += 1) if (r[n].identifier === o) return r[n];
          return false;
        };
      }, T.prototype.bindings = function() {
        this.bindEvt(this.options.zone, "start"), this.options.zone.style.touchAction = "none", this.options.zone.style.msTouchAction = "none";
      }, T.prototype.begin = function() {
        var r = this.options;
        if (r.mode === "static") {
          var o = this.createNipple(r.position, this.manager.getIdentifier());
          o.add(), this.idles.push(o);
        }
      }, T.prototype.createNipple = function(r, o) {
        var n = this.manager.scroll, a = {}, l = this.options, p = this.parentIsFlex ? n.x : n.x + this.box.left, y = this.parentIsFlex ? n.y : n.y + this.box.top;
        if (r.x && r.y) a = { x: r.x - p, y: r.y - y };
        else if (r.top || r.right || r.bottom || r.left) {
          var _ = document.createElement("DIV");
          _.style.display = "hidden", _.style.top = r.top, _.style.right = r.right, _.style.bottom = r.bottom, _.style.left = r.left, _.style.position = "absolute", l.zone.appendChild(_);
          var I = _.getBoundingClientRect();
          l.zone.removeChild(_), a = r, r = { x: I.left + n.x, y: I.top + n.y };
        }
        var v = new ge(this, { color: l.color, size: l.size, threshold: l.threshold, fadeTime: l.fadeTime, dataOnly: l.dataOnly, restJoystick: l.restJoystick, restOpacity: l.restOpacity, mode: l.mode, identifier: o, position: r, zone: l.zone, frontPosition: { x: 0, y: 0 }, shape: l.shape });
        return l.dataOnly || (b(v.ui.el, a), b(v.ui.front, v.frontPosition)), this.nipples.push(v), this.trigger("added " + v.identifier + ":added", v), this.manager.trigger("added " + v.identifier + ":added", v), this.bindNipple(v), v;
      }, T.prototype.updateBox = function() {
        this.box = this.options.zone.getBoundingClientRect();
      }, T.prototype.bindNipple = function(r) {
        var o, n = this, a = function(l, p) {
          o = l.type + " " + p.id + ":" + l.type, n.trigger(o, p);
        };
        r.on("destroyed", n.onDestroyed.bind(n)), r.on("shown hidden rested dir plain", a), r.on("dir:up dir:right dir:down dir:left", a), r.on("plain:up plain:right plain:down plain:left", a);
      }, T.prototype.pressureFn = function(r, o, n) {
        var a = this, l = 0;
        clearInterval(a.pressureIntervals[n]), a.pressureIntervals[n] = setInterval((function() {
          var p = r.force || r.pressure || r.webkitForce || 0;
          p !== l && (o.trigger("pressure", p), a.trigger("pressure " + o.identifier + ":pressure", p), l = p);
        }).bind(a), 100);
      }, T.prototype.onstart = function(r) {
        var o = this, n = o.options, a = r;
        return r = c(r), o.updateBox(), z(r, function(l) {
          o.actives.length < n.maxNumberOfNipples ? o.processOnStart(l) : a.type.match(/^touch/) && (Object.keys(o.manager.ids).forEach(function(p) {
            if (Object.values(a.touches).findIndex(function(_) {
              return _.identifier === p;
            }) < 0) {
              var y = [r[0]];
              y.identifier = p, o.processOnEnd(y);
            }
          }), o.actives.length < n.maxNumberOfNipples && o.processOnStart(l));
        }), o.manager.bindDocument(), false;
      }, T.prototype.processOnStart = function(r) {
        var o, n = this, a = n.options, l = n.manager.getIdentifier(r), p = r.force || r.pressure || r.webkitForce || 0, y = { x: r.pageX, y: r.pageY }, _ = n.getOrCreate(l, y);
        _.identifier !== l && n.manager.removeIdentifier(_.identifier), _.identifier = l;
        var I = function(v) {
          v.trigger("start", v), n.trigger("start " + v.id + ":start", v), v.show(), p > 0 && n.pressureFn(r, v, v.identifier), n.processOnMove(r);
        };
        if ((o = n.idles.indexOf(_)) >= 0 && n.idles.splice(o, 1), n.actives.push(_), n.ids.push(_.identifier), a.mode !== "semi") I(_);
        else {
          if (!(d(y, _.position) <= a.catchDistance)) return _.destroy(), void n.processOnStart(r);
          I(_);
        }
        return _;
      }, T.prototype.getOrCreate = function(r, o) {
        var n, a = this.options;
        return /(semi|static)/.test(a.mode) ? (n = this.idles[0]) ? (this.idles.splice(0, 1), n) : a.mode === "semi" ? this.createNipple(o, r) : (console.warn("Coudln't find the needed nipple."), false) : n = this.createNipple(o, r);
      }, T.prototype.processOnMove = function(r) {
        var o = this.options, n = this.manager.getIdentifier(r), a = this.nipples.get(n), l = this.manager.scroll;
        if (function(ne) {
          return isNaN(ne.buttons) ? ne.pressure !== 0 : ne.buttons !== 0;
        }(r)) {
          if (!a) return console.error("Found zombie joystick with ID " + n), void this.manager.removeIdentifier(n);
          if (o.dynamicPage) {
            var p = a.el.getBoundingClientRect();
            a.position = { x: l.x + p.left, y: l.y + p.top };
          }
          a.identifier = n;
          var y = a.options.size / 2, _ = { x: r.pageX, y: r.pageY };
          o.lockX && (_.y = a.position.y), o.lockY && (_.x = a.position.x);
          var I, v, ve, be, xe, re, Le, Me, we, ke, $ = d(_, a.position), he = (I = _, v = a.position, ve = v.x - I.x, be = v.y - I.y, m(Math.atan2(be, ve))), po = u(he), _o = $ / y, uo = { distance: $, position: _ };
          if (a.options.shape === "circle" ? (xe = Math.min($, y), Le = a.position, Me = xe, ke = { x: 0, y: 0 }, we = u(we = he), ke.x = Le.x - Me * Math.cos(we), ke.y = Le.y - Me * Math.sin(we), re = ke) : (re = function(ne, Te, Se) {
            return { x: Math.min(Math.max(ne.x, Te.x - Se), Te.x + Se), y: Math.min(Math.max(ne.y, Te.y - Se), Te.y + Se) };
          }(_, a.position, y), xe = d(re, a.position)), o.follow) {
            if ($ > y) {
              var mo = _.x - re.x, ho = _.y - re.y;
              a.position.x += mo, a.position.y += ho, a.el.style.top = a.position.y - (this.box.top + l.y) + "px", a.el.style.left = a.position.x - (this.box.left + l.x) + "px", $ = d(_, a.position);
            }
          } else _ = re, $ = xe;
          var je = _.x - a.position.x, Be = _.y - a.position.y;
          a.frontPosition = { x: je, y: Be }, o.dataOnly || (a.ui.front.style.transform = "translate(" + je + "px," + Be + "px)");
          var Ce = { identifier: a.identifier, position: _, force: _o, pressure: r.force || r.pressure || r.webkitForce || 0, distance: $, angle: { radian: po, degree: he }, vector: { x: je / y, y: -Be / y }, raw: uo, instance: a, lockX: o.lockX, lockY: o.lockY };
          (Ce = a.computeDirection(Ce)).angle = { radian: u(180 - he), degree: 180 - he }, a.trigger("move", Ce), this.trigger("move " + a.id + ":move", Ce);
        } else this.processOnEnd(r);
      }, T.prototype.processOnEnd = function(r) {
        var o = this, n = o.options, a = o.manager.getIdentifier(r), l = o.nipples.get(a), p = o.manager.removeIdentifier(l.identifier);
        l && (n.dataOnly || l.hide(function() {
          n.mode === "dynamic" && (l.trigger("removed", l), o.trigger("removed " + l.id + ":removed", l), o.manager.trigger("removed " + l.id + ":removed", l), l.destroy());
        }), clearInterval(o.pressureIntervals[l.identifier]), l.resetDirection(), l.trigger("end", l), o.trigger("end " + l.id + ":end", l), o.ids.indexOf(l.identifier) >= 0 && o.ids.splice(o.ids.indexOf(l.identifier), 1), o.actives.indexOf(l) >= 0 && o.actives.splice(o.actives.indexOf(l), 1), /(semi|static)/.test(n.mode) ? o.idles.push(l) : o.nipples.indexOf(l) >= 0 && o.nipples.splice(o.nipples.indexOf(l), 1), o.manager.unbindDocument(), /(semi|static)/.test(n.mode) && (o.manager.ids[p.id] = p.identifier));
      }, T.prototype.onDestroyed = function(r, o) {
        this.nipples.indexOf(o) >= 0 && this.nipples.splice(this.nipples.indexOf(o), 1), this.actives.indexOf(o) >= 0 && this.actives.splice(this.actives.indexOf(o), 1), this.idles.indexOf(o) >= 0 && this.idles.splice(this.idles.indexOf(o), 1), this.ids.indexOf(o.identifier) >= 0 && this.ids.splice(this.ids.indexOf(o.identifier), 1), this.manager.removeIdentifier(o.identifier), this.manager.unbindDocument();
      }, T.prototype.destroy = function() {
        for (var r in this.unbindEvt(this.options.zone, "start"), this.nipples.forEach(function(o) {
          o.destroy();
        }), this.pressureIntervals) this.pressureIntervals.hasOwnProperty(r) && clearInterval(this.pressureIntervals[r]);
        this.trigger("destroyed", this.nipples), this.manager.unbindDocument(), this.off();
      };
      var me = T;
      function N(r) {
        var o = this;
        o.ids = {}, o.index = 0, o.collections = [], o.scroll = f(), o.config(r), o.prepareCollections();
        var n = function() {
          var l;
          o.collections.forEach(function(p) {
            p.forEach(function(y) {
              l = y.el.getBoundingClientRect(), y.position = { x: o.scroll.x + l.left, y: o.scroll.y + l.top };
            });
          });
        };
        O2(window, "resize", function() {
          g(n);
        });
        var a = function() {
          o.scroll = f();
        };
        return O2(window, "scroll", function() {
          g(a);
        }), o.collections;
      }
      N.prototype = new oe(), N.constructor = N, N.prototype.prepareCollections = function() {
        var r = this;
        r.collections.create = r.create.bind(r), r.collections.on = r.on.bind(r), r.collections.off = r.off.bind(r), r.collections.destroy = r.destroy.bind(r), r.collections.get = function(o) {
          var n;
          return r.collections.every(function(a) {
            return !(n = a.get(o));
          }), n;
        };
      }, N.prototype.create = function(r) {
        return this.createCollection(r);
      }, N.prototype.createCollection = function(r) {
        var o = new me(this, r);
        return this.bindCollection(o), this.collections.push(o), o;
      }, N.prototype.bindCollection = function(r) {
        var o, n = this, a = function(l, p) {
          o = l.type + " " + p.id + ":" + l.type, n.trigger(o, p);
        };
        r.on("destroyed", n.onDestroyed.bind(n)), r.on("shown hidden rested dir plain", a), r.on("dir:up dir:right dir:down dir:left", a), r.on("plain:up plain:right plain:down plain:left", a);
      }, N.prototype.bindDocument = function() {
        this.binded || (this.bindEvt(document, "move").bindEvt(document, "end"), this.binded = true);
      }, N.prototype.unbindDocument = function(r) {
        Object.keys(this.ids).length && r !== true || (this.unbindEvt(document, "move").unbindEvt(document, "end"), this.binded = false);
      }, N.prototype.getIdentifier = function(r) {
        var o;
        return r ? (o = r.identifier === void 0 ? r.pointerId : r.identifier) === void 0 && (o = this.latest || 0) : o = this.index, this.ids[o] === void 0 && (this.ids[o] = this.index, this.index += 1), this.latest = o, this.ids[o];
      }, N.prototype.removeIdentifier = function(r) {
        var o = {};
        for (var n in this.ids) if (this.ids[n] === r) {
          o.id = n, o.identifier = this.ids[n], delete this.ids[n];
          break;
        }
        return o;
      }, N.prototype.onmove = function(r) {
        return this.onAny("move", r), false;
      }, N.prototype.onend = function(r) {
        return this.onAny("end", r), false;
      }, N.prototype.oncancel = function(r) {
        return this.onAny("end", r), false;
      }, N.prototype.onAny = function(r, o) {
        var n, a = this, l = "processOn" + r.charAt(0).toUpperCase() + r.slice(1);
        return o = c(o), z(o, function(p) {
          n = a.getIdentifier(p), z(a.collections, (function(y, _, I) {
            I.ids.indexOf(_) >= 0 && (I[l](y), y._found_ = true);
          }).bind(null, p, n)), p._found_ || a.removeIdentifier(n);
        }), false;
      }, N.prototype.destroy = function() {
        this.unbindDocument(true), this.ids = {}, this.index = 0, this.collections.forEach(function(r) {
          r.destroy();
        }), this.off();
      }, N.prototype.onDestroyed = function(r, o) {
        if (this.collections.indexOf(o) < 0) return false;
        this.collections.splice(this.collections.indexOf(o), 1);
      };
      var w = new N();
      t.default = { create: function(r) {
        return w.create(r);
      }, factory: w };
    }]).default;
  });
});
var Lr = ({ children: e }) => e;
var Co = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var ot = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var rt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + ot);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + ot;
      let i = globalThis.document.createTextNode(Co);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var nt = new Proxy({ wrapper: "style-module__wrapper_8jv4Ha__032" }, { get: function(e, t) {
  return rt(), e[t];
} });
var it = ({ children: e, className: t }) => import_react5.default.createElement("div", { className: `${nt.wrapper} ${t}` }, e);
var So = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var st = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var at = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + st);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + st;
      let i = globalThis.document.createTextNode(So);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var V = new Proxy({ appearTop: "style-module__appear-top_nGfgUW__032", container: "style-module__container_nGfgUW__032", inner: "style-module__inner_nGfgUW__032", label: "style-module__label_nGfgUW__032", overlay: "style-module__overlay_nGfgUW__032", panel: "style-module__panel_nGfgUW__032", panelContainer: "style-module__panelContainer_nGfgUW__032", startLine: "style-module__startLine_nGfgUW__032", svgLine: "style-module__svgLine_nGfgUW__032", timer: "style-module__timer_nGfgUW__032", timerLabel: "style-module__timerLabel_nGfgUW__032" }, { get: function(e, t) {
  return at(), e[t];
} });
var lt = ({ timeLeft: e, onActivityReset: t, animatedPathRef: i, animatedOverlayRef: s }) => ((0, import_react4.useEffect)(() => (window.addEventListener("click", t), window.addEventListener("mousemove", t), window.addEventListener("scroll", t), window.addEventListener("touchstart", t), () => {
  window.removeEventListener("click", t), window.removeEventListener("mousemove", t), window.removeEventListener("scroll", t), window.removeEventListener("touchstart", t);
}), [t]), import_react4.default.createElement(import_react4.default.Fragment, null, import_react4.default.createElement("div", { ref: s, className: V.overlay }), import_react4.default.createElement("aside", { className: V.panelContainer }, import_react4.default.createElement(it, { className: V.panel }, import_react4.default.createElement("div", { className: V.inner }, import_react4.default.createElement("div", { className: V.startLine }), import_react4.default.createElement("svg", { className: V.svgLine, viewBox: "0 0 277 67", xmlns: "http://www.w3.org/2000/svg" }, import_react4.default.createElement("path", { d: "M138.5 1H33.5C15.5507 1 1 15.5507 1 33.5V33.5C1 51.4493 15.5507 66 33.5 66H243.5C261.449 66 276 51.4493 276 33.5V33.5C276 15.5507 261.449 1 243.5 1H139", strokeWidth: 1, style: { stroke: "var(--3dverse-color-border-primary-alpha)" } }), import_react4.default.createElement("path", { ref: i, d: "M138.5 1H33.5C15.5507 1 1 15.5507 1 33.5V33.5C1 51.4493 15.5507 66 33.5 66H243.5C261.449 66 276 51.4493 276 33.5V33.5C276 15.5507 261.449 1 243.5 1H139", strokeWidth: 1, style: { strokeDasharray: 624, strokeDashoffset: 624, stroke: "var(--3dverse-color-accent)" } })), import_react4.default.createElement("p", { className: V.label }, "Move cursor to keep 3D view."), import_react4.default.createElement("p", { className: V.timerLabel }, "Closing in", " ", import_react4.default.createElement("span", { className: V.timer }, e > 9 ? e.toString().padStart(2, "0") : import_react4.default.createElement("span", { style: { paddingLeft: "8px" } }, e), "s")))))));
var an = ({ warningDuration: e, onActivityDetected: t }) => {
  let [i, s] = (0, import_react3.useState)(0), d = (0, import_react3.useRef)(null), u = (0, import_react3.useRef)(null);
  return (0, import_react3.useEffect)(() => {
    s(e);
    let m = d.current;
    m && (m.style.animation = "none", m.getBBox(), m.style.animation = `inactivity-timer-path ${e}s linear forwards`);
    let x = u.current;
    x && (x.style.animation = "none", x.offsetWidth, x.style.animation = `inactivity-timer-overlay ${e}s linear forwards`);
    let g = setInterval(() => {
      s((O2) => O2 > 0 ? O2 - 1 : 0);
    }, 1e3);
    return () => clearInterval(g);
  }, [e]), import_react3.default.createElement("div", { className: `${V.container} livelink-react-ui-component` }, import_react3.default.createElement(lt, { timeLeft: i, onActivityReset: t, animatedPathRef: d, animatedOverlayRef: u }), import_react3.default.createElement("style", null, `
                    @keyframes inactivity-timer-overlay {
                        from {
                            opacity: 0;
                        }
                        to {
                            opacity: .9;
                        }
                    }
                    @keyframes inactivity-timer-path {
                        from {
                            stroke-dashoffset: 624;
                        }
                        to {
                            stroke-dashoffset: 1248;
                        }
                    }
                `));
};
function ct(e) {
  var t, i, s = "";
  if (typeof e == "string" || typeof e == "number") s += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var d = e.length;
    for (t = 0; t < d; t++) e[t] && (i = ct(e[t])) && (s && (s += " "), s += i);
  } else for (i in e) e[i] && (s && (s += " "), s += i);
  return s;
}
function Oo() {
  for (var e, t, i = 0, s = "", d = arguments.length; i < d; i++) (e = arguments[i]) && (t = ct(e)) && (s && (s += " "), s += t);
  return s;
}
var E = Oo;
var zo = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var pt = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var _t = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + pt);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + pt;
      let i = globalThis.document.createTextNode(zo);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var Ve = new Proxy({ md: "style-module__md_8VcAhq__032", sm: "style-module__sm_8VcAhq__032", xs: "style-module__xs_8VcAhq__032" }, { get: function(e, t) {
  return _t(), e[t];
} });
var Ae = ({ as: e, size: t = "md", className: i, ...s }) => import_react7.default.createElement(e ?? "svg", { className: E(Ve.icon, Ve[t], i), ...s });
var qo = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var ut = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var mt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + ut);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + ut;
      let i = globalThis.document.createTextNode(qo);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var U = new Proxy({ button: "style-module__button_XePJ4q__032", ghost: "style-module__ghost_XePJ4q__032", md: "style-module__md_XePJ4q__032", outline: "style-module__outline_XePJ4q__032", secondary: "style-module__secondary_XePJ4q__032", sm: "style-module__sm_XePJ4q__032", xs: "style-module__xs_XePJ4q__032" }, { get: function(e, t) {
  return mt(), e[t];
} });
var Q = ({ variant: e = "ghost", size: t = "md", className: i, children: s, ...d }) => import_react8.default.createElement("button", { className: E(U.button, U[e], U[t], i), ...d }, s);
var Mo = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var ht = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var ft = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + ht);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + ht;
      let i = globalThis.document.createTextNode(Mo);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var Pe = new Proxy({ iconButton: "style-module__iconButton_789LYW__032", md: "style-module__md_789LYW__032", sm: "style-module__sm_789LYW__032", xs: "style-module__xs_789LYW__032" }, { get: function(e, t) {
  return ft(), e[t];
} });
var yt = ({ variant: e = "ghost", size: t = "md", icon: i, className: s, isDisabled: d = false, children: u, ...m }) => import_react9.default.createElement("button", { className: E(U.button, Pe.iconButton, U[e], Pe[e], U[t], Pe[t], s), disabled: d, ...m }, i, u);
var Bo = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var gt = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var vt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + gt);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + gt;
      let i = globalThis.document.createTextNode(Bo);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var De = new Proxy({ tooltipContent: "style-module__tooltipContent_49y43q__032", wrapper: "style-module__wrapper_49y43q__032" }, { get: function(e, t) {
  return vt(), e[t];
} });
var xt = ({ label: e, isDisabled: t, children: i }) => t ? i : import_react10.default.createElement("span", { className: De.wrapper }, i, import_react10.default.createElement("span", { role: "tooltip", className: De.tooltipContent }, e));
var Go = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var wt = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var kt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + wt);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + wt;
      let i = globalThis.document.createTextNode(Go);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var Ct = new Proxy({ spin: "style-module__spin_NG8udW__032", spinner: "style-module__spinner_NG8udW__032" }, { get: function(e, t) {
  return kt(), e[t];
} });
var Tt = () => import_react11.default.createElement("div", { className: Ct.spinner });
var Ao = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var St = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var Pt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + St);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + St;
      let i = globalThis.document.createTextNode(Ao);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var Z = new Proxy({ box: "style-module__box_j6QF-q__032", icon: "style-module__icon_j6QF-q__032", input: "style-module__input_j6QF-q__032", labelText: "style-module__labelText_j6QF-q__032", md: "style-module__md_j6QF-q__032", sm: "style-module__sm_j6QF-q__032", wrapper: "style-module__wrapper_j6QF-q__032", xs: "style-module__xs_j6QF-q__032" }, { get: function(e, t) {
  return Pt(), e[t];
} });
var Ne = ({ id: e, label: t, name: i, title: s, size: d = "md", isChecked: u, isDisabled: m, onChange: x, children: g }) => import_react12.default.createElement("label", { className: E(Z.wrapper, Z[d]), htmlFor: e }, import_react12.default.createElement("input", { id: e, type: "checkbox", name: i, title: s, checked: u, disabled: m, onChange: x, className: Z.input }), import_react12.default.createElement("span", { className: Z.box }, import_react12.default.createElement("svg", { viewBox: "0 0 24 24", className: Z.icon }, import_react12.default.createElement("polyline", { points: "4 12 9 17 20 6" }))), (t || g) && import_react12.default.createElement("span", { className: Z.labelText }, t || g));
var Nt = (e) => {
  e = e.replace(/^#/, "");
  let t = parseInt(e.substring(0, 2), 16), i = parseInt(e.substring(2, 4), 16), s = parseInt(e.substring(4, 6), 16);
  return [t / 255, i / 255, s / 255];
};
var Et = (e) => {
  if (!(e == null ? void 0 : e[0])) return "#000000";
  let t = Math.round(e[0] * 255).toString(16).padStart(2, "0"), i = Math.round(e[1] * 255).toString(16).padStart(2, "0"), s = Math.round(e[2] * 255).toString(16).padStart(2, "0");
  return `#${t}${i}${s}`;
};
var Do = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var Ot = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var zt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + Ot);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + Ot;
      let i = globalThis.document.createTextNode(Do);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var se = new Proxy({ md: "style-module__md_zl_2Va__032", sm: "style-module__sm_zl_2Va__032", switchInput: "style-module__switchInput_zl_2Va__032", switchThumb: "style-module__switchThumb_zl_2Va__032", switchTrack: "style-module__switchTrack_zl_2Va__032", wrapper: "style-module__wrapper_zl_2Va__032", xs: "style-module__xs_zl_2Va__032" }, { get: function(e, t) {
  return zt(), e[t];
} });
var It = ({ id: e, label: t, size: i = "md", isChecked: s, isDisabled: d, onChange: u }) => import_react14.default.createElement("label", { className: E(se.wrapper, se[i]), htmlFor: e }, t && import_react14.default.createElement("span", null, t), import_react14.default.createElement("input", { id: e, type: "checkbox", checked: s, disabled: d, onChange: u, className: se.switchInput }), import_react14.default.createElement("span", { className: se.switchTrack }, import_react14.default.createElement("span", { className: se.switchThumb })));
var Jo = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var qt = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var Lt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + qt);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + qt;
      let i = globalThis.document.createTextNode(Jo);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var ae = new Proxy({ input: "style-module__input_tM-LSW__032", md: "style-module__md_tM-LSW__032", sm: "style-module__sm_tM-LSW__032", xs: "style-module__xs_tM-LSW__032" }, { get: function(e, t) {
  return Lt(), e[t];
} });
var Ho = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var Mt = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var jt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + Mt);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + Mt;
      let i = globalThis.document.createTextNode(Ho);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var Je = new Proxy({ inputVector: "style-module__inputVector_5zQSDq__032", inputs: "style-module__inputs_5zQSDq__032" }, { get: function(e, t) {
  return jt(), e[t];
} });
var Gt = ({ id: e, type: t, size: i = "md", value: s, placeholder: d, onChange: u, className: m }) => s ? import_react15.default.createElement("div", { className: E(Je.inputs, m) }, s.map((x, g) => import_react15.default.createElement("input", { key: g, type: "number", id: e, className: E(ae.input, Je.inputVector, ae[i]), style: { borderTopLeftRadius: g === 0 ? "var(--3dverse-border-radius-lg)" : void 0, borderTopRightRadius: g === s.length - 1 && s.length <= 4 || t === "mat4" && g === 3 ? "var(--3dverse-border-radius-lg)" : void 0, borderBottomLeftRadius: g === 0 && s.length <= 4 || t === "mat4" && g === 12 ? "var(--3dverse-border-radius-lg)" : void 0, borderBottomRightRadius: g === s.length - 1 ? "var(--3dverse-border-radius-lg)" : void 0 }, pattern: "[0-9]", placeholder: String(d == null ? void 0 : d[g]), value: x, onChange: (O2) => {
  s[g] = Number(O2.target.value), u(O2, s);
} }))) : null;
var Fo = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var Vt = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var At = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + Vt);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + Vt;
      let i = globalThis.document.createTextNode(Fo);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var Dt = new Proxy({ inputNumber: "style-module__inputNumber_w_gnsq__032" }, { get: function(e, t) {
  return At(), e[t];
} });
var Jt = ({ id: e, size: t = "md", value: i, placeholder: s, onChange: d, className: u }) => i ? import_react16.default.createElement("input", { id: e, type: "number", className: E(ae.input, Dt.inputNumber, ae[t], u), placeholder: s, value: i, onChange: (m) => d(m, Number(m.target.value)) }) : null;
var Ht = ({ id: e, value: t, defaultValue: i, type: s, size: d, onChange: u }) => s === "bool" ? import_react13.default.createElement(It, { id: e, size: d, isChecked: t, isDisabled: false, onChange: () => u({ target: { checked: !t } }, !t) }) : ["int", "uint", "float"].includes(s) ? import_react13.default.createElement(Jt, { id: e, size: d, value: t, placeholder: String(i), onChange: (m) => u(m, Number(m.target.value)) }) : ["vec2", "vec3", "vec4", "ivec2", "ivec3", "ivec4", "quat", "mat4"].includes(s) ? import_react13.default.createElement(Gt, { id: e, type: s, size: d, value: t, placeholder: i, onChange: (m) => u(m, t) }) : s === "color" ? import_react13.default.createElement("input", { id: e, type: "color", value: Et(t), onChange: (m) => u(m, Nt(m.target.value)) }) : import_react13.default.createElement("p", { style: { fontSize: "var(--3dverse-font-size-2xs)", color: "var(--3dverse-color-text-tertiary)" } }, "Type ", s, " not supported yet");
var Ro = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var Ft = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var Wt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + Ft);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + Ft;
      let i = globalThis.document.createTextNode(Ro);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var le = new Proxy({ button: "style-module__button_lJj5pq__032", fadeIn: "style-module__fadeIn_lJj5pq__032", icon: "style-module__icon_lJj5pq__032", item: "style-module__item_lJj5pq__032", open: "style-module__open_lJj5pq__032", panel: "style-module__panel_lJj5pq__032" }, { get: function(e, t) {
  return Wt(), e[t];
} });
var He = ({ isExpandable: e = true, style: t, className: i, children: s }) => import_react17.default.createElement(e ? "details" : "div", { className: E(le.item, i), style: t }, s);
var Fe = ({ isExpandable: e = true, children: t, className: i, style: s }) => import_react18.default.createElement(e ? "summary" : "div", { className: E(le.button, i), style: s }, t);
var We = ({ children: e, className: t, style: i }) => import_react19.default.createElement("div", { className: E(le.panel, t), style: i }, e);
var $o = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var Rt = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var Xt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + Rt);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + Rt;
      let i = globalThis.document.createTextNode($o);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var M = new Proxy({ accordion: "style-module__accordion_OiyPSG__032", accordionButton: "style-module__accordionButton_OiyPSG__032", accordionPanel: "style-module__accordionPanel_OiyPSG__032", container: "style-module__container_OiyPSG__032", formControl: "style-module__formControl_OiyPSG__032", formControlWrapper: "style-module__formControlWrapper_OiyPSG__032", formLabel: "style-module__formLabel_OiyPSG__032", innerContainer: "style-module__innerContainer_OiyPSG__032", resetAllButton: "style-module__resetAllButton_OiyPSG__032", resetButton: "style-module__resetButton_OiyPSG__032", spinnerContainer: "style-module__spinnerContainer_OiyPSG__032", subCategory: "style-module__subCategory_OiyPSG__032", subCategoryHeader: "style-module__subCategoryHeader_OiyPSG__032", subCategoryName: "style-module__subCategoryName_OiyPSG__032" }, { get: function(e, t) {
  return Xt(), e[t];
} });
var Qs = ({ userToken: e, cameraEntity: t }) => {
  var _a2, _b;
  let [i, s] = (0, import_react6.useState)((_a2 = t == null ? void 0 : t.camera) == null ? void 0 : _a2.dataJSON), [d, u] = (0, import_react6.useState)((_b = t == null ? void 0 : t.camera) == null ? void 0 : _b.dataJSON), [m, x] = (0, import_react6.useState)(null);
  (0, import_react6.useEffect)(() => {
    (async () => {
      if (!(t == null ? void 0 : t.camera)) return null;
      let b = t.camera.renderGraphRef;
      if (!b) return console.error("No render graph ref"), null;
      setUserToken(e);
      let { data: L } = await getAssetDescription({ asset_id: b, asset_container: "render_graphs" });
      if (!L) return console.error("No render graph description"), null;
      let k = or(L.inputDescriptor);
      s({ ...t.camera.dataJSON }), u(t.camera.dataJSON), x(k);
    })();
  }, [e, t]);
  let g = (f, b) => {
    var _a3;
    if (!((_a3 = t == null ? void 0 : t.camera) == null ? void 0 : _a3.dataJSON)) return null;
    t.camera.dataJSON[f] = b, u({ ...t.camera.dataJSON });
  }, O2 = (f, b) => {
    g(f, b);
  }, h = () => {
    var _a3;
    ((_a3 = t == null ? void 0 : t.camera) == null ? void 0 : _a3.dataJSON) && (t.camera.dataJSON = i ?? {}, u(i));
  }, c = (f, b = 0, L = "") => import_react6.default.createElement(We, { className: M.accordionPanel, style: { "--lineage-index": b, marginLeft: "calc(var(--lineage-index) * 1rem)" } }, import_react6.default.createElement("div", { className: M.accordion }, f.categories.map((k, W) => {
    let z = L + "/" + k.name + W, C = k.mainAttribute, G = C && ((d == null ? void 0 : d[C.name]) ?? C.default), R = k.categories.length > 0 || k.description.length > 0;
    return import_react6.default.createElement(He, { key: z, isExpandable: R, className: M.accordionItem }, import_react6.default.createElement(Fe, { isExpandable: R, className: M.accordionButton }, import_react6.default.createElement("div", { className: M.subCategory }, import_react6.default.createElement("div", { className: M.subCategoryHeader }, import_react6.default.createElement(Ae, { as: FaFolder, size: "xs", style: { color: "var(--3dverse-color-content-tertiary)", opacity: C && !G ? 0.25 : 0.5, visibility: R ? void 0 : "hidden" } }), import_react6.default.createElement("p", { className: M.subCategoryName, style: C ? { color: G ? "" : "var(--3dverse-color-content-quaternary)" } : {} }, k.name)), C && import_react6.default.createElement(Ne, { id: z + "-" + C.name, size: "xs", name: C.name, title: C.description, isChecked: G, onChange: (X) => g(C.name, X.target.checked) }))), import_react6.default.createElement("div", { style: C && !G ? { opacity: 0.5 } : {} }, c(k, b + 1, z)));
  })), f.description.length > 0 && import_react6.default.createElement(import_react6.default.Fragment, null, f.description.map((k, W) => {
    let z = (d == null ? void 0 : d[k.name]) ?? k.default, C = k.default, G = z === void 0 || z === C;
    return import_react6.default.createElement("div", { key: W, className: M.formControl }, import_react6.default.createElement("label", { title: k.description, htmlFor: k.name, className: M.formLabel }, k.name), import_react6.default.createElement("div", { className: M.formControlWrapper }, import_react6.default.createElement(Ht, { type: k.type, id: k.name, size: "xs", value: z, defaultValue: k.default, onChange: (R, X) => g(k.name, X) }), import_react6.default.createElement(xt, { label: "Reset", isDisabled: G }, import_react6.default.createElement(yt, { "aria-label": "Reset input", variant: "ghost", size: "xs", className: M.resetButton, icon: import_react6.default.createElement(Ae, { as: FaArrowRotateLeft, size: "xs" }), isDisabled: G, onClick: () => O2(k.name, C) }))));
  })));
  return import_react6.default.createElement("div", { className: "livelink-react-ui-component" }, t ? import_react6.default.createElement("div", { className: M.innerContainer }, m && c(m), import_react6.default.createElement(rr, { onClick: h })) : import_react6.default.createElement("div", { className: M.spinnerContainer }, import_react6.default.createElement(Tt, null)));
};
var or = (e) => {
  let t = { description: [], categories: [] };
  for (let i of e) {
    let { categories: s = [] } = i, d = t;
    for (let u of s) {
      let m = d.categories.find((x) => (x == null ? void 0 : x.name) && x.name === u);
      m || (m = { name: u, description: [], categories: [] }, d.categories.push(m)), d = m;
    }
    d.name && i.type === "bool" && i.name.toLowerCase().replaceAll(" ", "") === d.name.toLowerCase().replaceAll(" ", "") ? d.mainAttribute = i : d.description.push(i);
  }
  return t;
};
var rr = ({ onClick: e }) => import_react6.default.createElement(Q, { variant: "ghost", size: "xs", className: M.resetAllButton, onClick: e }, "Reset all");
var nr = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var Ut = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var Yt = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + Ut);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + Ut;
      let i = globalThis.document.createTextNode(nr);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var de = new Proxy({ circleShadow: "style-module__circleShadow_BHEzva__032", container: "style-module__container_BHEzva__032", icon: "style-module__icon_BHEzva__032", movingLightHint: "style-module__movingLightHint_BHEzva__032", pulseAnimation: "style-module__pulseAnimation_BHEzva__032", skeleton: "style-module__skeleton_BHEzva__032" }, { get: function(e, t) {
  return Yt(), e[t];
} });
var q = 40;
var Qt = 1;
var K = 3;
var ce = 2;
var ee = 6;
var Zt = 0;
var Ye = q * 2 + 20;
var pe = `${Ye}px`;
var ar = { position: "relative", width: pe, height: pe };
var Kt = { position: "absolute" };
var Ee = "#837cdf60";
var eo = "#FFC700";
var lr = "#B32D27";
var dr = "#262CCD";
var da = ({ sun: e, hasShadowToggle: t = true }) => {
  let i = (0, import_react20.useRef)(null), s = (0, import_react20.useRef)(null), d = (0, import_react20.useRef)(null), [u, m] = (0, import_react20.useState)({}), [x, g] = (0, import_react20.useState)(!!(e == null ? void 0 : e.shadow_caster));
  (0, import_react20.useEffect)(() => {
    g(!!(e == null ? void 0 : e.shadow_caster));
  }, [e]);
  let O2 = () => {
    if (!e) return "No sun entity";
    e.shadow_caster ? (m(e.shadow_caster), e.shadow_caster = void 0, g(false)) : (e.shadow_caster = u, g(true));
  };
  return (0, import_react20.useEffect)(() => {
    let h = i.current, c = h == null ? void 0 : h.getContext("2d");
    if (!h || !c) return;
    c.translate(0.5, 0.5), c.strokeStyle = Ee, c.fillStyle = Ee, c.lineWidth = Qt;
    let f = h.width / 2, b = h.height / 2;
    c.beginPath(), c.arc(f, b, q, 0, 2 * Math.PI), c.stroke(), c.beginPath(), c.arc(f, b, K, 0, 2 * Math.PI), c.fill(), c.strokeStyle = Ee, c.beginPath(), c.moveTo(f - q, b), c.lineTo(f - (K + ce), b), c.stroke(), c.strokeStyle = lr, c.beginPath(), c.moveTo(f + (K + ce), b), c.lineTo(f + q, b), c.stroke(), c.strokeStyle = Ee, c.beginPath(), c.moveTo(f, b - q), c.lineTo(f, b - (K + ce)), c.stroke(), c.strokeStyle = dr, c.beginPath(), c.moveTo(f, b + (K + ce)), c.lineTo(f, b + q), c.stroke();
  }, []), (0, import_react20.useEffect)(() => {
    if (!e) return;
    let h = s.current, c = h == null ? void 0 : h.getContext("2d");
    if (!h || !c) return;
    h.style.cursor = "pointer", c.fillStyle = eo, c.lineWidth = Qt, c.strokeStyle = eo, c.shadowBlur = 2, c.shadowOffsetX = 5, c.shadowOffsetY = 5;
    let f = h.width / 2, b = h.height / 2, L = false, [k, W] = hr(e.global_transform.eulerOrientation), z = k * q + f, C = W * q + b, G = 0, R = ({ x: w, y: r }) => {
      let o = Math.sqrt(Math.pow(w - f, 2) + Math.pow(r - b, 2));
      if (o > q) {
        let n = Math.atan2(r - b, w - f), a = Math.cos(n) * q, l = Math.sin(n) * q;
        z = f + a, C = b + l, G = q;
      } else z = w, C = r, G = o;
    }, X = () => {
      h.style.cursor = "grabbing", c.shadowColor = "rgba(0, 0, 0, 0.9)";
    }, Y = () => {
      h.style.cursor = "pointer", c.shadowColor = "rgba(0, 0, 0, 0)";
    }, H = ({ x: w, y: r }) => {
      let o = d.current;
      o && (o.style.maskPosition = `${w - Ye / 2}px ${r - Ye / 2}px`);
    }, oe = () => {
      c.clearRect(0, 0, h.width, h.height), c.beginPath(), c.arc(z, C, ee, 0, 2 * Math.PI), c.fill();
      let w = Math.atan2(C - b, z - f), r = Math.cos(w) * (K + ce), o = Math.sin(w) * (K + ce), n = Math.cos(w) * (ee + Zt), a = Math.sin(w) * (ee + Zt);
      c.beginPath(), c.moveTo(f + r, b + o), c.lineTo(z - n, C - a), c.stroke();
      let l = 12, p = 3.5;
      for (let y = 0; y < l; y++) {
        let _ = y * 2 * Math.PI / l, I = z + Math.cos(_) * ee, v = C + Math.sin(_) * ee, ve = z + Math.cos(_) * (ee + p), be = C + Math.sin(_) * (ee + p);
        c.beginPath(), c.moveTo(I, v), c.lineTo(ve, be), c.stroke();
      }
    }, P2 = () => {
      if (!e) return;
      oe();
      let w = [(z - f) / q, (C - b) / q, 1 - G / q];
      e.global_transform.eulerOrientation = mr(w);
    }, ge = (w) => {
      L = true, w.stopPropagation(), X(), requestAnimationFrame(P2), h.addEventListener("pointerup", T), h.addEventListener("pointermove", me), h.addEventListener("pointerleave", N);
    }, T = (w) => {
      w.preventDefault(), w.stopPropagation(), L && (L = false, R({ x: w.offsetX, y: w.offsetY }), Y(), requestAnimationFrame(P2), h.removeEventListener("pointerup", T), h.removeEventListener("pointermove", me), h.removeEventListener("pointerleave", N));
    }, me = (w) => {
      w.preventDefault(), w.stopPropagation(), H({ x: w.offsetX, y: w.offsetY }), L && (R({ x: w.offsetX, y: w.offsetY }), requestAnimationFrame(P2));
    }, N = (w) => {
      w.stopPropagation(), H({ x: -100, y: -100 });
    };
    return requestAnimationFrame(oe), h.addEventListener("pointerdown", ge), () => {
      h.removeEventListener("pointerdown", ge), h.removeEventListener("pointerup", T), h.removeEventListener("pointermove", me), h.removeEventListener("pointerleave", N);
    };
  }, [e]), import_react20.default.createElement("div", { className: `${de.container} livelink-react-ui-component` }, import_react20.default.createElement("div", { style: ar }, import_react20.default.createElement("div", { style: { opacity: e ? 1 : 0 } }, import_react20.default.createElement(_r, { ref: d }), import_react20.default.createElement(pr, null), import_react20.default.createElement("canvas", { width: pe, height: pe, ref: i, style: Kt }), import_react20.default.createElement("canvas", { width: pe, height: pe, ref: s, style: Kt })), !e && import_react20.default.createElement(ur, null)), t && import_react20.default.createElement(cr, { isDisabled: false, isChecked: x, onChange: O2 }));
};
var cr = ({ isDisabled: e, isChecked: t, onChange: i }) => import_react20.default.createElement(Ne, { size: "xs", isDisabled: e, isChecked: t, onChange: i }, "Shadows");
var pr = () => import_react20.default.createElement("div", { className: de.circleShadow, role: "presentation" });
var _r = (0, import_react20.forwardRef)((e, t) => import_react20.default.createElement("div", { ref: t, className: de.movingLightHint, role: "presentation" }));
var ur = () => import_react20.default.createElement("div", { className: de.skeleton, style: { width: `${q * 2}px` } }, import_react20.default.createElement(FaRegSun, { className: de.icon }));
var mr = (e) => {
  let [t, i] = e, s = Math.sqrt(t * t + i * i), d = [t / s, i / s], u = s === 0 ? 0 : Math.atan2(d[0], d[1]), m = (1 - s) * -90, x = u * 180 / Math.PI;
  return [m, x, 0];
};
var hr = (e) => {
  let [t, i] = e, s = i * Math.PI / 180, d = Math.max(-1, Math.min(t / 90 + 1, 1)), u = -Math.cos(s + Math.PI / 2) * d, m = Math.sin(s + Math.PI / 2) * d;
  return [u, m];
};
var ua = ({ size: e = 100, perspective: t = "none", viewport: i, children: s }) => {
  let { viewport: d } = (0, import_react21.useContext)(O), [u, m] = (0, import_react21.useState)([0, 0, 0]), x = i || d;
  if ((0, import_react21.useEffect)(() => {
    if (!x) return;
    let O2 = new $e({ viewport: x, setCubeOrientation: m });
    return x.addOverlay({ overlay: O2 }), () => {
      x.removeOverlay({ overlay: O2 });
    };
  }, [x]), import_react21.Children.count(s) !== 6) throw new Error("CameraCubeWidget must have exactly 6 children");
  let g = import_react21.Children.toArray(s);
  return import_react21.default.createElement(import_react21.default.Fragment, null, import_react21.default.createElement("style", null, `
                    .scene {
                        width: ${e}px;
                        height: ${e}px;
                        perspective: ${t};
                    }

                    .cube {
                        width: 100%;
                        height: 100%;
                        position: relative;
                        transform-style: preserve-3d;
                        transform: translateZ(-${e}px);
                    }

                    .cube__face {
                        position: absolute;
                        width: ${e}px;
                        height: ${e}px;
                        cursor: pointer;
                    }

                    .cube__face--bottom {
                        box-shadow: 0px 0px 31px 10px #381e1e5f;
                    }

                    .cube__face--front  { transform: rotateY(  0deg) translateZ(${Math.floor(e * 0.5)}px); }
                    .cube__face--right  { transform: rotateY( 90deg) translateZ(${Math.floor(e * 0.5)}px); }
                    .cube__face--back   { transform: rotateY(180deg) translateZ(${Math.floor(e * 0.5)}px); }
                    .cube__face--left   { transform: rotateY(-90deg) translateZ(${Math.floor(e * 0.5)}px); }
                    .cube__face--top    { transform: rotateX( 90deg) translateZ(${Math.floor(e * 0.5)}px); }
                    .cube__face--bottom { transform: rotateX(-90deg) translateZ(${Math.floor(e * 0.5)}px); }
                `), import_react21.default.createElement("div", { className: "scene livelink-react-ui-component" }, import_react21.default.createElement("div", { className: "cube", style: { transform: `rotateX(${u[0]}deg) rotateY(${u[1]}deg) rotateZ(${u[2]}deg)` } }, import_react21.default.createElement("div", { className: "cube__face cube__face--front" }, g[0]), import_react21.default.createElement("div", { className: "cube__face cube__face--back" }, g[1]), import_react21.default.createElement("div", { className: "cube__face cube__face--right" }, g[2]), import_react21.default.createElement("div", { className: "cube__face cube__face--left" }, g[3]), import_react21.default.createElement("div", { className: "cube__face cube__face--top" }, g[4]), import_react21.default.createElement("div", { className: "cube__face cube__face--bottom" }, g[5]))));
};
var _e2, _t2, _a;
var $e = (_a = class {
  constructor({ viewport: t, setCubeOrientation: i }) {
    __privateAdd(this, _e2);
    __privateAdd(this, _t2);
    __privateSet(this, _e2, t), __privateSet(this, _t2, i);
  }
  draw() {
    if (!__privateGet(this, _e2).camera_projection) return null;
    let [t, i, s] = __privateGet(this, _e2).camera_projection.world_euler_orientation;
    return __privateGet(this, _t2).call(this, [t, -i, s]), null;
  }
  resize() {
  }
  release() {
  }
}, _e2 = new WeakMap(), _t2 = new WeakMap(), _a);
var oo = () => import_react23.default.createElement("svg", { viewBox: "0 0 40 56", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, import_react23.default.createElement("path", { d: "m.007 27.319 12.303 12.03V55.32L0 43.28l.007-15.962Z", fill: "url(#3dverse-logo-rocket-dark_gradient1)" }), import_react23.default.createElement("path", { d: "M39.993 27.319 27.69 39.349V55.32L40 43.28l-.007-15.962Z", fill: "url(#3dverse-logo-rocket-dark_gradient2)" }), import_react23.default.createElement("path", { d: "M33.257 18.356v-5.668c0-16.917-26.514-16.917-26.514 0v5.679L0 27.319V43.28l12.743-15.97v7.055l7.256 7.096 7.258-7.096V27.31L40 43.28V27.31l-6.743-8.955Zm-9.081.01h-8.352V12.44c0-5.973 8.352-5.973 8.352 0v5.927Z", fill: "currentColor" }), import_react23.default.createElement("defs", null, import_react23.default.createElement("linearGradient", { id: "3dverse-logo-rocket-dark_gradient1", x1: "-.64", y1: "29.494", x2: "17.183", y2: "60.499", gradientUnits: "userSpaceOnUse" }, import_react23.default.createElement("stop", { offset: ".34", stopColor: "currentColor", stopOpacity: ".7" }), import_react23.default.createElement("stop", { offset: ".96", stopColor: "currentColor", stopOpacity: ".1" })), import_react23.default.createElement("linearGradient", { id: "3dverse-logo-rocket-dark_gradient2", x1: "34.233", y1: "22.311", x2: "8.55", y2: "47.994", gradientUnits: "userSpaceOnUse" }, import_react23.default.createElement("stop", { offset: ".34", stopColor: "currentColor", stopOpacity: ".7" }), import_react23.default.createElement("stop", { offset: ".96", stopColor: "currentColor", stopOpacity: ".1" }))));
var br = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var ro = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var no = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + ro);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + ro;
      let i = globalThis.document.createTextNode(br);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var te = new Proxy({ container: "style-module__container_N2j2sa__032", glowEffectStyle: "style-module__glowEffectStyle_N2j2sa__032", label: "style-module__label_N2j2sa__032", loaderProgressBarIndeterminate: "style-module__loader-progress-bar-indeterminate_N2j2sa__032", loaderProgressBarIndeterminateContainer: "style-module__loaderProgressBarIndeterminateContainer_N2j2sa__032", loaderProgressBarIndeterminateTrack: "style-module__loaderProgressBarIndeterminateTrack_N2j2sa__032", logoContainer: "style-module__logoContainer_N2j2sa__032" }, { get: function(e, t) {
  return no(), e[t];
} });
var Sa = ({ stage: e = "Connecting to 3dverse..." }) => import_react22.default.createElement("div", { className: `${te.container} ${te.glowEffectStyle} livelink-react-ui-component` }, import_react22.default.createElement("div", { className: te.logoContainer }, import_react22.default.createElement(oo, null)), import_react22.default.createElement("div", { className: te.loaderProgressBarIndeterminateContainer, role: "progressbar" }, import_react22.default.createElement("div", { className: te.loaderProgressBarIndeterminateTrack })), e && import_react22.default.createElement("p", { className: te.label }, e));
var ao = ko(io());
var Ke = ({ options: e, onStart: t, onMove: i, onEnd: s }) => {
  let [d, u] = (0, import_react25.useState)(null);
  return (0, import_react25.useEffect)(() => {
    let m = wr(e);
    return u(m), () => {
      m.destroy(), u(null);
    };
  }, [e]), Ze(d, "start", t), Ze(d, "move", i), Ze(d, "end", s), null;
};
function Ze(e, t, i) {
  (0, import_react25.useEffect)(() => {
    if (!i || !e) return;
    let s = (d, u) => {
      i(u);
    };
    return e.on(t, s), () => {
      e.off(t, s);
    };
  }, [e, t, i]);
}
function wr(e) {
  let t = {};
  return e && (t = { ...e }, e.container && (t.zone = e.container), e.isHidden !== void 0 && (t.dataOnly = e.isHidden)), ao.default.create(t);
}
var kr = globalThis["__css-content-80c61df4974603c2d6b323713b64b99d__"];
var lo = globalThis["__css-digest-80c61df4974603c2d6b323713b64b99d__"];
var co = () => {
  setTimeout(() => {
    if (!globalThis.document) return;
    let e = globalThis.document.querySelector("head");
    e && e.shadowRoot && (e = e.shadowRoot), e || (e = globalThis.document.head);
    let t = e.querySelector("#_" + lo);
    if (!t) {
      t = globalThis.document.createElement("style"), t.id = "_" + lo;
      let i = globalThis.document.createTextNode(kr);
      t.appendChild(i), e.appendChild(t);
    }
  }, 0);
};
var F = new Proxy({ blueButtonColor: "style-module__blueButtonColor_dqwhla__032", gamepadButton: "style-module__gamepadButton_dqwhla__032", gamepadCrossContainer: "style-module__gamepadCrossContainer_dqwhla__032", greenButtonColor: "style-module__greenButtonColor_dqwhla__032", redButtonColor: "style-module__redButtonColor_dqwhla__032", yellowButtonColor: "style-module__yellowButtonColor_dqwhla__032" }, { get: function(e, t) {
  return co(), e[t];
} });
var Ha = () => {
  let { instance: e } = (0, import_react24.useContext)(P), t = (0, import_react24.useRef)(null), i = (0, import_react24.useRef)(null), s = (0, import_react24.useRef)(null);
  (0, import_react24.useEffect)(() => {
    e && (t.current = e.devices.gamepads_registry.createVirtualGamepad());
  }, [e]);
  let d = (0, import_react24.useCallback)((h) => (c) => {
    let f = t.current;
    if (!f) return;
    let { x: b, y: L } = c.vector;
    f.setJoystick({ joystick: h, value: [-b, -L] });
  }, []), u = (0, import_react24.useCallback)((h) => () => {
    let c = t.current;
    c && c.setJoystick({ joystick: h, value: [0, 0] });
  }, []), m = (0, import_react24.useCallback)((h) => (c) => {
    c.preventDefault();
    let f = t.current;
    f && f.setButton({ button: h, isPressed: true });
  }, []), x = (0, import_react24.useCallback)((h) => () => {
    let c = t.current;
    c && c.setButton({ button: h, isPressed: false });
  }, []), g = (0, import_react24.useCallback)((h) => (c) => {
    c.preventDefault();
    let f = t.current;
    f && f.setAxis({ axis: h, value: 1 });
  }, []), O2 = (0, import_react24.useCallback)((h) => () => {
    let c = t.current;
    c && c.setAxis({ axis: h, value: 0 });
  }, []);
  return e ? import_react24.default.createElement(import_react24.default.Fragment, null, import_react24.default.createElement("div", { ref: i, style: { width: "50%", height: "100%" } }, i.current && import_react24.default.createElement(Ke, { options: { container: i.current, mode: "static", position: { left: "15%", bottom: "15%" }, color: "orange", size: 100 }, onMove: d(fn.Left), onEnd: u(fn.Left) })), import_react24.default.createElement("div", { ref: s, style: { position: "absolute", top: 0, right: 0, width: "50%", height: "100%" } }, s.current && import_react24.default.createElement(Ke, { options: { container: s.current, color: "lime", size: 100, mode: "dynamic" }, onMove: d(fn.Right), onEnd: u(fn.Right) })), import_react24.default.createElement("div", { className: `${F.gamepadCrossContainer}` }, import_react24.default.createElement(Q, { className: `${F.gamepadButton} ${F.greenButtonColor}`, onPointerDown: m(vl.A), onPointerUp: x(vl.A) }, "A"), import_react24.default.createElement(Q, { className: `${F.gamepadButton} ${F.yellowButtonColor}`, onPointerDown: m(vl.Y), onPointerUp: x(vl.Y) }, "Y"), import_react24.default.createElement(Q, { className: `${F.gamepadButton} ${F.blueButtonColor}`, onPointerDown: g(et.LeftTrigger), onPointerUp: O2(et.LeftTrigger) }, "LT"), import_react24.default.createElement(Q, { className: `${F.gamepadButton} ${F.redButtonColor}`, onPointerDown: g(et.RightTrigger), onPointerUp: O2(et.RightTrigger) }, "RT"))) : null;
};
typeof window < "u" && (window.__LIVELINK__ || (window.__LIVELINK__ = {}), Object.prototype.hasOwnProperty.call(window.__LIVELINK__, "@3dverse/livelink-react-ui") ? console.warn("⚠️ WARNING ⚠️ Multiple instances of Livelink React UI being imported.") : window.__LIVELINK__["@3dverse/livelink-react-ui"] = "0.3.2");
export {
  an as InactivityWarning,
  Lr as LivelinkReactUIProvider,
  Sa as LoadingOverlay,
  Qs as RenderGraphSettings,
  da as SunPositionPicker,
  ua as ViewCube,
  Ha as VirtualGamepad,
  Ke as VirtualJoystick
};
//# sourceMappingURL=@3dverse_livelink-react-ui.js.map
